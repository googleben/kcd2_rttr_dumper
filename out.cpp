//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StalkerLocation_obsolete : int {
    None              = 0,
    CloseToKaterina   = 1,
    InGeneralBathArea = 2,
    FarAway           = 3,
    Done              = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_BodyPartOverride* {
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::entitymodule::S_EquipmentPart* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Hibernation : int {
    Active     = 0,
    Hibernated = 1,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::combatmodule::C_CombatComboDatabase : class wh::combatmodule::C_CombatTreeKeyIndexedDatabase<class wh::combatmodule::C_CombatCombo>, class wh::databasemodule::C_ObjectDatabase<class wh::combatmodule::C_CombatCombo,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::combatmodule::C_CombatCombo,class std::allocator<class wh::combatmodule::C_CombatCombo> > const >;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LockpickableEntity *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::TypeDescriptors::S_Type* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::I_CombatSoul* {
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::xgenaimodule::S_DogPoint {
    0x8  : Position  : struct Vec3_tpl<float>;
    0x14 : Direction : struct Vec3_tpl<float>;
    0x20 : Type      : enum wh::xgenaimodule::E_DogPointType::Type;
    0x24 : Aux       : struct Vec2_tpl<int>;
    0x30 : Guid      : unsigned __int64;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatDetour : int {
    None                        = 0,
    SukDismounting              = 1,
    GetWeaponFromSuk            = 2,
    WaitingForHenryToEnterArena = 3,
    WaitingForSeminChat         = 4,
    Fighting                    = 5,
    SpeakToSukAfterFight        = 6,
    SeminWashFace               = 7,
    Done                        = 8,
    Canceled                    = 9,
};

//size in bytes: 0x70
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartObjectHelperSetAnimation {
    0x0  : HelperId             : int;
    0x4  : HelperTransformLocal : struct QuatT_tpl<float>;
    0x20 : FragmentGuid         : struct CryGUID;
    0x30 : StartTransform       : struct QuatT_tpl<float>;
    0x4c : AnimRelativeMovement : struct QuatT_tpl<float>;
    0x68 : HasAlignProcclip     : bool;
    //Getter: WHGame.dll+0x320c958
    get  : Checks               : class CryStringT<char>;
    //Getter: WHGame.dll+0x320c9fc
    get  : ProjectedTargetMode  : class CryStringT<char>;
    //Getter: WHGame.dll+0x320c914
    get  : CheckMNMTolerance    : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HelpingPtacek : int {
    None             = 0,
    PorazilStrazeSam = 1,
    PomahalPtackovi  = 2,
    Nepomohl         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VillageReinforcementsFlanks : int {
    Flanking  = 0,
    Attacking = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::S_LookAtOffset* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_ItemFilterType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithBandit : int {
    None                       = 0,
    StartedDuringAmbush        = 1,
    StartedInCamp              = 2,
    Completed                  = 3,
    LeftWithoutSpeakingWithHim = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasSoulArchetype* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_CatWaypointRecord* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PaviseAllies : int {
    None        = 0,
    SetUpPavise = 1,
    Wait        = 2,
    Hodor       = 3,
    Done        = 4,
};

//size in bytes: 0x1a0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AnimActionBase : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetRelationContext* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoubojKola : int {
    None       = 0,
    PrvniKolo  = 1,
    DruheKolo  = 2,
    Finale     = 3,
    Dobojovano = 4,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::rpgmodule::S_Statistic {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum streamedUntilExposed : int {
    StreamedInitial = 0,
    Unstreamed      = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_DeltaMovementParamsNode* {
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::rpgmodule::C_Timer : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimerState::Type> {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50 : State         : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_TimerState::Type>*;
    0x90 : Duration      : class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeSpan>*;
    0xd0 : TimeType      : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_TimeType::Type>*;
    //Getter: WHGame.dll+0x2b7d6a4
    get  : RemainingTime : __int64;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x168
//pointer dimension: 0
class wh::rpgmodule::C_WeaponPresetOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul>, class wh::rpgmodule::C_SoulPresetOverride {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Souls         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xe8  : PriorityEquip : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x128 : WeaponPreset  : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_WeaponPresetGUID>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_RandomEventMapIcon {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::storm::operation::Remove {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithBailiff : int {
    None    = 0,
    Started = 1,
    Truth   = 2,
    Lie     = 3,
    Aborted = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<struct wh::playermodule::S_Tutorial>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PechasKemp : int {
    None           = 0,
    FindPechasCamp = 1,
    GoToPechasCamp = 2,
    TalkToPecha    = 3,
    Completed      = 4,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::C_WeaponPresetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::entitymodule::C_WeaponPreset,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::entitymodule::C_WeaponPreset,class std::allocator<class wh::entitymodule::C_WeaponPreset> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerOpenShop : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get : Role       : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MikusHat : int {
    NotInTheWorld        = 0,
    OnTheCrossroad       = 1,
    WithPlayer           = 2,
    WithMikusDuringQuest = 3,
    WithMikusAfterQuest  = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<struct wh::rpgmodule::S_BuffDefinitionAITag> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionAITag> {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkedToLichtenstein : int {
    None                 = 0,
    TalkedToLichtenstein = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum cooking : int {
    meat      = 0,
    vegetable = 1,
    wine      = 2,
    herb      = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetHead : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_SetCharacterComponentBase {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vokrakProgress : int {
    None         = 0,
    Started      = 1,
    Talked       = 2,
    Pickpocketed = 3,
    Canceled     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HankaBanditsBarkingProgress : int {
    None       = 0,
    Active     = 1,
    AlmostDone = 2,
    Done       = 3,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::entitymodule::clothing::C_JointElement : class wh::entitymodule::clothing::C_ElementBase, class wh::entitymodule::clothing::C_JointElementBase {
    0x8  : Name                 : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get  : AttachmentName       : class CryStringT<char>;
    0x10 : Joint                : class std::optional<class CryStringT<char> >;
    0x4c : UsesRelativePosition : class tiny::optional<bool,0,0>;
    0x4d : UsesRelativeRotation : class tiny::optional<bool,0,0>;
    0x28 : Position             : class std::optional<struct Vec3_tpl<float> >;
    0x38 : Rotation             : class std::optional<struct Quat_tpl<float> >;
    0x50 : SimulationParams     : class std::shared_ptr<struct SimulationParams>;
};

//size in bytes: 0x290
//pointer dimension: 0
class wh::playermodule::C_MinigameTutorialNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Tutor         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x100 : Domain        : class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_MinigameTutorialDomain::Type>*;
    0x140 : InitialPhase  : class wh::conceptmodule::C_TypedPortRef<int>*;
    0x180 : OnTutorialEnd : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c0 : OnPhaseStart  : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x200 : Phase         : class wh::conceptmodule::C_TypedPortRef<int>*;
    0x240 : Tracker       : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LadderStatus : int {
    Active   = 0,
    Disabled = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SVR1_GobletProgress : int {
    None             = 0,
    InSlot           = 1,
    PlayerQuest      = 2,
    Bailiff          = 3,
    PlayerAfterQuest = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MatejWeaponHoldership : int {
    None            = 0,
    Equipped        = 1,
    RewardedHis     = 2,
    RewardedPlayers = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InnerCourtyardBehaviors : int {
    None            = 0,
    ZizkaOrders     = 1,
    ExecutingOrders = 2,
    FightForTower   = 3,
    Done            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_BloodMask* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::C_DialogManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrastaBehavior : int {
    None     = 0,
    Barks    = 1,
    Finished = 2,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<struct wh::environmentmodule::S_WeatherProfileData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::entitymodule::S_LayerProfile,class std::allocator<struct wh::entitymodule::S_LayerProfile> > >* {
};

//size in bytes: 0x218
//pointer dimension: 0
class wh::xgenaimodule::C_PerceptibleVolumeEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Position        : class wh::conceptmodule::C_TypedPortRef<struct Vec3_tpl<float> >*;
    0xd0  : Label           : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x110 : Radius          : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x150 : Height          : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : Conspicuousness : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x1d0 : Visibility      : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MusaDitrichInTent : int {
    None               = 0,
    InTent24_7         = 1,
    InTent_DaytimeOnly = 2,
    InTent_MusaOnly    = 3,
    ForcedForPolylog   = 4,
    Finished           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AsiDoVeziTalisman : int {
    None                = 0,
    Slot                = 1,
    Player              = 2,
    UsedInBlacksmithing = 3,
    Finish              = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FastTravelToCamp : int {
    None              = 0,
    FastTravelOnHorse = 1,
    FastTravelByFoot  = 2,
    Finished          = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_BlacksmithTemperatureDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::playermodule::C_BlacksmithTemperature>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::playermodule::C_BlacksmithTemperature>,class std::allocator<class std::shared_ptr<class wh::playermodule::C_BlacksmithTemperature> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x50
//pointer dimension: 0
struct wh::playermodule::S_PopupTutorial : struct wh::playermodule::S_Tutorial {
    0x8  : Name                : class CryStringT<char>;
    0x10 : RemindAfterLongTime : bool;
    0x20 : GameModeFilter      : enum wh::game::E_GameMode::Type;
    0x11 : Repeatable          : bool;
    0x18 : RepeatCooldown      : struct wh::framework::S_TimeSpan;
    0x28 : Text                : class CryStringT<char>;
    0x30 : Priority            : unsigned int;
    0x34 : DialogueSync        : bool;
    0x35 : DisableCloseButton  : bool;
    0x38 : WindowSize          : int;
    0x40 : DurationOverride    : class CryStringT<char>;
    0x48 : OverlayLink         : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SiegeFlavorDialog : int {
    None     = 0,
    Talking  = 1,
    Finished = 2,
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::dialogmodule::S_DialogParams {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringTheRing : int {
    None                 = 0,
    Start                = 1,
    GetRing              = 2,
    BringRing            = 3,
    Delivered            = 4,
    DeliveredBanditAlive = 5,
    Aborted              = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Prepadeni_hitCounts : int {
    None = 0,
    Hit  = 1,
    Won  = 2,
    Lost = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_TimeOfDayState::Type>* {
};

//size in bytes: 0x3b8
//pointer dimension: 0
class wh::xgenaimodule::C_PerceptionTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name                    : class CryStringT<char>;
    0x18  : RuntimeState            : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                   : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView               : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive                : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : PerceivingSouls         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xf8  : PerceptibleSouls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x138 : PerceptibleVolumeLabels : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >*;
    0x178 : OnSeenShortCone         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1b8 : OnAllSeenShortCone      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1f8 : OnSeenLongCone          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x238 : OnAllSeenLongCone       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x278 : OnUnseen                : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x2b8 : OnAllUnseen             : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x2f8 : PerceivingSoul          : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x338 : PerceptibleSoul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NpcMovementState : int {
    None                      = 0,
    GoesToStartingDestination = 1,
    GoesToTargetDestination   = 2,
    Waits                     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum donaskaKnihy : int {
    None         = 0,
    Active       = 1,
    updateTrosky = 2,
    doneRychta   = 3,
    doneTrosky   = 4,
    Canceled     = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_GameStart* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af7030
enum enum wh::dialogmodule::data::E_BranchType : unsigned char {
    normal         = 0,
    obsolete       = 1,
    greeting       = 2,
    monolog        = 3,
    ingame         = 4,
    ingame monolog = 5,
    denial         = 6,
    chat           = 7,
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::rpgmodule::C_SoulPropertyTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x140 : Tracker      : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanExploreCimburk : int {
    None            = 0,
    Bark            = 1,
    ExploreCimburk1 = 2,
    ExploreCimburk2 = 3,
    Done            = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionSearchRequestFlags : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase {
    0x8 : DataSource    : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc : Negate        : bool;
    //Getter: WHGame.dll+0x19a0f90
    get : RequiredFlags : unsigned int;
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::framework::T_TimeoutTimer<struct wh::rpgmodule::T_GameWorldTimePolicy> {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::rpgmodule::S_PerkDefinitionId {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::conceptmodule::C_Module : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::rpgmodule::C_PerkList {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportToRoza : int {
    None                  = 0,
    LeftMaleshovWithCapon = 1,
    ReportToRoza          = 2,
    RozaIsCaptured        = 3,
    RozaIsAtMalesov       = 4,
    FreedRozaAtMalesov    = 5,
    GaveBookBackInM37     = 6,
    GaveBookBackInM45     = 7,
    RozaHasNoBook         = 8,
    RozaFoundBookHerself  = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatable : int {
    none      = 0,
    Started   = 1,
    updated   = 2,
    completed = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsInChangedEquipment* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DoorAnimSet* {
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CartActionOut : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_CartActionBase {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SmartObjectAsset* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_CustomSelector* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EdgePort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum finale_lordsDialog : int {
    None        = 0,
    Approaching = 1,
    Bowing      = 2,
    Talking     = 3,
    Done        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Input* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SmartObject* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetUiName* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuadrupleUpdate : int {
    none      = 0,
    started   = 1,
    updated1a = 2,
    updated1b = 3,
    updated2  = 4,
    completed = 5,
};

//size in bytes: 0x128
//pointer dimension: 0
struct wh::entitymodule::S_HoodItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_ArmorItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    //Getter: WHGame.dll+0x19c4ab0
    get   : DefenseStab                    : float;
    //Getter: WHGame.dll+0x19c4bf0
    get   : DefenseSlash                   : float;
    //Getter: WHGame.dll+0x19a24c0
    get   : DefenseSmash                   : float;
    0xfc  : StrReq                         : float;
    0x100 : Noise                          : float;
    0x104 : MaxStatus                      : int;
    0x108 : FactionId                      : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<class std::shared_ptr<class wh::dialogmodule::data::C_Command>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_UnstanceActionOut* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Diggers : int {
    None = 0,
    Dig  = 1,
    Hide = 2,
    Flee = 3,
    Done = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::C_FactionBase *>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudCrimeList* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestSkirmish : int {
    None       = 0,
    InProgress = 1,
    GroupAWon  = 2,
    GroupBWon  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionItemSetAside* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamMill : int {
    StreamedDefault  = 0,
    Unstreamed       = 1,
    StreamedAfterU34 = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrainerStateKH : int {
    InDayCycle       = 0,
    OnTheWay         = 1,
    AtTrainingGround = 2,
    Duel             = 3,
    Training         = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::guimodule::S_CutsceneProfile* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionBase : class wh::xgenaimodule::NPCState::I_FilteringCondition {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc : Negate     : bool;
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemQAMContainer : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Charisma         : float;
    0x58 : Slots            : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ItemPerception : int {
    None          = 0,
    VolumeSpawned = 1,
    WithoutVolume = 2,
    SeenByKonsel  = 3,
    Finish        = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_CombatTutorialFeature {
};

//size in bytes: 0x650
//pointer dimension: 0
struct wh::rpgmodule::S_SoulPersistentData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WolvesNearHideout : int {
    None           = 0,
    WolvesAppeared = 1,
    SeenWolves     = 2,
    Done           = 3,
    Failed         = 4,
    Aborted        = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_DisableMinigameEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum henryPretendsToBe : int {
    none    = 0,
    german  = 1,
    italian = 2,
    french  = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ProfileStateTrigger> {
};

//size in bytes: 0x210
//pointer dimension: 0
class wh::xgenaimodule::C_EnableBehavior : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Behavior     : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x100 : SmartEntity  : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartEntity *>*;
    0x140 : NPC          : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x180 : ForceKick    : class wh::conceptmodule::C_TypedPortRef<bool>*;
    //Getter: WHGame.dll+0x3165a84
    get   : Signature    : class CryStringT<char>;
    //Getter: WHGame.dll+0x31659f8
    get   : EventSet     : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x18
//pointer dimension: 0
class boost::container::flat_map<struct wh::entitymodule::S_EquipmentPart const *,class std::vector<class wh::entitymodule::clothing::C_Component const *,class std::allocator<class wh::entitymodule::clothing::C_Component const *> >,struct std::less<struct wh::entitymodule::S_EquipmentPart const *>,void> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::C_MoneyReward : class wh::rpgmodule::I_Reward {
    0x8 : Amount : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::I_TagPoint* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HospodskaProgress : int {
    None    = 0,
    Busy    = 1,
    Active1 = 2,
    Active2 = 3,
    Done    = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulPropertyTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KasparStreaming : int {
    None            = 0,
    WaitingToStream = 1,
    Streamed        = 2,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_Gate : class wh::xgenaimodule::BehaviorTree::I_Node, class wh::xgenaimodule::BehaviorTree::I_SwitchableNode {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AchievementReward* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GuardsSlacking : int {
    None                     = 0,
    WaitingForPlayerPresence = 1,
    FirstDialog              = 2,
    FirstSlacking            = 3,
    SecondDialog             = 4,
    SecondSlacking           = 5,
    ThirdDialog              = 6,
    FinalSlacking            = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Argument : int {
    None           = 0,
    Available      = 1,
    InDialog       = 2,
    PlayerSawFight = 3,
    Aborted        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BuffStatus : int {
    None    = 0,
    AddBuff = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelCanStart : int {
    None                    = 0,
    Started                 = 1,
    Completed               = 2,
    Failed                  = 3,
    AbortedPlayerLostWeapon = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelWithNobleman : int {
    None               = 0,
    Active             = 1,
    Won                = 2,
    Lost               = 3,
    Missed             = 4,
    NoblemanDead       = 5,
    AttackedBystanders = 6,
    Aborted            = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemsToReturnElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BocekStreaming : int {
    None                            = 0,
    SetStreamedRatbor1              = 1,
    SetStreamedRatbor2Party         = 2,
    SetUnstreamedRatbor2AfterAttack = 3,
    SetStreamedVlasskyDvur          = 4,
    SetUnstreamedVlasskyDvur        = 5,
    SetStreamedErikStart            = 6,
    SetUnstreamedErikMestaneOdjeli  = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::C_RandomEventVariantBase::S_NpcGroup* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasSoulCrimeRole* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::game::C_CVarOverrideData {
    0x8  : GameContext  : class CryStringT<char>;
    0x10 : Priority     : int;
    0x18 : OverrideFile : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrespassOverride : int {
    None              = 0,
    Active            = 1,
    WaitingForLeaving = 2,
    Done              = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_TimerState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_MakeArray> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetReputation* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_ControllerFeedbackDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct S_TriggerEffect,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct S_TriggerEffect,class std::allocator<struct S_TriggerEffect> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0xc8
//pointer dimension: 0
struct wh::entitymodule::S_KeyRingItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
};

//size in bytes: 0x0
//pointer dimension: 0
void(void) {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_Battlement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HaircutType : int {
    None = 0,
    1    = 1,
    2    = 2,
    3    = 3,
    4    = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AddReward> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RanekGrave : int {
    Default = 0,
    Grave   = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::I_EventData {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipeStepType {
    0x8  : Name     : class CryStringT<char>;
    0x10 : RewardXP : unsigned int;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::dialogmodule::data::C_InstantPropCommand : class wh::dialogmodule::data::C_Command, class wh::dialogmodule::data::C_PropCommand {
    0x8  : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay      : float;
    0xe  : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : Prop       : class CryStringT<char>;
    0x18 : Hand       : enum wh::dialogmodule::data::E_ItemAttachmentHand::Type;
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::xgenaimodule::C_IntermissionTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : OnIntermission : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class rttr::type {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarelBarking : int {
    None             = 0,
    CheckDinstance   = 1,
    Barking          = 2,
    WaitingForPlayer = 3,
    Done             = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PhaseInCamp : int {
    None                          = 0,
    SmallTalk                     = 1,
    PtacekGoToTrainingGround      = 2,
    PtacekWaitingInTrainingGround = 3,
    Training                      = 4,
    Dinner                        = 5,
};

//size in bytes: 0x250
//pointer dimension: 0
class wh::playermodule::C_PlayerOutfitOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul> {
    0x10  : Name                         : class CryStringT<char>;
    0x18  : RuntimeState                 : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView                    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive                     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0  : ItemsToConfiscate            : class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::I_ItemDescriptor> >*;
    0x110 : ConfiscationTarget           : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Stash *>*;
    0x150 : ClothingPreset               : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ClothingPresetGUID>*;
    0x190 : WeaponPreset                 : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_WeaponPresetGUID>*;
    0x1d0 : DestroyOverridesOnDeactivate : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : PlayerSouls                  : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::dialogmodule::data::C_DialogueWrapper>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BruncvikZbrojDalsi : int {
    None                 = 0,
    FoundBeforeQuest     = 1,
    Started              = 2,
    Updated              = 3,
    Completed            = 4,
    CompletedPredQuestem = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WineAndChatAndWine : int {
    None        = 0,
    WineAndChat = 1,
    SecondWine  = 2,
    Done        = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::E_CreditsType {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ChangeRightHandContentEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SelectedItemDecision* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum pour_wine : int {
    None  = 0,
    White = 1,
    Red   = 2,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::guimodule::C_UIHudBubbles : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::rpgmodule::C_DistinctCounter<class CryStringT<char> > : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_FaderState {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum drunkSinging : int {
    None   = 0,
    Active = 1,
    Done   = 2,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::rpgmodule::C_SoulStateEffectContextDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::rpgmodule::C_SoulStateEffectContextData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::rpgmodule::C_SoulStateEffectContextData,class std::allocator<class wh::rpgmodule::C_SoulStateEffectContextData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_StashManipulationAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReditelFightAnnouncement : int {
    WaitingForStart   = 0,
    FirstIntroduction = 1,
    FirstFighter      = 2,
    SecondFighter     = 3,
    WinnerAnnoucement = 4,
    AfterFight        = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Socky_ArgumentState : int {
    None        = 0,
    FirstPhase  = 1,
    SecondPhase = 2,
    ThirdPhase  = 3,
    Done        = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_AlchemyFeedbackDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyFeedback,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_AlchemyFeedback,class std::allocator<class wh::playermodule::C_AlchemyFeedback> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::xgenaimodule::S_PlaceEventData* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::I_HLodManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PassThroughWalls : int {
    None          = 0,
    WaitForPlayer = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_MenuPage {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_PerceptionTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorMountedTrigger* {
};

//size in bytes: 0x1a0
//pointer dimension: 0
class wh::environmentmodule::C_SunEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : UseLongitude : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0  : Longitude    : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x110 : UseLatitude  : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x150 : Latitude     : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x180
//pointer dimension: 0
class wh::guimodule::C_ApseViewTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : State        : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_UIApseView::Type>*;
    0xf8  : OnEnter      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnLeave      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DialogueAfterDuel : int {
    None               = 0,
    DueledHaventTalked = 1,
    Talked             = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::xgenaimodule::BehaviorTree::E_RTTRGeneratedNodeMetadata {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BozenaPrepadeni : int {
    None                  = 0,
    beforeDialogWait      = 1,
    Dialog                = 2,
    CekaPodSchody         = 3,
    Leci                  = 4,
    SchovanaVKomore       = 5,
    KomentujeKonecSituace = 6,
    Done                  = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp3_ReportToHuntsman : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VagabondCombat : int {
    None              = 0,
    FirstWave         = 1,
    PrepareSecondWave = 2,
    SecondWave        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Duel : int {
    None     = 0,
    Accept   = 1,
    Complete = 2,
    Fail     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3993138
enum enum wh::conceptmodule::E_TraceLevel : int {
    Fatal   = 0,
    Error   = 1,
    Warning = 2,
    Info    = 3,
    Detail  = 4,
    Debug   = 5,
    Brutus  = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_PerceptibleVolumeEffect* {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::entitymodule::C_WeaponRuntimeData : class wh::entitymodule::C_EquippableItemRuntimeData {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_RandomEventBase> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HeroldSpeakPhase : int {
    FinishedAnnounce = 0,
    AnnouncingRound  = 1,
    PlayerFlee       = 2,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeMinigameUsageEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VisitMiller : int {
    None = 0,
    Done = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Streaming : int {
    None              = 0,
    WaitingForStream  = 1,
    Streamed          = 2,
    WaitingToUnstream = 3,
    Unstreamed        = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::C_CatWaypointDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_CatWaypointRecord,class std::vector> {
    0x30 : CatWaypoints : class std::vector<struct wh::entitymodule::S_CatWaypointRecord,class std::allocator<struct wh::entitymodule::S_CatWaypointRecord> >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindingCrypt : int {
    None      = 0,
    FindCrypt = 1,
    FellIn    = 2,
    WalkedIn  = 3,
    Abort     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum annaStreamedStatus : int {
    UnStreamedInitial = 0,
    Streamed          = 1,
    UnStreamed        = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_BlacksmithWorkpiece,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::conceptmodule::E_ConceptFunctionMetadata {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DvereKLichtovi : int {
    Closed = 0,
    Open   = 1,
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimHolsterRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimHolsterRequest {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_TriggerSequence> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeliveryPotions : int {
    None            = 0,
    PotionForPain   = 1,
    PotionMarigold  = 2,
    PotionChamomile = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_RoleOperator<struct wh::rpgmodule::storm::operation::Remove>* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_MinigameTutorialDomain::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_ChoiceName {
};

//size in bytes: 0x218
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionIn : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetBody : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_SetCharacterComponentBase {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::rpgmodule::C_FactionBase {
    //Getter: WHGame.dll+0x2bdbb9c
    get : PlayerRenown : float;
    //Getter: WHGame.dll+0x1ede058
    get : Name         : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : UIName       : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddb50
    get : NumMembers   : unsigned __int64;
    //Getter: WHGame.dll+0x1eddb90
    get : Parent       : class std::shared_ptr<class wh::rpgmodule::C_Faction>;

    //non-vtable method: WHGame.dll+0xffff82117d8bdf80
    PlayerReputation( bool, bool );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionInGenerated* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_PlayerDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_PlayerData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_PlayerData,class std::allocator<class wh::playermodule::C_PlayerData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::xgenaimodule::C_SmartObjectAnimationDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_SmartObjectAnimations,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_SmartObjectAnimations,class std::allocator<struct wh::xgenaimodule::S_SmartObjectAnimations> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_MonologByMetaroleEventData : struct wh::xgenaimodule::I_EventData, struct wh::xgenaimodule::S_MonologEventData {
    0x8 : Parameter : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SrowdTestState : int {
    None          = 0,
    SwordAdded    = 1,
    SwordNotAdded = 2,
    SwordDeleted  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_AnimDoor* {
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_EventMemberFunction : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase, class wh::conceptmodule::C_MemberFunction, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_MemberFunction>, class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_MemberFunction> {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum streamingNebakov : int {
    None         = 0,
    Podvecer     = 1,
    BeforeBattle = 2,
    Battle       = 3,
    GodFingerCS  = 4,
    After        = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
struct IParticleManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VysledekZavodu : int {
    None        = 0,
    HracVyhral  = 1,
    HracProhral = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrokenAxe : int {
    InStash             = 0,
    InPlayerInventory   = 1,
    UsedInBlacksmithing = 2,
};

//size in bytes: 0x378
//pointer dimension: 0
class wh::xgenaimodule::C_InformationDiffTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name                : class CryStringT<char>;
    0x18  : RuntimeState        : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports               : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView           : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive            : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Who                 : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : WhoFilter           : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x138 : Label               : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x178 : LabelFilter         : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x1b8 : PerceivedWuid       : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x1f8 : PerceivedWuidFilter : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x238 : IsCrime             : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x278 : IsCrimeFilter       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x2b8 : Status              : class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_InformationMessageStatus::Type>*;
    0x2f8 : StatusFilter        : class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_InformationMessageStatus::Type>*;
    0x338 : OnNotification      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChoosenWeapon : int {
    Shortsword = 0,
    Longsword  = 1,
    Mace       = 2,
    Warhammer  = 3,
    Axe        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AfterBattleBehaviors : int {
    None          = 0,
    BattleEnded   = 1,
    WaitingForMen = 2,
    MenListening  = 3,
    OrdersDone    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonradHamanDialogue : int {
    None                   = 0,
    TriggerAreaForDialogue = 1,
    Dialogue               = 2,
    Waiting                = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OfkaBehaviorState : int {
    None       = 0,
    GoingToBed = 1,
    ShowingBed = 2,
    Sleeping   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum cluesCamp3 : int {
    None          = 0,
    allCluesFound = 1,
    anyClueFound  = 2,
    Failed        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum combat_skirmishFoul : int {
    none              = 0,
    DrawMissileWeapon = 1,
    DrawWeapon        = 2,
    MountHorse        = 3,
    DogIsInCombat     = 4,
    NewCrimeCreated   = 5,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_ClothingPresetRef : class wh::entitymodule::C_PresetItemBase {
    0x8  : Weight      : float;
    0xc  : CombatLevel : float;
    0x10 : Name        : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_SaveGame* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetReinforcements : int {
    None                                         = 0,
    NobodyAvailable                              = 1,
    AskForHelp_NobodyAskedYet                    = 2,
    AskForHelp_SomebodyAsked_SomeStillAvailable  = 3,
    EverybodyAsked_MorePossibleToBecomeAvailable = 4,
    EveryPossibilityExhausted                    = 5,
    ReinforcementsArranged                       = 6,
    NobodyArranged                               = 7,
    Failed                                       = 8,
    Canceled                                     = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_CameraAsset* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::dialogmodule::S_DialogueDubbing {
    0x0 : FileHash         : unsigned int;
    //Getter: WHGame.dll+0x22e8cec
    get : Duration         : float;
    //Getter: WHGame.dll+0xaf0fe4
    get : OriginalDuration : float;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::tests::Foo* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_SoulPropertyCounter : class wh::rpgmodule::C_Counter {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CrossCountry_ComingToFinish : int {
    None                    = 0,
    WatchDistanceFromFinish = 1,
    WatchFinishLineArea     = 2,
    Done                    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasRole* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::storm::operation::Set {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SyncForFight : int {
    None  = 0,
    Ready = 1,
    Done  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_RiderActionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TournamentStream : int {
    None                 = 0,
    ReadyPreTurnaj       = 1,
    StreamedPreTurnaj    = 2,
    ReadyTurnaj          = 3,
    StreamedTurnaj       = 4,
    UnstreamReady        = 5,
    UnstreamReadyNextDay = 6,
    UnstreamDone         = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemSetAsideConditionGenerated* {
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::playermodule::C_RandomEventVariant>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AndSelector* {
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::conceptmodule::C_Project : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ArenaFighter : int {
    None  = 0,
    Jenik = 1,
    Malik = 2,
    Vira  = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_ScriptCounter : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SumCounter<int> {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_TypedItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressKovar : int {
    None          = 0,
    JdiZaKovarem1 = 1,
    JdiNaPrevet1  = 2,
    JdiNaPrevet2  = 3,
    JdiNaPrevet3  = 4,
    KovarHotovej  = 5,
    JdiZaKovarem2 = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_HandType {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::musicmodule::C_MusicManager : class wh::musicmodule::I_MusicManager {
    0x8 : MusicMatrix : class wh::musicmodule::C_MusicMatrix*;
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::entitymodule::C_Item {
    //Getter: WHGame.dll+0x2999504
    get : Name              : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x29991bc
    get : ItemClass         : struct wh::entitymodule::S_ItemClassGUID;
    //Getter: WHGame.dll+0xffbd40
    get : Category          : enum wh::entitymodule::E_ItemCategory;
    //Getter: WHGame.dll+0x18df140
    get : Type              : int;
    //Getter: WHGame.dll+0x29995c8
    get : Subtype           : int;
    //Getter: WHGame.dll+0x19a0b20
    get : Amount            : int;
    //Getter: WHGame.dll+0x6983e4
    get : NewUnitPrice      : unsigned int;
    //Getter: WHGame.dll+0x6b547c
    get : CurrentUnitPrice  : unsigned int;
    //Getter: WHGame.dll+0x185ce00
    get : NewStackPrice     : unsigned int;
    //Getter: WHGame.dll+0x148ef18
    get : CurrentStackPrice : unsigned int;
    //Getter: WHGame.dll+0x6adf6c
    get : Quality           : unsigned int;
    //Getter: WHGame.dll+0x698490
    get : Condition         : float;
    //Getter: WHGame.dll+0x5f1614
    get : MaxQuality        : unsigned int;

    //non-vtable method: WHGame.dll+0x299a958
    SetItemPhaseId( int );
    //non-vtable method: WHGame.dll+0x2997868
    AdvanceItemPhase( float );
    //non-vtable method: WHGame.dll+0x2997868
    SetItemHealth( float );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingHidingGroupDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingHidingGroup>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingHidingGroup>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingHidingGroup> > > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetSeal : int {
    None               = 0,
    SealNotInInventory = 1,
    Started            = 2,
    Completed          = 3,
    Failed             = 4,
    Aborted            = 5,
};

//size in bytes: 0x80
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_PathFindingRequestArea : struct wh::xgenaimodule::navigation::S_PathFindingRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
long* {
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::entitymodule::S_ItemManipulationVariation {
    0x0  : Phase              : int;
    0x8  : SlotTag            : class CryStringT<char>;
    0x10 : PickUpAnimation    : class std::shared_ptr<struct wh::entitymodule::S_ItemManipulationAnim>;
    0x20 : PlaceAnimation     : class std::shared_ptr<struct wh::entitymodule::S_ItemManipulationAnim>;
    0x30 : ItemTransformation : class std::shared_ptr<struct wh::entitymodule::S_ItemTransformation>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gamblersWaitForReward : int {
    None           = 0,
    WatchForPlayer = 1,
    SeenPlayer     = 2,
    UnseenPlayer   = 3,
    Done           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>* {
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_DropAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction, class wh::xgenaimodule::NPCState::C_PlaceAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vycistiUtekovouCestu : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
    Failed    = 3,
    Aborted   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProklepniDrataProgress : int {
    None                = 0,
    Active              = 1,
    DratIsDead          = 2,
    Updated             = 3,
    Done                = 4,
    DoneWithoutDratHelp = 5,
    Canceled            = 6,
    CanceledSvatava     = 7,
    CanceledVendula     = 8,
    Aborted             = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString>* {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::xgenaimodule::C_LinkableObject {
    //Getter: WHGame.dll+0x3377ed0
    get : Position : struct Vec3_tpl<float>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashCharacterSlotItem* {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::conceptmodule::C_FirstElement : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_ElementAtBase {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Value        : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_NPCFactionNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_AnimActionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b94d80
enum enum wh::rpgmodule::E_SoulDerivedStat : unsigned int {
    charisma                                     = 0,
    rch                                          = 1,
    cse                                          = 2,
    vib                                          = 3,
    evi                                          = 4,
    con                                          = 5,
    mst                                          = 6,
    mhs                                          = 7,
    hlt                                          = 8,
    sdt                                          = 9,
    fov                                          = 10,
    vir                                          = 11,
    tsr                                          = 12,
    dtf                                          = 13,
    dbf                                          = 14,
    pt1                                          = 15,
    pt5                                          = 16,
    dai                                          = 17,
    bnc                                          = 18,
    hac                                          = 19,
    hde                                          = 20,
    lfu                                          = 21,
    lio                                          = 22,
    cap                                          = 23,
    alo                                          = 24,
    oad                                          = 25,
    owa                                          = 26,
    wud                                          = 27,
    lvl                                          = 28,
    noi                                          = 29,
    fsm                                          = 30,
    nrs                                          = 31,
    rsb                                          = 32,
    rsa                                          = 33,
    ble                                          = 34,
    ibi                                          = 35,
    bow                                          = 36,
    cow                                          = 37,
    aco                                          = 38,
    caw                                          = 39,
    rcw                                          = 40,
    mor                                          = 41,
    dem                                          = 42,
    mcf                                          = 43,
    obe                                          = 44,
    psr                                          = 45,
    xpm                                          = 46,
    osl                                          = 47,
    mos                                          = 48,
    ore                                          = 49,
    caf                                          = 50,
    rdq                                          = 51,
    erq                                          = 52,
    sle                                          = 53,
    coc                                          = 54,
    ufo                                          = 55,
    mut                                          = 56,
    prb                                          = 57,
    fpa                                          = 58,
    apa                                          = 59,
    cag                                          = 60,
    def                                          = 61,
    dru                                          = 62,
    poi                                          = 63,
    pos                                          = 64,
    ran                                          = 65,
    iex                                          = 66,
    hcm                                          = 67,
    was                                          = 68,
    grm                                          = 69,
    brm                                          = 70,
    drt                                          = 71,
    sml                                          = 72,
    smi                                          = 73,
    frg                                          = 74,
    hko                                          = 75,
    enc                                          = 76,
    fdm                                          = 77,
    sma                                          = 78,
    bma                                          = 79,
    hgs                                          = 80,
    pds                                          = 81,
    sha                                          = 82,
    pbm                                          = 83,
    rml                                          = 84,
    hml                                          = 85,
    bso                                          = 86,
    bld                                          = 87,
    bba                                          = 88,
    arr                                          = 89,
    jrm                                          = 90,
    sur                                          = 91,
    imm                                          = 92,
    apr                                          = 93,
    ppr                                          = 94,
    ltp                                          = 95,
    upr                                          = 96,
    skpr                                         = 97,
    kopr                                         = 98,
    cds                                          = 99,
    edm                                          = 100,
    prc                                          = 101,
    cdw                                          = 102,
    eqw                                          = 103,
    pla                                          = 104,
    wbc                                          = 105,
    cbi                                          = 106,
    nbi                                          = 107,
    alc                                          = 108,
    map                                          = 109,
    adm                                          = 110,
    alm                                          = 111,
    hov                                          = 112,
    btw                                          = 113,
    owl                                          = 114,
    rms                                          = 115,
    deb                                          = 116,
    ach                                          = 117,
    prs                                          = 118,
    imp                                          = 119,
    drd                                          = 120,
    crc                                          = 121,
    dmt                                          = 122,
    mgt                                          = 123,
    bad                                          = 124,
    nrv                                          = 125,
    vag                                          = 126,
    mag                                          = 127,
    aag                                          = 128,
    red                                          = 129,
    drv                                          = 130,
    pmc                                          = 131,
    sdn                                          = 132,
    brn                                          = 133,
    plr                                          = 134,
    bea                                          = 135,
    kko                                          = 136,
    sse                                          = 137,
    ies                                          = 138,
    lrm                                          = 139,
    prm                                          = 140,
    uvh                                          = 141,
    uva                                          = 142,
    StaminaCooldownDefault                       = 143,
    StaminaCooldownWeaponRaised                  = 144,
    StaminaCooldownAttack                        = 145,
    StaminaCooldownDodge                         = 146,
    StaminaCooldownHit                           = 147,
    StaminaCooldownBlock                         = 148,
    StaminaCooldownBrokenBlock                   = 149,
    StaminaCooldownCollisionHit                  = 150,
    StaminaCooldownJump                          = 151,
    StaminaCooldownFallDamage                    = 152,
    StaminaCooldownArcherySelfHarm               = 153,
    StaminaCooldownSharpeningDoPedal             = 154,
    StaminaCooldownBlacksmithingStroke           = 155,
    StaminaCooldownBlacksmithingExhaustingStroke = 156,
    cnp                                          = 157,
    cbp                                          = 158,
    csp                                          = 159,
    slp                                          = 160,
    cep                                          = 161,
    icp                                          = 162,
    crp                                          = 163,
    dfe                                          = 164,
    csc                                          = 165,
    hvp                                          = 166,
    pqe                                          = 167,
    sks                                          = 168,
    sst                                          = 169,
    sss                                          = 170,
    xst                                          = 171,
    xag                                          = 172,
    xvi                                          = 173,
    xsw                                          = 174,
    xcr                                          = 175,
    xsu                                          = 176,
    xhw                                          = 177,
    xma                                          = 178,
    xsc                                          = 179,
    srr                                          = 180,
    bap                                          = 181,
    alp                                          = 182,
    atd                                          = 183,
    ams                                          = 184,
    rcx                                          = 185,
    lfb                                          = 186,
    tba                                          = 187,
    nrw                                          = 188,
    fac                                          = 189,
    ahe                                          = 190,
    apo                                          = 191,
    ano                                          = 192,
    fpd                                          = 193,
    eph                                          = 194,
    rpd                                          = 195,
    rpr                                          = 196,
    rpa                                          = 197,
    hla                                          = 198,
    rpp                                          = 199,
    efd                                          = 200,
    aml                                          = 201,
    bmr                                          = 202,
    lgp                                          = 203,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Souboje : int {
    None               = 0,
    MenhartLinhart     = 1,
    HenryLinhart       = 2,
    MenhartJimram      = 3,
    ArneMikulas        = 4,
    HenryJimram        = 5,
    HenryMikulas       = 6,
    HenryJimramPodruhe = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_PresetItemBase* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SoulAsset* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_NavMeshSource* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringTheShield : int {
    None        = 0,
    GetTheProof = 1,
    BringIt     = 2,
    DeliveredIt = 3,
    Aborted     = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afee30
enum enum wh::rpgmodule::E_BodyPart::Type : unsigned char {
    Body      = 0,
    Head      = 1,
    Hair      = 2,
    Beard     = 3,
    Underwear = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AreaLabelTrigger* {
};

//size in bytes: 0xf0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_TeleportAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AddLinkElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeSpan>* {
};

//size in bytes: 0x8f8
//pointer dimension: 0
class CMatInfo : struct IMaterial {
    0x28 : Name        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edf3b0
    get  : SubMtlCount : int;
    //Getter: WHGame.dll+0x1eddb80
    get  : Flags       : int;
    0x48 : ShaderItem  : struct SShaderItem;
    0x70 : SubMtls     : struct DynArray<class _smart_ptr<class CMatInfo>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::playermodule::C_TutorialDatabase : class wh::databasemodule::C_ObjectDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<struct wh::playermodule::S_Tutorial>,class std::vector>,class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<class std::shared_ptr<struct wh::playermodule::S_Tutorial> > >, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<struct wh::playermodule::S_Tutorial>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<struct wh::playermodule::S_Tutorial>,class std::allocator<class std::shared_ptr<struct wh::playermodule::S_Tutorial> > > >;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::musicmodule::S_WorldStateToggleId {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_RandomEventVariant> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CouncilRoom : int {
    DecoAndDoor = 0,
    BlockedDoor = 1,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemSlot *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ItemAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ExitAreaTriggerProgress : int {
    None                = 0,
    TimerActive         = 1,
    AfterWakingUpActive = 2,
    OutOfMinesActive    = 3,
    Done                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PechaZajicAtBar : int {
    None          = 0,
    WaitForPlayer = 1,
    IngameDialog  = 2,
    Finished      = 3,
};

//size in bytes: 0x118
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimPickUpRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPickUpRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPickUpRequest> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_PredefinedPathAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerDistance : int {
    TooFar      = 0,
    GreyArea    = 1,
    CloseEnough = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hledaniMistaNakazy : int {
    None     = 0,
    Started  = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::engine3d::C_HLodManagerStreaming : class wh::I_HLodManager {
    0x8 : Config : class std::reference_wrapper<struct wh::engine3d::S_HLodConfig>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeliveryDrink : int {
    None   = 0,
    Wine   = 1,
    Beer   = 2,
    Liquer = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum fleasQuiltState : int {
    None   = 0,
    Stash  = 1,
    Player = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4608
enum enum wh::dialogmodule::data::E_SequenceVisibility::Type : unsigned char {
    None     = 0,
    Internal = 1,
    Public   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_CompositeSelector* {
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_RiderActionBase : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ItemDeliveryHandler> {
};

//size in bytes: 0x1c
//pointer dimension: 0
struct S_TriggerEffectCommandData {
    0x3 : Amplitude      : unsigned char;
    0x4 : Frequency      : unsigned char;
    0x0 : Position       : unsigned char;
    0x5 : Strength       : unsigned char;
    //Getter: WHGame.dll+0x2512e6c
    get : AmplitudeArray : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2514788
    get : StrengthArray  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x2 : EndPosition    : unsigned char;
    0x7 : EndStrength    : unsigned char;
    0x1 : StartPosition  : unsigned char;
    0x6 : StartStrength  : unsigned char;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BohutaStreamingKutnohorsko : int {
    UnstreamedInitial                 = 0,
    StreamedSetkaniVRatbori1          = 1,
    UnstreamedSetkaniVRatbori1        = 2,
    StreamedSetkaniVRatbori2          = 3,
    UnstreamedSetkaniVRatbori2        = 4,
    StreamedZikmunduvTabor            = 5,
    StreamedUtokNaMalesov             = 6,
    UnstreamedPrepadeniVlasskehoDvora = 7,
    StreamedPrepadeniVlasskehoDvora   = 8,
    UnstreamedHladAZmar               = 9,
    StreamedHladAZmar                 = 10,
    UnstreamedStealthMiseZaJindru     = 11,
    StreamedFinale                    = 12,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MasterstrikeTutorialProgress : int {
    None   = 0,
    GaveUp = 1,
    Done   = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuButton,class std::vector> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::game::C_LevelData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_MonologEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasGender* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_SaveLockEffect* {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::entitymodule::C_ActorActionUnconscious : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction, class wh::entitymodule::I_DisableRagdollEffect {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_SkillLessonLevel,class std::vector> {
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemsToReturnAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_StashManipulationAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::musicmodule::I_MusicManager {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::entitymodule::C_CarryItemPileDatabase : class wh::databasemodule::C_ObjectTreeDatabase<struct wh::entitymodule::S_CarryItemPileGeom,class std::vector>, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_CarryItemPileGeom,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_CarryItemPileGeom,class std::allocator<struct wh::entitymodule::S_CarryItemPileGeom> > >;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_ActorStanceGroupData {
    0x8  : Name       : class CryStringT<char>;
    0x10 : Stance     : enum wh::entitymodule::E_StanceCategory::Type;
    0x14 : StanceOn   : enum wh::entitymodule::E_StanceOn::Type;
    0x15 : StanceBy   : enum wh::entitymodule::E_StanceBy::Type;
    0x18 : StanceSide : enum wh::entitymodule::E_StanceSide::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum movementSpeed : int {
    relaxedWalk    = 0,
    walk           = 1,
    alertedWalk    = 2,
    run            = 3,
    fastRun        = 4,
    slowSprint     = 5,
    moderateSprint = 6,
    sprint         = 7,
    slowestDash    = 8,
    slowDash       = 9,
    moderateDash   = 10,
    dash           = 11,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CartActionIn* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29c80
enum enum wh::entitymodule::C_EquipmentManager::E_QuickSlotSpec::Type : unsigned char {
    QuickSlot1                 = 0,
    QuickSlot2                 = 1,
    QuickSlot3                 = 2,
    QuickSlot4                 = 3,
    QuickSlotMatchingWeaponSet = 4,
    Default                    = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum weaponSelection_mainHand : int {
    specifiedByItemClassId = 0,
    any_meleeWeapon        = 1,
    type_sword             = 2,
    type_sabre             = 3,
    type_axe               = 4,
    type_longSword         = 5,
    type_mace              = 6,
    type_flail             = 7,
    type_polearm           = 8,
    type_bow               = 9,
    type_crossbowLight     = 10,
    type_crossbowMedium    = 11,
    type_crossbowHeavy     = 12,
    type_rifle             = 13,
    type_huntingSword      = 14,
    type_swordOrLongSword  = 15,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::playermodule::C_RandomEventPlace>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Bow : int {
    None                    = 0,
    TakeTheBow              = 1,
    DeliverTheBowToGambler1 = 2,
    DeliverTheBowToGambler2 = 3,
    DeliverTheBowToGambler3 = 4,
    BowDelivered            = 5,
    MoneyDelivered          = 6,
    RefusedToPay            = 7,
    AttackedGamblers        = 8,
    Left                    = 9,
    Abort                   = 10,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::dialogmodule::data::C_DialogueWrapper> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::environmentmodule::E_WeatherProfileDelayedAction {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c65570
enum enum EFileStreamingStatus : unsigned char {
    NotLoaded  = 0,
    InProgress = 1,
    Ready      = 2,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::entitymodule::I_ActorAction> : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> >, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > > {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::xgenaimodule::C_StructuredTypeDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::TypeDescriptors::S_Type,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::TypeDescriptors::S_Type,class std::allocator<struct wh::xgenaimodule::TypeDescriptors::S_Type> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_HerbItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_NavigationInfo* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UnconsciousType : int {
    None    = 0,
    Normal  = 1,
    Alcohol = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum papezskyLegat_rozaSecretTunnel : int {
    None               = 0,
    Entrance           = 1,
    BeforeWaypoint     = 2,
    PreWater           = 3,
    WaitingForDialog   = 4,
    WaitingForUber     = 5,
    BeCarriedFirstTime = 6,
    PostWater          = 7,
    WaitingAtDoor      = 8,
    WaitingAtWindow    = 9,
    Done               = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::guimodule::S_CutsceneEventDesc* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh2AloneWithZikmundPhases : int {
    None                           = 0,
    FirstOrder                     = 1,
    FirstAulitzTalksZikmundDrinks  = 2,
    SecondOrder                    = 3,
    SecondAulitzTalksZikmundDrinks = 4,
    ZikmundCheers1                 = 5,
    ZikmundCheers2                 = 6,
    AulitzCheers                   = 7,
    ThirdOrder                     = 8,
    ForcedDialogue                 = 9,
    Done                           = 10,
};

//size in bytes: 0x100
//pointer dimension: 0
class wh::entitymodule::S_ActorAdditiveAnimRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionAdditiveAnimRequest {
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulState> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xd0  : State        : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulState>*;
    0x110 : Operator     : class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_Operator>*;
    0x150 : Value        : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : OnMatch      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1d0 : OnUnmatch    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum speakWithCommander : int {
    None       = 0,
    Started    = 1,
    BackInCamp = 2,
    Completed  = 3,
    Failed     = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct NAlloc::ModuleAlloc {
};

//size in bytes: 0x1
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<class std::shared_ptr<struct wh::playermodule::S_Tutorial> > {
};

//size in bytes: 0x278
//pointer dimension: 0
class wh::dialogmodule::data::C_ForcedDialogueNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::dialogmodule::data::C_DialogueNode, class wh::dialogmodule::data::C_FaderDialogueNode {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40  : Dialogue        : class std::reference_wrapper<class wh::dialogmodule::data::C_Dialogue>;
    0xf3  : VoiceNamespace  : bool;
    0xf8  : PlayDialogue    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1b8 : AutoPlay        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x138 : BeforePlay      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : AfterPlay       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1f8 : EnqueueDialogue : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x238 : DialogParams    : class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<struct wh::dialogmodule::S_DialogParams> >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::I_Effect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZjistiCoSeStalo : int {
    None            = 0,
    Active          = 1,
    Done            = 2,
    DonePetrSkipped = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::C_StaticSoulPool : class wh::rpgmodule::C_SoulPoolBase {
    0x8  : Name           : class CryStringT<char>;
    0x10 : CombatLevelMin : float;
    0x14 : CombatLevelMax : float;
    0x18 : Elements       : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::C_StaticSoulPool::S_Element,class std::allocator<struct wh::rpgmodule::C_StaticSoulPool::S_Element> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CenekNeboStulec2 : int {
    None              = 0,
    OdevzdejCenkovi   = 1,
    OdevzdejStulcovi  = 2,
    DoneCenekBoom     = 3,
    DoneCenekBezBoje  = 4,
    DoneCenekFail     = 5,
    DoneStulec        = 6,
    DoneStulecBezBoje = 7,
    DoneStulecFail    = 8,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_AIConceptSignalParameter {
    0x0 : Name : class CryStringT<char>;
    0x8 : Type : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Aliveness : int {
    BothAlive   = 0,
    ArankaAlive = 1,
    VajdaAlive  = 2,
    BothDead    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum afterBattlesDialogues_setkaniVRatbori2 : int {
    None                 = 0,
    SpeakWithLichtAndSam = 1,
    SpeakWithLicht       = 2,
    SpeakWithSam         = 3,
    Done                 = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_MoneyItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::dialogmodule::data::S_VariableContextId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RuthardkaSeriesQuestPhases : int {
    DefaultOpenWorld               = 0,
    KralovskeStribro_Battle        = 1,
    KralovskeStribro_Investigating = 2,
    ZachranaPtacka_VavakFight      = 3,
    ZachranaPtacka_AfterVavakFight = 4,
    SetkaniVRatbori_afterCourt     = 5,
    Legat_Vagabonds                = 6,
    Legat_DeadVagabonds            = 7,
    Legat_Ransacked                = 8,
    Legat_Repopulated              = 9,
    Legat_ClosedBeforeMark         = 10,
    Legat_AfterMark                = 11,
    Legat_ClosedAfterLegatDeath    = 12,
    Vlasak_Skirmish                = 13,
    OpenWorld_EndGame              = 14,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FetchFiala : int {
    None                            = 0,
    SpokeWithVavrinec               = 1,
    SpokeWithFiala                  = 2,
    GotWifesPermission              = 3,
    FialasWifeDied                  = 4,
    ConvincedFialaWithPermission    = 5,
    ConvincedFialaWithoutPermission = 6,
    Aborted                         = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vineyardTrespass : int {
    Day             = 0,
    Night           = 1,
    PlayerWorkDay   = 2,
    PlayerWorkNight = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasName : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NahlasPlanyRychtari : int {
    None           = 0,
    NahlasPlany    = 1,
    PlanyNahlaseny = 2,
    Canceled       = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_InformationMessageStatus::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OnStartBattle : int {
    None           = 0,
    AfterCutscene  = 1,
    PlayerIsOnFeet = 2,
    Done           = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_RandomElement* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_RandomEventOptionSet* {
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimHolsterRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimHolsterRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimHolsterRequest> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_EntityScriptContextPreset> > {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_EntityContextTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::I_UIApse* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_LedgeObject *,class std::allocator<class wh::entitymodule::C_LedgeObject *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_LedgeObject *,class std::allocator<class wh::entitymodule::C_LedgeObject *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum cestaNaMisto : int {
    None                 = 0,
    FollowNpc            = 1,
    GoToMeetingPlace     = 2,
    NpcCameWithPlayer    = 3,
    NpcCameWithoutPlayer = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum katherinesShoeQI : int {
    None      = 0,
    Henry     = 1,
    Katherine = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RozaMigration : int {
    InRuthardkaFromStart             = 0,
    InSuchdolUtokNaMalesov           = 1,
    InRuthardkaPapezskyLegat         = 2,
    InSuchdolPrepadeniVlasskehoDvora = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a81540
enum enum wh::entitymodule::E_ActorGender : unsigned char {
    NotDefined = 0,
    Male       = 1,
    Female     = 2,
    Unisex     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindArcher : int {
};

//size in bytes: 0x18
//pointer dimension: 0
class boost::container::flat_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,int,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TarasStateMachine : int {
    Intro        = 0,
    Patrolling   = 1,
    Friendly     = 2,
    EnemyForever = 3,
    OutOfMines   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::data::S_IncludedDecisionAlias* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableFailableZabomysi : int {
    none    = 0,
    started = 1,
    failed1 = 2,
    failed2 = 3,
    done    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRobesFromRoza : int {
    None               = 0,
    GotToldToGetRobes  = 1,
    GotLocationOfRobes = 2,
    GotRobes           = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a528
enum enum wh::entitymodule::E_FocusPriority::Type : unsigned char {
    Normal = 0,
    High   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashListStatistics* {
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::entitymodule::clothing::C_Component {
    0x8  : Name                          : class CryStringT<char>;
    0x10 : Race                          : class std::optional<enum wh::entitymodule::E_Race::Type>;
    0x18 : Gender                        : class std::optional<enum wh::entitymodule::E_ActorGender>;
    0x20 : FilePath                      : class CryStringT<char>;
    //Getter: WHGame.dll+0x2830820
    get  : HidingGroups                  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50 : Elements                      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase> > > >;
    0x68 : Features                      : class std::reference_wrapper<class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> > >;
    //Getter: WHGame.dll+0x2830920
    get  : Morphs                        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x80 : DerivedComponents             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    0x98 : RepresentativeUberlodClothing : class CryStringT<char>;
    //Getter: WHGame.dll+0x19bc240
    get  : SourceForUberlodPart          : class CryStringT<char>;
    0xd8 : DistributionWeight            : float;
    //Getter: WHGame.dll+0x2830964
    get  : Paleness                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830a24
    get  : Roughness                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x283051c
    get  : Age                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasCharacterName : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OpatovickoState : int {
    Default = 0,
    EndGame = 1,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::S_DogPointLayer {
    0x8  : LayerName : class CryStringT<char>;
    0x10 : Points    : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_DogPoint,class std::allocator<struct wh::xgenaimodule::S_DogPoint> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ContextOperator<struct wh::rpgmodule::storm::operation::Add>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Node>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class CryStringT<char>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KaterinasWhereabouts : int {
    StayingAtKutnaHora = 0,
    SigismundsCamp     = 1,
    Certovka           = 2,
    Suchdol            = 3,
    Ruthardka          = 4,
    SuchdolAfterLegat  = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayersTasks : int {
    None                = 0,
    FindItemKillPukavec = 1,
    FindItemOnly        = 2,
    KillPukavecOnly     = 3,
    QuestFinished       = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::C_StaticSoulPool::S_Element* {
};

//size in bytes: 0x170
//pointer dimension: 0
class wh::entitymodule::C_CarryItemSource : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : CIPiles        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > >*;
    0x128 : OnItemPickedUp : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe8  : OnEmpty        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xf0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HolsterWeaponAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_WeaponActionBase {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : Stance               : enum wh::entitymodule::E_StanceCategory::Type;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::tests::Bar : struct wh::tests::Foo {

    //vtable offset: 0x8
    Gimme5( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_Rule* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29d70
enum enum wh::dialogmodule::data::E_ResponseVolume : unsigned char {
    Default = 0,
    Whisper = 1,
    Quietly = 2,
    Loudly  = 3,
    Shout   = 4,
    Roar    = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithRecipeIngredient* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetEquipDirectives : class wh::rpgmodule::storm::I_Operator {
    0x8 : onlyDefault        : bool;
    0x9 : undressToInventory : bool;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_BuffEffect> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_SaveLockEffectReason::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateWatch> {
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::xgenaimodule::navigation::S_PathFindingRequestDesignerPath* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_SmartHubPostSearchData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SymbolSermirnyRemakeSword : int {
    None   = 0,
    Player = 1,
    Slot   = 2,
    Finish = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hejtmanFrenczlStreaming : int {
    StreamedInitial          = 0,
    UnstreamedM30            = 1,
    StreamedM47              = 2,
    UnstreamedM48aNightwatch = 3,
    StreamedM48b             = 4,
    StreamedM48c             = 5,
    UnstreamedM49            = 6,
    StreamedM51              = 7,
    UnstreamedEndGame        = 8,
    StreamedDebug            = 9,
    UnstreamedDebug          = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SimpleStreamState : int {
    Unstreamed = 0,
    Streamed   = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_EnableAllowedWeaponsInQAM> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OuterCourtyardFightProgress : int {
    None            = 0,
    FightInProgress = 1,
    JustMelee       = 2,
    JustShooting    = 3,
    AllEnemiesDead  = 4,
    Done            = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindTheBandit : int {
    None                                       = 0,
    KilledBailiff                              = 1,
    SpokeWithBailiff                           = 2,
    AmbushedByBandit                           = 3,
    LeftAmbush                                 = 4,
    FoundBanditInCamp                          = 5,
    FoundBanditDuringAmbushAndFoughtHim        = 6,
    FoundBanditDuringAmbushAndLeftWithoutFight = 7,
    FoundBanditInCampAndFoughtHim              = 8,
    FoundBanditInCampAndLeftWithoutFight       = 9,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_ItemSlot> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulLevelCounter* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_StanceElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NPCStreamingState : int {
    AliveNotStreamed       = 0,
    AliveStreamed          = 1,
    WaitingForIntermission = 2,
    DeadUnstreamed         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RecruitmentObjective : int {
    None                   = 0,
    Started                = 1,
    OneSoldierRecruited    = 2,
    SecondSoldierRecruited = 3,
    Done                   = 4,
    Aborted                = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum feastPreparation : int {
    None                 = 0,
    StreamedSkippingTime = 1,
    Feast                = 2,
    BohutaGameplay       = 3,
    Done                 = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SkirmishInTavern : int {
    None              = 0,
    Skirmish          = 1,
    PlayerUnconscious = 2,
    Done              = 3,
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::framework::C_RestApiExample : class wh::framework::I_RestApiExample {
    0x8   : SimpleTypes               : class std::reference_wrapper<class wh::framework::C_SimpleTypesExample>;
    0x70  : PolymorphicRawPoniters    : class std::reference_wrapper<class wh::framework::C_PolymorphicRawPointers>;
    0xa8  : PolymorphicSharedPoniters : class std::reference_wrapper<class wh::framework::C_PolymorphicSharedPointers>;
    0xf8  : Wrappers                  : class std::reference_wrapper<class wh::framework::C_WrappersExample>;
    0x158 : SequentialContainers      : class std::reference_wrapper<class wh::framework::C_SequentialContainersExample>;
    0x1b8 : AssociativeContainers     : class std::reference_wrapper<class wh::framework::C_AssociativeContainersExample>;
    0x228 : Methods                   : class std::reference_wrapper<class wh::framework::C_MethodsExample>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RecruitmentProgress : int {
    None             = 0,
    Recruited        = 1,
    WaitingForOrders = 2,
    Done             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp1_Poacher : int {
    None                     = 0,
    FindFalsePoacherTogether = 1,
    WaitForPoachersSign      = 2,
    CatchPoacher             = 3,
    KilledPoacher            = 4,
    Failed                   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum falesnaPosadkaTalkToCapitan : int {
    None                = 0,
    PromluvSiSVelitelem = 1,
    VelitelUkecan       = 2,
    ZacalBoj            = 3,
    Cancel              = 4,
    Abort               = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TournamentWinnerWalk : int {
    None        = 0,
    Active      = 1,
    ReditelDone = 2,
    FighterDone = 3,
    BothDone    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationSerializedCheckResult* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeOfDayWatch* {
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::databasemodule::C_DatabaseModule : class wh::databasemodule::I_DatabaseModule {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SearchViktorkaHouse : int {
    None                           = 0,
    Started                        = 1,
    Completed                      = 2,
    FoundViktorka                  = 3,
    Aborted                        = 4,
    PlayerKnowsViktorkaWhereabouts = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_GameStart> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChestInspection : int {
    None            = 0,
    OverridesActive = 1,
    OpenWatch       = 2,
    Completed       = 3,
    Aborted         = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_FaderSuspend* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_DecisionLabel* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MalesovFortressStreaming : int {
    Default                        = 0,
    MachicolationsCoveredAndWagons = 1,
    Besieged                       = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_SaveGameType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VstupDoChechu : int {
    None                          = 0,
    HracPorazilMenharta           = 1,
    PromluvSiSArnem               = 2,
    HracPorazilArneho             = 3,
    ArnePorazilHrace              = 4,
    HracPrijatPoSoubojiSArnem     = 5,
    HracPrijatPoSoubojiSMenhartem = 6,
    HracPrijatBezPrisahy          = 7,
    Canceled                      = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UrgeADialogState : int {
    Disabled         = 0,
    WaitingForPlayer = 1,
    PlayerSeen       = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum sittingBehindTableMood : int {
    neutral = 0,
    angry   = 1,
    drunk   = 2,
    injured = 3,
    judge   = 4,
    nervous = 5,
    pensive = 6,
    sad     = 7,
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::entitymodule::clothing::C_Beard : class wh::entitymodule::clothing::C_Component {
    0x8  : Name                          : class CryStringT<char>;
    0x10 : Race                          : class std::optional<enum wh::entitymodule::E_Race::Type>;
    0x18 : Gender                        : class std::optional<enum wh::entitymodule::E_ActorGender>;
    0x20 : FilePath                      : class CryStringT<char>;
    //Getter: WHGame.dll+0x2830820
    get  : HidingGroups                  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50 : Elements                      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase> > > >;
    0x68 : Features                      : class std::reference_wrapper<class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> > >;
    //Getter: WHGame.dll+0x2830920
    get  : Morphs                        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x80 : DerivedComponents             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    0x98 : RepresentativeUberlodClothing : class CryStringT<char>;
    //Getter: WHGame.dll+0x19bc240
    get  : SourceForUberlodPart          : class CryStringT<char>;
    0xd8 : DistributionWeight            : float;
    //Getter: WHGame.dll+0x2830964
    get  : Paleness                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830a24
    get  : Roughness                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x283051c
    get  : Age                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SetkejSeSPtackem : int {
    None               = 0,
    PtakOdjelSam       = 1,
    BylSemVCrimu       = 2,
    BylCombatPtakOdjel = 3,
    PtakJeNaTroskach   = 4,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::entitymodule::clothing::S_Uberlod {
    0x0 : Name    : class CryStringT<char>;
    //Getter: WHGame.dll+0x102de54
    get : Sources : class std::vector<struct wh::entitymodule::clothing::S_SerializedUberlodSource,class std::allocator<struct wh::entitymodule::clothing::S_SerializedUberlodSource> >;
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::xgenaimodule::C_TriggerArea : class wh::xgenaimodule::C_LinkableObject, class wh::xgenaimodule::I_Area {
    //Getter: WHGame.dll+0x3377ed0
    get : Position : struct Vec3_tpl<float>;

    //vtable offset: 0x10
    GetName( );
};

//size in bytes: 0x118
//pointer dimension: 0
class wh::playermodule::C_RandomEventManager : class wh::conceptmodule::C_NodeManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToKocourProgress : int {
    None           = 0,
    Started_Kocour = 1,
    Started_Bara   = 2,
    Completed      = 3,
    Failed         = 4,
    Aborted        = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ProfileEffect> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29aa0
enum enum wh::E_HLodType::Type : unsigned char {
    Unknown    = 0,
    Vegetation = 1,
    Cluster    = 2,
    Layer      = 3,
    Prefab     = 4,
    Interior   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum kzik_actionRequest : int {
    MindPlayer       = 0,
    Escalate         = 1,
    GivePlayerAccess = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_CatWaypointRecord,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_ItemReward* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasPerk : class wh::rpgmodule::storm::I_Selector {
    0x8 : ID   : struct CryGUID;
    //Getter: WHGame.dll+0x2cc20e4
    get : name : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ClosedFightingGroundReason : int {
    None                  = 0,
    WaitForYourFight      = 1,
    GetEquip              = 2,
    InFight               = 3,
    WaitToEndOfTournament = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::conceptmodule::C_SharedResource {

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BlacksmithLine : int {
    None                  = 0,
    Started               = 1,
    KnowAboutFirstQuest   = 2,
    FirstQuest            = 3,
    KnowAboutSecondQuest  = 4,
    SecondQuest           = 5,
    KnowAboutThirdQuest   = 6,
    ThirdQuest            = 7,
    CanGoToWedding        = 8,
    WentToWedding         = 9,
    WentToWeddingOtherWay = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OsvobodZajatce : int {
    None               = 0,
    Zadano             = 1,
    OsvobozenNasilim   = 2,
    OsvobozenStealthem = 3,
    OsvobozenJednanim  = 4,
    Fail               = 5,
    Aborted            = 6,
    Canceled           = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::animationmodule::S_ActionQueryData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SkillcheckSuccessLevel : int {
    CriticalFail    = 0,
    Fail            = 1,
    Success         = 2,
    CriticalSuccess = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::xgenaimodule::NPCState::E_ElementMetadata {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode>* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct CGameRules::EHitType {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bcd770
enum enum wh::guimodule::E_MenuPage::Type : unsigned char {
    None                   = 0,
    RootMain               = 1,
    RootIngame             = 2,
    RootPause              = 3,
    SelectPlaylineNew      = 4,
    NewGameMode            = 5,
    NewGameModeDebug       = 6,
    SelectPlaylineLoad     = 7,
    LoadGame               = 8,
    SaveGame               = 9,
    Settings               = 10,
    GameSettings           = 11,
    GraphicSettings        = 12,
    AdvanceGraphicSettings = 13,
    SoundSettings          = 14,
    Controls               = 15,
    Keybinds               = 16,
    Credits                = 17,
    HelpOverlays           = 18,
    DLCList                = 19,
};

//size in bytes: 0x8
//pointer dimension: 1
struct S_TriggerEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ElementAtBase* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_RightHandCondition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasACharacter* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::E_NodeSearchMode {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a29b90
enum enum wh::rpgmodule::E_SoulState : unsigned int {
    health     = 0,
    stamina    = 1,
    exhaust    = 2,
    hunger     = 3,
    karma      = 4,
    alcoholism = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourToNebakov : int {
    None                            = 0,
    WaitingForBohutaToMountHisHorse = 1,
    PreparingToLeave                = 2,
    GoingToNebakov                  = 3,
    ShowingNebakovFromDistance      = 4,
    Racing                          = 5,
    RacingAndBarking                = 6,
    WaitingByNebakovStables         = 7,
    Done                            = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AnnaQuestBehaviorBeforeFightWithBretislav : int {
    None                     = 0,
    WaitingForUrgeDialog     = 1,
    UrgeCompletedOrCancelled = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateBase<enum wh::framework::E_GameReleaseVersion::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7a8e8
enum enum wh::xgenaimodule::E_PerceptionClass : int {
    Primary   = 0,
    Secondary = 1,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_RoleOperator<struct wh::rpgmodule::storm::operation::Add> : class wh::rpgmodule::storm::I_Operator {
    0x8 : name : struct wh::rpgmodule::S_RoleId;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum najdiMladu : int {
    None          = 0,
    Zadano        = 1,
    MladaNalezena = 2,
    Fail          = 3,
    Aborted       = 4,
    Canceled      = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HracovoNoseniPytlu : int {
    None    = 0,
    Stream  = 1,
    Start   = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MazakControl : int {
    None                = 0,
    DeadHome            = 1,
    DeadHomeReadyToMove = 2,
    Done                = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::I_LinkAssetResolver {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_WeaponPresetOverride* {
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_GameScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ForgetSetAsideAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum arrival : int {
    None          = 0,
    Started       = 1,
    came          = 2,
    cameAndWaited = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::animationmodule::S_FragmentIdleStateData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GatherFleas : int {
    None        = 0,
    Active      = 1,
    Updated     = 2,
    GatherAgain = 3,
    Done        = 4,
    Canceled    = 5,
    Aborted     = 6,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::I_SwitchableNode {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff1a0
enum enum wh::dialogmodule::data::E_Punishment::Type : unsigned char {
    None      = 0,
    Pillory   = 1,
    Beating   = 2,
    Branding  = 3,
    Execution = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeLeftHandContentEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum krypta : int {
    None         = 0,
    StashInspect = 1,
    MalbaInspect = 2,
    Done         = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_PlayerOutfitOverride> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::xgenaimodule::NPCState::C_Action>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PourWineToChancellors : int {
    None         = 0,
    MarkerToJugs = 1,
    Active       = 2,
    Done         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeedEnum : int {
    Walk   = 0,
    Run    = 1,
    Sprint = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HandContentElementRequired* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29af0
enum enum wh::xgenaimodule::E_VariableRequirementType::Type : unsigned char {
    ForwardDeclaration = 0,
    In                 = 1,
    Out                = 2,
    Reference          = 3,
    ConstReference     = 4,
    None               = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeBehaviorStateElementRequired* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrazskaKucharka : int {
    None    = 0,
    Player  = 1,
    Dropped = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EdgePort> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SovkaBehavs : int {
    None             = 0,
    MomCrying        = 1,
    Sovka2MumDialog  = 2,
    SomebodyDeadOrKO = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum frantaAndTailorInteraction : int {
    None                  = 0,
    SkippingTime          = 1,
    FrantaGoesToTheTailor = 2,
    Dialogue              = 3,
    Done                  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum extraGuards_operation : int {
    Spawn   = 0,
    Despawn = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum messageForSlava : int {
    None            = 0,
    Accepted        = 1,
    Done            = 2,
    CanceledTimeout = 3,
    CanceledByDeath = 4,
    Aborted         = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChakanFight : int {
    None        = 0,
    FightActive = 1,
    HenryWon    = 2,
    ChakanWon   = 3,
    ChakanDead  = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_ClothingPresetOverride> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_VClothElement* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_DisplayTutorial* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProtectionGuardsCourtyard : int {
    NormalGuards = 0,
    MoreGuards   = 1,
    LessGuards   = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::playermodule::C_Battlement *,class std::allocator<class wh::playermodule::C_Battlement *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::playermodule::C_Battlement *,class std::allocator<class wh::playermodule::C_Battlement *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamStatesSara : int {
    InitStreamed    = 0,
    DebugStreamed   = 1,
    DebugUnstreamed = 2,
    Unstreamed      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_InformationMessageStatus::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WritingLetterResult : int {
    None     = 0,
    VeryGood = 1,
    Good     = 2,
    Mix      = 3,
    Bad      = 4,
    VeryBad  = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_TutorialName>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionCarryItem* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DogRevelation : int {
    None                  = 0,
    WaitingForStream      = 1,
    WaitingForTeleport    = 2,
    DogWaitingForHenry    = 3,
    DogRunningAroundHenry = 4,
    Done                  = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DratsMap : int {
    None       = 0,
    InStash    = 1,
    WithPlayer = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ForEach> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_progress : int {
    Stopped = 0,
    Running = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
class boost::optional<struct wh::rpgmodule::S_RoleId> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hostageSituation : int {
    None                                               = 0,
    HoldHostage_Tense                                  = 1,
    HoldHostage_Calm                                   = 2,
    KidnapperReleasesHostage_BothToIdle                = 3,
    KidnapperReleasesHostage_HostageKillsKidnapper     = 4,
    KidnapperKillsHostage_KidnapperToIdle              = 5,
    KidnapperKillsHostage_KidnapperToCombat            = 6,
    KidnapperGetsHit_KidnapperToCombat_HostageToGround = 7,
    KidnapperGetsHit_KidnapperDies_HostageToGround     = 8,
    HostageGetsHit_HostageDies_KidnapperToCombat       = 9,
    SituationFinished                                  = 10,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::entitymodule::S_ItemManipulationData {
    0x0  : Id             : int;
    0x8  : Tag            : class CryStringT<char>;
    //Getter: WHGame.dll+0x1b9d2a0
    get  : AllowRun       : bool;
    //Getter: WHGame.dll+0x29bd564
    get  : AllowSprint    : bool;
    //Getter: WHGame.dll+0x29bdc88
    get  : UsesBothHands  : bool;
    0x10 : SharpeningAnim : class CryStringT<char>;
    0x20 : Variations     : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemManipulationVariation,class std::allocator<struct wh::entitymodule::S_ItemManipulationVariation> > >;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_SoulStateEffectContext {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionInStatic* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::I_CombatSoul {
    //Getter: WHGame.dll+0x1edf338
    get : IsSoulCharged      : bool;
    //Getter: WHGame.dll+0x1edf3d4
    get : AttackersCount     : unsigned __int64;
    //Getter: WHGame.dll+0x1edf080
    get : SkirmishStatistics : class std::shared_ptr<struct wh::rpgmodule::S_SkirmishStatistics>;
    //Getter: WHGame.dll+0x1edf08c
    get : Target             : class wh::rpgmodule::I_Soul*;
    //Getter: WHGame.dll+0x1edf344
    get : IsUnarmed          : bool;
    //Getter: WHGame.dll+0x1edf35c
    get : HasMeleeWeapon     : bool;
    //Getter: WHGame.dll+0x1edf374
    get : HasMissileWeapon   : bool;

    //vtable offset: 0xc0
    HasWeaponInHand( wh::entitymodule::WeaponClass const & );
    //non-vtable method: WHGame.dll+0xffff8211b507ffff
    TakeDamage( float, float, classwh::rpgmodule::I_Soul*, bool, wh::entitymodule::BodyPartData const & );
    //vtable offset: 0xc8
    HasCombatHistoryWithSoul( classwh::rpgmodule::I_Soul*, float );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GirlsFleeFromKidnapper : int {
    None        = 0,
    VendulaDead = 1,
    BothAlive   = 2,
    Done        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CarbonWater : int {
    None                     = 0,
    PlayerObtained           = 1,
    PlayerUsed               = 2,
    PlayerNotUsedQuestFailed = 3,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::musicmodule::C_WorldStateTogglesDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_WorldStateToggle>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::musicmodule::C_WorldStateToggle>,class std::allocator<class std::shared_ptr<class wh::musicmodule::C_WorldStateToggle> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::shopmodule::S_ShopItemFilter {
    0x0  : filter                : class CryStringT<char>;
    0x10 : price_buy_multiplier  : float;
    0x14 : price_sell_multiplier : float;
    0x18 : exclude               : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonecZabomysichValek_killingImportantPeople : int {
    None  = 0,
    Death = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_ManualRandomEvent> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LetBeruskaWinFight : int {
    None                 = 0,
    Started              = 1,
    WonFight             = 2,
    LostFight            = 3,
    TrainedWithBeruska   = 4,
    BeruskaWaitedTooLong = 5,
    RefusedQuest         = 6,
    Aborted              = 7,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::C_InventoryPreset>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stashItemValueSumCalucation : int {
    None                = 0,
    ReInitingValue      = 1,
    Calculating         = 2,
    CalculationFinished = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AboutTipOfArrowWithZajic : int {
    None           = 0,
    Started        = 1,
    Combat         = 2,
    PlayerLeft     = 3,
    ZajicLeft      = 4,
    TipOfArrowSold = 5,
    Aborted        = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::questmodule::S_ObjectiveName {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_EnableBehaviorForNPCElement* {
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::entitymodule::C_ItemDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<struct wh::entitymodule::S_ItemClass>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<struct wh::entitymodule::S_ItemClass>,class std::allocator<class std::shared_ptr<struct wh::entitymodule::S_ItemClass> > > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TriggerPort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrournamentAdvatage : int {
    None           = 0,
    Advantage      = 1,
    NonAdvantage   = 2,
    TournamentDone = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum katherinesShoeQI_obsolete : int {
    None      = 0,
    Henry     = 1,
    Katherine = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
class rttr::variant {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum anna : int {
    None              = 0,
    Started           = 1,
    foundStolenJewels = 2,
    annaUnkownThief   = 3,
    annaKnownThief    = 4,
    busted            = 5,
    toldMiller        = 6,
    Canceled          = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::E_ElementType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MarketaStreaming : int {
    None               = 0,
    PreviousQuestEnded = 1,
    CanStream          = 2,
    Streamed           = 3,
    Unstreamed         = 4,
};

//size in bytes: 0x80550
//pointer dimension: 0
class CharacterManager : struct ICharacterManager {
    0xf0  : ModelCacheSKIN      : class std::reference_wrapper<class std::unordered_map<class CSkin *,struct CDefaultSkinningReferences,struct std::hash<class CSkin *>,struct std::equal_to<class CSkin *>,class std::allocator<struct std::pair<class CSkin * const,struct CDefaultSkinningReferences> > > const >;
    0x130 : ModelCacheSKINIndex : class std::reference_wrapper<class std::unordered_multimap<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class CSkin *,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class CSkin *> > > const >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum carcassProgress : int {
    None                 = 0,
    MoveFromOriginalArea = 1,
    MoveToTargetArea     = 2,
    Done                 = 3,
    Canceled             = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SavingTheGirls : int {
    None             = 0,
    NobodyDead       = 1,
    VendulaDead      = 2,
    BothDead         = 3,
    TimeLimitExpired = 4,
    KilledHanka      = 5,
    LetHankaGo       = 6,
    OnlySvatavaDead  = 7,
    HankaEscaping    = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum weaponType : int {
    Any  = 0,
    None = 1,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_MinigameCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8 : RequiresEmpty : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_DebugReputationLog* {
};

//size in bytes: 0x98
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_PathFindingRequestDefault : struct wh::xgenaimodule::navigation::S_PathFindingRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionOutGenerated* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum letterFromVavakHolder : int {
    None     = 0,
    Bures    = 1,
    Player   = 2,
    Kristian = 3,
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::conceptmodule::C_Select : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Node> {
    0x10 : Name            : class CryStringT<char>;
    0x18 : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0xa8 : InputPortGroups : int;
    //Getter: WHGame.dll+0x25ae4c0
    get  : ValueTypes      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x68 : OnExec          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SceneAtStartStage : int {
    WaitingOnPlayerMove           = 0,
    FirstDialogOnRoad             = 1,
    SecondDialogOnRoad            = 2,
    HorsemanPatrolsRoad_gotoEnd   = 3,
    HorsemanPatrolsRoad_gotoStart = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_FoodItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerMenState : int {
    None  = 0,
    Guard = 1,
    Sleep = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum fakeSoldierStreaming : int {
    None       = 0,
    Streamed   = 1,
    Unstreamed = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::animationmodule::C_FocusCameraNode> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BathhouseState : int {
    DesolateBathhouse                      = 0,
    BudovaniLazni_RenewedBathhouseBeforeCS = 1,
    BudovaniLazni_RenewedBathhouseAfterCS  = 2,
    BudovaniLazniEnded_Renewed             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TreasureHuntProgress : int {
    None            = 0,
    Active          = 1,
    Updated         = 2,
    Done            = 3,
    CanceledSvatava = 4,
    CanceledVendula = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_trespassInformationWuid : int {
    none     = 0,
    home     = 1,
    homeArea = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoubleUpdate : int {
    none      = 0,
    started   = 1,
    updated1  = 2,
    updated2  = 3,
    completed = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_AIConceptSignalTrigger* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::storm::C_StormDebug {
    //Getter: WHGame.dll+0x2cc2068
    get : MatchedRules : class std::vector<class wh::rpgmodule::storm::C_Rule const *,class std::allocator<class wh::rpgmodule::storm::C_Rule const *> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulList* {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::framework::C_WrappersExample {
    0x8  : SharedPtr          : class std::shared_ptr<int>;
    0x28 : WeakPtr            : class std::weak_ptr<int>;
    0x48 : RefWrapper         : class std::reference_wrapper<int>;
    0x50 : BoostOptional      : class boost::optional<int>;
    0x18 : EmptySharedPtr     : class std::shared_ptr<int>;
    0x38 : EmptyWeakPtr       : class std::weak_ptr<int>;
    0x58 : EmptyBoostOptional : class boost::optional<int>;
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::game::S_LevelSwitching {
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::I_Reward {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::rpgmodule::C_SkillLessonLevelDatabase : class wh::databasemodule::C_ObjectDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<struct wh::rpgmodule::S_SkillLessonLevel,class std::vector>,class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<struct wh::rpgmodule::S_SkillLessonLevel> >, class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_SkillLessonLevel,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::S_SkillLessonLevel,class std::allocator<struct wh::rpgmodule::S_SkillLessonLevel> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::I_FilteringCondition* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FocusCameraHandler : int {
    None       = 0,
    Inactive   = 1,
    BarkPlayed = 2,
    Active     = 3,
    Done       = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_TrackViewCutscene* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_DropAction* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_DisableHorseInventory> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HostinaProChudeFail : int {
    None              = 0,
    PlayerKilledGuard = 1,
    CenekDied         = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::TypeDescriptors::S_Type,class std::vector> {
};

//size in bytes: 0xc
//pointer dimension: 0
struct TParticleCounts<float>::VolumeStats {
    0x0 : stat  : float;
    0x4 : dyn   : float;
    0x8 : error : float;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_SmartHubPostSearchData {
    //Getter: WHGame.dll+0xca7984
    get  : ElementInitializers : class std::vector<class std::shared_ptr<class wh::xgenaimodule::scheduler::C_ElementInitializerBase>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::scheduler::C_ElementInitializerBase> > >;
    0x18 : SchedulerEffect     : class std::reference_wrapper<class std::vector<class wh::xgenaimodule::scheduler::C_SchedulerEffectBase *,class std::allocator<class wh::xgenaimodule::scheduler::C_SchedulerEffectBase *> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WildDogs : int {
    Default                  = 0,
    UnstreamedZachranaPtacka = 1,
    StreamedZachranaPtacka   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LootableAndPickableDeadBody : int {
    None             = 0,
    PickableByPlayer = 1,
    LootableByPlayer = 2,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::guimodule::C_UICredits : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x70
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_DeltaMovementParamsEntityClassNode {
    0x0  : DeltaMovementParams     : struct wh::S_DeltaMovementComputerParams;
    0x10 : LogicalSpeedParams      : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::navigation::S_DeltaMovementParamsNode,class std::allocator<struct wh::xgenaimodule::navigation::S_DeltaMovementParamsNode> > >;
    0x28 : EntityClassName         : class CryStringT<char>;
    0x38 : SurroundingDef          : struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingDef;
    0x58 : SurroundingRequirements : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::navigation::S_DeltaMovementPartialSurroundingRequirements,class std::allocator<struct wh::xgenaimodule::navigation::S_DeltaMovementPartialSurroundingRequirements> > >;
};

//size in bytes: 0x98
//pointer dimension: 0
struct wh::entitymodule::S_WeaponClass {
    0x8  : id                          : int;
    0x10 : name                        : class CryStringT<char>;
    0x18 : skill                       : enum wh::rpgmodule::E_SoulSkill;
    0x1c : attachment_slot_id          : int;
    0x20 : equip_slot                  : enum wh::entitymodule::E_WeaponEquipSlot;
    0x25 : in_right_hand               : bool;
    0x28 : holster_slot_id             : int;
    0x24 : is_twohanded                : bool;
    0x2c : gender_id                   : unsigned char;
    0x30 : item_manipulation_type      : int;
    0x34 : primary_attack_type_id      : int;
    0x38 : secondary_attack_type_id    : int;
    0x3c : attack_distance             : float;
    0x40 : is_blocking                 : bool;
    0x44 : sync_guard_distance         : float;
    0x48 : sync_guard_priority         : int;
    0x4c : max_attack_distance         : float;
    0x50 : collision_mode              : int;
    0x54 : anim_collision_mode         : int;
    0x58 : combat_priority             : int;
    0x5c : horse_pull_down_distance    : float;
    0x60 : horse_pull_down_max_speed   : float;
    0x64 : horse_pull_down_z_tolerance : float;
    0x68 : hunt_attack_distance        : float;
    0x6c : zone_change_timeout_coef    : float;
    0x70 : draw_buff_id                : struct CryGUID;
    0x80 : alternative_draw_buff_id    : struct CryGUID;
    0x90 : sharpening_zone_count       : int;
};

//size in bytes: 0x1a0
//pointer dimension: 0
class wh::entitymodule::C_HoleTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Hole         : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Hole *>*;
    0xd0  : OnStarted    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x110 : OnStopped    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x150 : OnFinished   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_SequenceVisibility {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::framework::C_SaveGameDescription::C_DLCDescription {
    0x8 : Id : enum wh::shared::E_DLC::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PodkovyOdevzdani : int {
    None                = 0,
    LzeOdevzdat         = 1,
    OdevzdavanoIncludem = 2,
    Odevzdano           = 3,
    Failed              = 4,
    Aborted             = 5,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::entitymodule::clothing::S_ClothingAttachmentDesc {
    0x0 : AttachmentName : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum speakWithInnkeeeper : int {
    None                  = 0,
    translatedRecipe      = 1,
    discoveredIngredients = 2,
    Completed             = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulState> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b501f0
enum enum wh::entitymodule::E_Race::Type : int {
    Invalid = -1,
    Human   = 0,
    Horse   = 1,
    Sheep   = 2,
    Hare    = 3,
    Pig     = 4,
    Hen     = 5,
    Dog     = 6,
    Cattle  = 7,
    RedDeer = 8,
    RoeDeer = 9,
};

//size in bytes: 0x2
//pointer dimension: 0
//enum vtable: 3b9d620
enum enum wh::rpgmodule::storm::E_TaskClass : unsigned short {
    roles       = 1,
    abilities   = 2,
    schedules   = 4,
    names       = 8,
    reputations = 16,
    hobbies     = 32,
    contexts    = 64,
    equipment   = 128,
    appearance  = 256,
    characters  = 512,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JeronymNaz : int {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab4158
enum enum wh::xgenaimodule::S_ScriptContextDatabaseNode::E_ContextClass : int {
    Game     = 0,
    Entity   = 1,
    Relation = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartSpeed {
};

//size in bytes: 0x350
//pointer dimension: 0
class wh::rpgmodule::C_AddSoulDefaultItem : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul> {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0  : ItemClass        : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;
    0x210 : Amount           : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x110 : Purpose          : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::C_AddSoulDefaultItem::E_Purpose::Type>*;
    0x150 : Mode             : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_AddDefaultItemMode::Type>*;
    0x190 : DisableRestock   : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Souls            : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x1d0 : EquipImmediately : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x250 : Quality          : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x290 : Health           : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x2d0 : Condition        : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ProjectileInAreaTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_SceneFinishedWaiter> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_FocusMode {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::I_ItemDescriptor* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::conceptmodule::C_StaticDataPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort, class wh::conceptmodule::C_InterfaceDataPort {
    0x28 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value     : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type      : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x30 : Direction : enum wh::conceptmodule::E_PortDirection;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomocKecalovi : int {
    None              = 0,
    Started           = 1,
    Completed         = 2,
    FailedKecalDead   = 3,
    FailedKecalBeaten = 4,
    FailedHracBeaten  = 5,
    Aborted           = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum HitReactionStrength : int {
    Zero        = 0,
    Healing     = 1,
    Tickle      = 2,
    Unpleasant  = 3,
    Exhausting  = 4,
    MinorInjury = 5,
    MajorInjury = 6,
    Fatal       = 7,
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_PutItemInHandAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_HideActorCommand* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::playermodule::C_AlchemyCrushableSpecialIngredient {
    0x8  : ItemId       : struct CryGUID;
    0x18 : MortarModel  : class CryStringT<char>;
    0x20 : CrushedModel : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum komarAfterUntie : int {
    None            = 0,
    Wait            = 1,
    GoToCertovka_1  = 2,
    GoToCertovka_2  = 3,
    RunToCertovka_1 = 4,
    RunToCertovka_2 = 5,
    Done            = 6,
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::guimodule::C_UICompass : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringDocumentBack : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
    Aborted  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CekaciChovani : int {
    None            = 0,
    CimbrosCekaji   = 1,
    CimbrosNecekaji = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::guimodule::I_UIDragAndDropViewer {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkaMigration : int {
    Default                      = 0,
    Certovka_SedmStatecnychStart = 1,
    Certovka_SetkaniVRatbori2    = 2,
    Suchdol                      = 3,
    Ruthardka                    = 4,
    SuchdolAfterLegat            = 5,
    CertovkaEndGame              = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_MemberFunction>* {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::S_ScriptContextPresetDatabaseNode {
    0x18 : Name     : class CryStringT<char>;
    0x20 : Class    : enum wh::xgenaimodule::S_ScriptContextDatabaseNode::E_ContextClass;
    //Getter: WHGame.dll+0x483850
    get  : Contexts : class std::vector<struct wh::xgenaimodule::S_ScriptContextDatabaseNode,class std::allocator<struct wh::xgenaimodule::S_ScriptContextDatabaseNode> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::I_Operator* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_weapon : int {
    Bow      = 0,
    Crossbow = 1,
    Rifle    = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekMigration : int {
    MalesovPrisoner          = 0,
    InCertovkaZachranaPtacka = 1,
    InSuchdolUtokNaMalesov   = 2,
    InRuthardkaPapezskyLegat = 3,
    InSuchdolPapezskyLegat   = 4,
    InCertovkaEndGame        = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_InterfaceDataPort> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gatheringEnemies : int {
    None        = 0,
    Gathering_1 = 1,
    Gathering_2 = 2,
    Gathering_3 = 3,
    Move_1      = 4,
    Move_2      = 5,
    Done        = 6,
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> {
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartObjectAnimation {
    0x0  : Results              : class boost::container::flat_map<struct wh::xgenaimodule::navigation::S_NavMeshSource,struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationSerializedCheckResult,struct std::less<struct wh::xgenaimodule::navigation::S_NavMeshSource>,void>;
    0x18 : ProjectedTargetWorld : struct QuatT_tpl<float>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum banditsStreamState : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIHudCrimeList {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_PauseWorldTime* {
};

//size in bytes: 0x118
//pointer dimension: 0
struct wh::entitymodule::S_ArmorItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    //Getter: WHGame.dll+0x19c4ab0
    get   : DefenseStab                    : float;
    //Getter: WHGame.dll+0x19c4bf0
    get   : DefenseSlash                   : float;
    //Getter: WHGame.dll+0x19a24c0
    get   : DefenseSmash                   : float;
    0xfc  : StrReq                         : float;
    0x100 : Noise                          : float;
    0x104 : MaxStatus                      : int;
    0x108 : FactionId                      : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CodeAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetaMigration : int {
    DesolatedBathhouse              = 0,
    ReconstructedBathhouse_NotOwner = 1,
    ReconstructedBathhouse_Owner    = 2,
    LivesInCottage                  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubaParaluStandoff : int {
    None           = 0,
    KaterinaDrzi   = 1,
    KaterinaZabila = 2,
    HenryZabil     = 3,
    Cancelled      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StashAsset* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingHidingGroup>,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulThreatsTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum getPrisoner : int {
    none          = 0,
    active        = 1,
    surrenderDone = 2,
    fightDone     = 3,
    letHimGo      = 4,
    Canceled      = 5,
};

//size in bytes: 0x318
//pointer dimension: 0
class wh::rpgmodule::C_AreaTriggerBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::dialogmodule::data::C_FaderDialogueNode> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HromadnyHrob : int {
    Nevykopan                 = 0,
    Nevykopan_kopaniStreaming = 1,
    Nevykopan_kopaniAktivni   = 2,
    Vykopano                  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MeetKatherineProgress : int {
    None              = 0,
    Assigned          = 1,
    KatherineRejected = 2,
    KatherineMet      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrayWithBorut : int {
    None           = 0,
    Started        = 1,
    FightWithBorut = 2,
    WithoutFight   = 3,
    Failed         = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
unsigned char {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashCharacterArmorStatSub* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AssignVoiceGroupOperator* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressTourCrossroadTwo : int {
    None            = 0,
    ActiveRiding    = 1,
    ActiveFinalTalk = 2,
    Finished        = 3,
    Canceled        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TubState : int {
    None  = 0,
    Clean = 1,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingFeature {
    0x8  : Name     : class CryStringT<char>;
    //Getter: WHGame.dll+0x28308d8
    get  : Material : class CryStringT<char>;
    0x20 : TileU    : class tiny::optional<float,0,0>;
    0x24 : TileV    : class tiny::optional<float,0,0>;
    0x28 : OffsetU  : class tiny::optional<float,0,0>;
    0x2c : OffsetV  : class tiny::optional<float,0,0>;
    0x30 : RotateUV : class tiny::optional<float,0,0>;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AddFactionRelation> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::clothing::S_Uberlod,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_ScriptParam* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::C_ItemDelivery> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::databasemodule::E_ObjectDBResult {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> > > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZiskejSoudekSPrachem : int {
    None         = 0,
    ZiskejSoudek = 1,
    PrachZVozu   = 2,
    PrachZTabora = 3,
    NekdoZmrel   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum pickBones : int {
    None                 = 0,
    CanBePicked          = 1,
    CanBePickedSlavaDead = 2,
    CannotBePicked       = 3,
    BonesArePicked       = 4,
    BonesWereGone        = 5,
    Canceled             = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum concept_weaponSet : int {
    primary   = 0,
    secondary = 1,
    oversized = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourToForest : int {
    None                       = 0,
    SilentOnWayToForest        = 1,
    ChattingOnWayToForest      = 2,
    WolvesHowlingOnWayToForest = 3,
    CommentWolvesOnWayToForest = 4,
    SingingOnWayToForest1      = 5,
    SingingOnWayToForest2      = 6,
    DogReleased                = 7,
    Done                       = 8,
    Aborted                    = 9,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_InfiniteHoldInteractionTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
long double* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_CameraCommand : class wh::dialogmodule::data::C_Command {
    0x8  : Role         : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay        : float;
    0xe  : TimingMode   : enum wh::dialogmodule::data::E_CommandTimingMode;
    //Getter: WHGame.dll+0x19b5460
    get  : CameraType   : enum wh::dialogmodule::data::E_CameraCommandType;
    0x10 : CustomCamera : class CryStringT<char>;

    //non-vtable method: WHGame.dll+0x76c17c
    OnAfterDeserialization( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContextPreset>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObjeveniJindryUNebaka : int {
    None      = 0,
    Neobjeven = 1,
    Objeven   = 2,
    Aborted   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TreasureMoney : int {
    Burried           = 0,
    PlayerSawTreasure = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_IntersectionItemDescriptor* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3992fa8
enum enum wh::guimodule::E_ConceptMarkerType::Type : unsigned char {
    QuestGiver      = 0,
    ActivityGiver   = 1,
    QuestTipster    = 2,
    PoiTipster      = 3,
    FightArena      = 4,
    FirstFightArena = 5,
    DLC0            = 6,
};

//size in bytes: 0x210
//pointer dimension: 0
class wh::guimodule::C_FaderController {
    0x38 : State               : enum wh::guimodule::E_FaderState::Type;
    0x48 : ActiveFaders        : class std::reference_wrapper<class std::unordered_set<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *,struct std::hash<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *>,struct std::equal_to<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *>,class std::allocator<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *> > >;
    0x88 : MutingFaders        : class std::reference_wrapper<class std::unordered_set<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *,struct std::hash<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *>,struct std::equal_to<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *>,class std::allocator<class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> *> > >;
    0xc8 : ActiveFaderSuspends : class std::reference_wrapper<class std::unordered_set<class wh::guimodule::C_FaderSuspend *,struct std::hash<class wh::guimodule::C_FaderSuspend *>,struct std::equal_to<class wh::guimodule::C_FaderSuspend *>,class std::allocator<class wh::guimodule::C_FaderSuspend *> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekTravelingToCertovka : int {
    None                = 0,
    TakingDeer          = 1,
    TravelingToCertovka = 2,
    InCertovka          = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ChangeStanceAction* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_DetachEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::I_Soul* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_RuntimeState> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourToNomadWoman : int {
    None               = 0,
    WalkingInSilence   = 1,
    WalkingAndChatting = 2,
    Done               = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_selfhelpResolutionKind : int {
    fight            = 0,
    leaveUnconscious = 1,
    pay              = 2,
    payAllMoney      = 3,
    punishment       = 4,
    questPunishment  = 5,
    report           = 6,
    skillCheck       = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::E_DialogueCameraTypeOverride {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_DeltaMovementPartialSurroundingRequirements* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PodkoniStreamedState : int {
    InitiallyStreamed          = 0,
    PosledniPomazaniUnstreamed = 1,
    PosledniPomazaniStreamed   = 2,
    UnstreamedDebug            = 3,
    StreamedDebug              = 4,
    M48aBattleUnstreamed       = 5,
    M48aStreamed               = 6,
    M48aNightBattleUnstreamed  = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
struct IConsole {
};

//size in bytes: 0x148
//pointer dimension: 0
class wh::rpgmodule::C_AddFactionRelationWithinArray : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::rpgmodule::C_FactionRelationBase {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : RelationValue : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x108 : SoulArray     : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PoslicekEvent : int {
    None           = 0,
    EventMuzeZacit = 1,
    EventSkoncil   = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_DataPort> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::shopmodule::C_Shop *,class std::allocator<class wh::shopmodule::C_Shop *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::shopmodule::C_Shop *,class std::allocator<class wh::shopmodule::C_Shop *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::xgenaimodule::TypeDescriptors::S_Type {
    0x0  : Name     : class CryStringT<char>;
    0x8  : Children : class std::vector<struct wh::xgenaimodule::TypeDescriptors::S_Type,class std::allocator<struct wh::xgenaimodule::TypeDescriptors::S_Type> >;
    0x20 : Members  : class std::vector<struct wh::xgenaimodule::TypeDescriptors::S_Member,class std::allocator<struct wh::xgenaimodule::TypeDescriptors::S_Member> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShootersInTower : int {
    None       = 0,
    Shooting   = 1,
    JustHiding = 2,
    Done       = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContextPreset> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_PickUpFromSetAsideAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_JointElement* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a649d0
enum enum wh::dialogmodule::data::E_CharacterCreation::Type : unsigned char {
    None         = 0,
    Warrior      = 1,
    Diplomat     = 2,
    Scout        = 3,
    Strength     = 4,
    Agility      = 5,
    Vitality     = 6,
    Speech       = 7,
    Houndmaster  = 8,
    Stealth      = 9,
    Survival     = 10,
    Scholarship  = 11,
    Swords       = 12,
    HeavyWeapons = 13,
    Unarmed      = 14,
    Marksman     = 15,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekStreaming : int {
    None                             = 0,
    StreamedPosledniPomazani         = 1,
    UnstreamedPosledniPomazani       = 2,
    StreamedZachranaPtacka           = 3,
    UnstreamedSetkaniVRatbori        = 4,
    StreamedSetkaniVRatbori          = 5,
    UnstreamedStealthMiseZaJindru    = 6,
    StreamedDesperateDefenseAsBohuta = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeCombatAutomationsEffect* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3993098
enum enum wh::combatmodule::E_UIComboGroup::Type : unsigned char {
    Longsword        = 0,
    Shortsword       = 1,
    ShortswordShield = 2,
    Blunt            = 3,
    BluntShield      = 4,
    Halberd          = 5,
    Unarmed          = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Hole *>* {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::game::C_ExtraRewardData {
    0x8  : Name      : class CryStringT<char>;
    0x10 : UiName    : class CryStringT<char>;
    0x18 : UiInfo    : class CryStringT<char>;
    0x20 : IconId    : class CryStringT<char>;
    0x28 : UiOrder   : int;
    0x2c : DlcId     : int;
    0x30 : ProsId    : class CryStringT<char>;
    0x38 : ItemId    : struct CryGUID;
    0x48 : ItemCount : int;
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_ScriptContextDatabaseNode {
    0x0 : Name       : class CryStringT<char>;
    0x8 : Class      : enum wh::xgenaimodule::S_ScriptContextDatabaseNode::E_ContextClass;
    //Getter: WHGame.dll+0x3387a9c
    get : SideEffect : class boost::optional<class CryStringT<char> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightWithMusasGuard : int {
    None            = 0,
    Fight           = 1,
    GuardUnconsious = 2,
    PlayerFled      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitForDoorsLoad : int {
    None    = 0,
    Loading = 1,
    Done    = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afee80
enum enum wh::rpgmodule::E_CharacterComponentTagPaleness::Type : unsigned char {
    Pale      = 0,
    Ordinary  = 1,
    Suntanned = 2,
    Cuman     = 3,
    Roma      = 4,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::entitymodule::C_EquipmentSlot {
    0x18 : Id                 : int;
    0x8  : Name               : class CryStringT<char>;
    0x1c : BodyLayerTypeId    : int;
    0x20 : EquipmentPartId    : unsigned int;
    0x24 : UIBodyPartId       : int;
    0x10 : UISlot             : class CryStringT<char>;
    0x28 : UISlotSubType      : int;
    //Getter: WHGame.dll+0x293b024
    get  : ArmorTypes         : class CryStringT<char>;
    0x48 : RequiresEmptySlot  : class CryStringT<char>;
    0x50 : RequiresFilledSlot : class CryStringT<char>;
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_InteractionTriggerAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_ItemDeliveryMode {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HenrySleep : int {
    Alone                = 0,
    WithBartos           = 1,
    WithBartos_censored  = 2,
    WithJohanka          = 3,
    WithJohanka_censored = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FistFightConsequences : int {
    None                   = 0,
    Fight                  = 1,
    FightToTheDeath        = 2,
    FightWon               = 3,
    FightLost              = 4,
    Persuaded              = 5,
    WeaponDraw             = 6,
    LeopoldKnowsEverything = 7,
    Canceled               = 8,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::environmentmodule::S_WeatherProfileData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::I_FilteringCondition {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::I_ValueComparatorSelector* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SolveArgument : int {
    None              = 0,
    SolveArgument     = 1,
    SolvedGoodHenry   = 2,
    SolvedGreedyHenry = 3,
    Failed            = 4,
};

//size in bytes: 0x158
//pointer dimension: 0
struct wh::entitymodule::S_MissileWeaponItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_WeaponEquipItemClass, struct wh::entitymodule::S_WeaponItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    0xf0  : Class                          : int;
    0xf4  : SubClass                       : int;
    0x110 : Defense                        : float;
    0x114 : MaxStatus                      : int;
    0x118 : StrReq                         : unsigned int;
    0x11c : AgiReq                         : unsigned int;
    0x120 : IsBreakable                    : bool;
    0xf8  : BrokenItemClassId              : struct CryGUID;
    0x128 : HolsterModel                   : class CryStringT<char>;
    0x130 : HolsterMaterial                : class CryStringT<char>;
    0x138 : Power                          : float;
    0x13c : LimbResistance                 : float;
    0x140 : OldFormula                     : bool;
    0x148 : SoundSwitch                    : class CryStringT<char>;
    0x150 : FireSoundMultiplicator         : float;
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::entitymodule::clothing::C_PendulaRowElement : class wh::entitymodule::clothing::C_ElementBase, class wh::entitymodule::clothing::C_JointElementBase {
    0x8  : Name                : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get  : AttachmentName      : class CryStringT<char>;
    0x10 : RowJoint            : class std::optional<class CryStringT<char> >;
    0x28 : RowSimulationParams : class std::shared_ptr<struct RowSimulationParams>;
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::conceptmodule::C_GetModuleVersion : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : Version      : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_GameReleaseVersion::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BocekObjectiveSupport : int {
    None        = 0,
    Active      = 1,
    TalkToHanus = 2,
    BackToBocek = 3,
    Done        = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::I_HLod {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptParamDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_ScriptParam,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_ScriptParam,class std::allocator<struct wh::xgenaimodule::S_ScriptParam> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ossuaryWall : int {
    none         = 0,
    assembled    = 1,
    disassembled = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToGerdaAfterFigth : int {
    None                 = 0,
    TalkToGerdaAfterWin  = 1,
    TalkToGerdaAfterLose = 2,
    CompleteAfterWin     = 3,
    CompleteAfterLose    = 4,
    Fail                 = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitForMinersAtGate : int {
    None             = 0,
    Started          = 1,
    Completed        = 2,
    MinersAreIgnored = 3,
    MinersAreDead    = 4,
    Aborted          = 5,
};

//size in bytes: 0x118
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimPlaceRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPlaceRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPlaceRequest> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::I_Soul {
    //Getter: WHGame.dll+0x1ede058
    get : IsDead           : bool;
    //Getter: WHGame.dll+0x1ede060
    get : IsUnconscious    : bool;
    //Getter: WHGame.dll+0x1eddb88
    get : IsMounted        : bool;
    //Getter: WHGame.dll+0x1eddb80
    get : IsBleeding       : bool;
    //Getter: WHGame.dll+0x1edf35c
    get : IsDrunk          : bool;
    //Getter: WHGame.dll+0x1eddb78
    get : IsStarving       : bool;
    //Getter: WHGame.dll+0x1eddb70
    get : IsExhausted      : bool;
    //Getter: WHGame.dll+0x1edfbc8
    get : Archetype        : class std::reference_wrapper<struct wh::rpgmodule::S_SoulArchetype const >;
    //Getter: WHGame.dll+0x1edfbe0
    get : Inventory        : class wh::entitymodule::C_Inventory*;
    //Getter: WHGame.dll+0x1edf17c
    get : CombatSoul       : class wh::rpgmodule::I_CombatSoul*;
    //Getter: WHGame.dll+0x1edfbd4
    get : CompanionManager : class wh::rpgmodule::C_CompanionManager*;
    //Getter: WHGame.dll+0x1edfbec
    get : EquipmentManager : class wh::entitymodule::C_EquipmentManager*;
    //Getter: WHGame.dll+0x1edfc40
    get : FactionNode      : class wh::rpgmodule::C_NPCFactionNode*;
    //Getter: WHGame.dll+0x1edf1a0
    get : SkillTeacher     : class wh::rpgmodule::C_SkillTeacherSoulComponent*;

    //vtable offset: 0x268
    GetState( wh::rpgmodule::SoulState );
    //vtable offset: 0x528
    SetState( wh::rpgmodule::SoulState, float );
    //vtable offset: 0x288
    AdvanceToStatLevel( wh::rpgmodule::SoulStat, uint );
    //vtable offset: 0x290
    CheckEquipment( wh::entitymodule::EquipmentSlotIds const &, wh::entitymodule::EquipmentSlotIds const & );
    //vtable offset: 0x298
    AddXPFromToStatLevel( wh::rpgmodule::SoulStat, uint, uint );
    //vtable offset: 0x2a8
    GetStatLevel( wh::rpgmodule::SoulStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x2a8
    GetStatLevelRelative( wh::rpgmodule::SoulStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x2d0
    GetDerivedStat( wh::rpgmodule::SoulDerivedStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x2f0
    GetStaticStat( wh::rpgmodule::SoulStaticStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x318
    AdvanceToSkillLevel( wh::rpgmodule::SoulSkill, uint );
    //vtable offset: 0x320
    AddXPFromToSkillLevel( wh::rpgmodule::SoulSkill, uint, uint );
    //vtable offset: 0x330
    GetSkillLevel( wh::rpgmodule::SoulSkill, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x330
    GetSkillLevelRelative( wh::rpgmodule::SoulSkill, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x520
    UseInventoryItems( classstd::shared_ptr<classwh::entitymodule::I_ItemDescriptor>, bool, wh::entitymodule::BodyPartData const & );
    //vtable offset: 0x518
    CanEat( Guid const & );
    //vtable offset: 0x70
    IsBodyPartBleeding( wh::entitymodule::BodyPartData const & );
    //vtable offset: 0x4a0
    Revive( );
    //vtable offset: 0x550
    AddDirt( float, bool );
    //vtable offset: 0x558
    AddBlood( wh::entitymodule::BodyParts, wh::conceptmodule::Floats, bool );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SockyState : int {
    None    = 0,
    Intro   = 1,
    Hospoda = 2,
    After   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SaSpotichuKTaboru : int {
    None            = 0,
    Active          = 1,
    SeminWait       = 2,
    SukWait         = 3,
    SeminSukWaiting = 4,
    Done            = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MartinOderinStreamedStatus : int {
    None                     = 0,
    Streamed                 = 1,
    StreamedZachranaPtacka   = 2,
    UnstreamedZachranaPtacka = 3,
    StreamedM47              = 4,
    UnStreamedM47            = 5,
    Unstreamed               = 6,
};

//size in bytes: 0xb0
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_UnstanceData {
    0x0  : Name                 : class CryStringT<char>;
    0x8  : Stance               : enum wh::entitymodule::E_StanceCategory::Type;
    0xc  : IsAligned            : bool;
    0xd  : UseLocationObject    : bool;
    0x10 : SaveOutPickedUpItems : bool;
    0x18 : In                   : struct wh::xgenaimodule::NPCState::S_UnstanceData::S_Phase;
    0x38 : Loop                 : struct wh::xgenaimodule::NPCState::S_UnstanceData::S_Phase;
    0x58 : Out                  : struct wh::xgenaimodule::NPCState::S_UnstanceData::S_Phase;
    //Getter: WHGame.dll+0x32ffa0c
    get  : ActorClasses         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0xe  : UseForDialogueTwin   : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HolsterWeaponAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum speakWithVillagers : int {
    None                    = 0,
    Started                 = 1,
    HenrysIdea              = 2,
    VillagersIdea           = 3,
    PlayerBetrayedVillagers = 4,
    Failed                  = 5,
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::entitymodule::S_AlchemyBaseItemClass : struct wh::entitymodule::S_ItemClass {
    0x8  : Id     : struct CryGUID;
    0x18 : Name   : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags   : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : UIName : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetEntityContextPreset* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class std::vector<bool,class std::allocator<bool> >* {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_TemplatedNode> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x160
//pointer dimension: 0
class wh::conceptmodule::C_StateVariable : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_StateBase<class rttr::variant> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x60  : State        : class wh::conceptmodule::C_PortRef*;
    0xa0  : DefaultValue : class wh::conceptmodule::C_PortRef*;
    0x120 : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe0  : Value        : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashListCombo* {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::rpgmodule::C_SamplingCounter : class wh::rpgmodule::C_Counter {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::I_TagPoint *,class std::allocator<class wh::entitymodule::I_TagPoint *> > >* {
};

//size in bytes: 0x348
//pointer dimension: 0
class wh::entitymodule::C_ItemDescriptorTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > {
    0x10  : Name                  : class CryStringT<char>;
    0x18  : RuntimeState          : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                 : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView             : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive              : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc8  : Inventory             : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Inventory *>*;
    0x108 : ItemDescriptor        : class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::I_ItemDescriptor> >*;
    0x148 : OnTargetAmountAcquire : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x188 : OnAcquire             : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c8 : OnTargetAmountLose    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x208 : OnLose                : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x248 : OnAfterLose           : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x288 : Tracker               : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;
    0x2c8 : Item                  : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Item *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HenryNpcStreaming : int {
    None                            = 0,
    PrepadeniVlasskehoDvora         = 1,
    PrepadeniVlasskehoDvoraUnstream = 2,
    HladAZmar                       = 3,
    HladAZmarUnstream               = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::rpgmodule::S_LocationId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum party_dancingPlayerWithFemale_variant : int {
    variant_01 = 0,
    variant_02 = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithMoravians : int {
    None           = 0,
    Started        = 1,
    Completed      = 2,
    DeliveredBooze = 3,
    Aborted        = 4,
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::guimodule::C_UIOverlay : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum silverRegisterHoldership : int {
    None             = 0,
    AcquiredByPlayer = 1,
    HandedOut        = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_BlacksmithingTutorialFeature {
};

//size in bytes: 0x50
//pointer dimension: 0
struct wh::entitymodule::S_ClothingConfig {
    0x0  : Name                  : class CryStringT<char>;
    0x8  : Race                  : enum wh::entitymodule::E_Race::Type;
    0xc  : Gender                : enum wh::entitymodule::E_ActorGender;
    0x10 : UberlodRoot           : class CryStringT<char>;
    0x18 : DefaultBody           : class CryStringT<char>;
    0x20 : DefaultHead           : class CryStringT<char>;
    0x28 : DefaultHair           : class CryStringT<char>;
    0x30 : DefaultBeard          : class CryStringT<char>;
    0x38 : DefaultClothingPreset : class CryStringT<char>;
    0x40 : Carcass               : class CryStringT<char>;
    0x48 : HeadIsNeeded          : bool;
    0x49 : RemoveHelmet          : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FistFightProgress : int {
    None          = 0,
    Started       = 1,
    PlayerWin     = 2,
    PlayerLosed   = 3,
    PlayerRunAway = 4,
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::guimodule::C_UIHelpOverlay : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x2d0
//pointer dimension: 0
class wh::rpgmodule::C_SoulUnconsciousTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::rpgmodule::C_SoulPropertyTrigger {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls            : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : Soul             : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x140 : Tracker          : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;
    0x1d0 : OnAllUnconscious : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x210 : OnUnconscious    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x250 : OnAllConscious   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x290 : OnConscious      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindSoldier : int {
    None                        = 0,
    TalkedWithViktorka          = 1,
    TalkedWithSoldiers          = 2,
    Completed                   = 3,
    AccidentalySpokeWithSoldier = 4,
    Aborted                     = 5,
    CampIsGone                  = 6,
    SoldierDied                 = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Avalibility : int {
    None                = 0,
    Available           = 1,
    AvailableWithMarker = 2,
    NotAvailable        = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::T_GameWorldTimePolicy {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kovar_navraty_ver2 : int {
    none     = 0,
    Navrat1  = 1,
    Navrat2  = 2,
    Navrat3  = 3,
    Splneno1 = 4,
    Splneno2 = 5,
    Splneno3 = 6,
    Fail1    = 7,
    Fail2    = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<unsigned char>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7aed8
enum enum wh::framework::E_AutoSaveType::Type : unsigned char {
    Important = 0,
    Regular   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_OutputDataPort* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeCounter<struct wh::rpgmodule::T_GameTimePolicy>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PoacherCapon : int {
    None           = 0,
    FindPoacher    = 1,
    UpdatedOnClue  = 2,
    UpdatedOnCamp  = 3,
    Done           = 4,
    Failed         = 5,
    KilledHuntsman = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KorenarkaZachranaAcitvation : int {
    None                           = 0,
    QuestAvailable                 = 1,
    QuestAvailable_OnceTurnedDown  = 2,
    QuestAccepted_WaitingforStream = 3,
    QuestStarted_AllStreamed       = 4,
    QuestUnavailable_BozenaDead    = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_VariableInfo* {
};

//size in bytes: 0x1a8
//pointer dimension: 0
class wh::entitymodule::C_StashTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98  : Stash        : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Stash *>*;
    0xd8  : OnOpened     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x118 : OnClosed     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x158 : OnUnlocked   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
class tiny::optional<int,-2147483648,0> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum exploreSmelter : int {
    None               = 0,
    Active             = 1,
    UpdatedSimaHint    = 2,
    UpdatedSimaWaiting = 3,
    Done               = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::conceptmodule::definition::C_InterfacePortDefinition : class wh::conceptmodule::definition::I_PortDefinition {
    //Getter: WHGame.dll+0x1eddb50
    get : Name                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : Visibility                  : enum wh::conceptmodule::E_PortVisibility;
    //Getter: WHGame.dll+0x1ede048
    get : Direction                   : enum wh::conceptmodule::E_PortDirection;
    //Getter: WHGame.dll+0x1ede050
    get : ConnectionType              : enum wh::conceptmodule::E_PortConnectionType;
    //Getter: WHGame.dll+0x1ede058
    get : Type                        : class rttr::type;
    //Getter: WHGame.dll+0x1ede060
    get : Template                    : enum wh::conceptmodule::E_TemplateTypename;
    //Getter: WHGame.dll+0x1eddb78
    get : IsHidden                    : bool;
    //Getter: WHGame.dll+0x1eddb80
    get : IsVariadic                  : bool;
    //Getter: WHGame.dll+0x1eddb88
    get : IsSequential                : bool;
    //Getter: WHGame.dll+0x1eddb90
    get : IsOptional                  : bool;
    //Getter: WHGame.dll+0x1eddb98
    get : IsInternal                  : bool;
    //Getter: WHGame.dll+0x1eddba0
    get : IsAutoTriggerable           : bool;
    //Getter: WHGame.dll+0x1ede068
    get : IsTriggerableWhenHibernated : bool;
    //Getter: WHGame.dll+0x25476a0
    get : LinkedTriggerPorts          : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x1eddb70
    get : DefaultValue                : class rttr::variant;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TipsterGiverProgress : int {
    None    = 0,
    Tipster = 1,
    Giver   = 2,
    Done    = 3,
    Failed  = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerChangeAreaLabel* {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > > : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> >, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::vector> {
};

//size in bytes: 0x48
//pointer dimension: 0
struct wh::environmentmodule::S_WeatherProfileData {
    0x0  : Name               : class CryStringT<char>;
    0x8  : DelayMin           : struct wh::framework::S_TimeSpan;
    0x10 : DelayMax           : struct wh::framework::S_TimeSpan;
    0x18 : Temperature        : struct wh::environmentmodule::S_WeatherProfileData::S_Condition;
    0x20 : RainIntensity      : struct wh::environmentmodule::S_WeatherProfileData::S_Condition;
    0x28 : WindVelocity       : struct wh::environmentmodule::S_WeatherProfileData::S_Condition;
    0x30 : TimeOfDayIntervals : class std::vector<struct wh::environmentmodule::S_WeatherProfileData::S_TimeOfDayInterval,class std::allocator<struct wh::environmentmodule::S_WeatherProfileData::S_TimeOfDayInterval> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VysetrovaniVrazdyJarky : int {
    None                 = 0,
    PromluvSiSKnezem     = 1,
    HotoveVyptavaniKneze = 2,
    Canceled             = 3,
    Vyreseno             = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Level> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_AddDefaultItemMode::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<struct wh::rpgmodule::S_BuffDefinitionAITag>* {
};

//size in bytes: 0xf0
//pointer dimension: 0
struct wh::entitymodule::S_DeactivatedItem : struct wh::entitymodule::S_QuestItemInfo {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindTheArcher : int {
    None                                   = 0,
    SpokeWithInnkeeper                     = 1,
    InnkeeperToldMeAboutTheArcher          = 2,
    InspectedLatine                        = 3,
    BehindeLatrine                         = 4,
    SpokeWithDicePlayers                   = 5,
    DiceplayersAreDead                     = 6,
    Paid                                   = 7,
    Fight                                  = 8,
    TalkedWayOut                           = 9,
    FindArcher                             = 10,
    FoundArcherMyselfWithInfoFromInnkeeper = 11,
    FoundArcherMyself                      = 12,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_TriggerArea* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::combatmodule::C_TrackViewRecorderEffect> {
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionFullBodyAnimRequestImpl<struct wh::entitymodule::S_ActionFullBodyAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionFullBodyAnimRequest>, struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionFullBodyAnimRequest> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct I3DEngine* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum playerUncosciousFaderState : int {
    Disabled                   = 0,
    Enabled                    = 1,
    InProgress_Uninterruptable = 2,
    InProgress                 = 3,
    Finished                   = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulDerivedStat> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_PlayerId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WidowThanksControl : int {
    None   = 0,
    Thanks = 1,
    Done   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasRandomValue* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<struct wh::entitymodule::S_WeaponClass>,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ActiveTriggerPort> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdated : int {
    None    = 0,
    Active  = 1,
    Updated = 2,
    Done    = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Stash *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_ApseViewTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestPartProgress : int {
    None            = 0,
    Drinking        = 1,
    ExaminingPalace = 2,
    Done            = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionUnconscious* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerBarking : int {
    None              = 0,
    PlayerIsNearCapon = 1,
    TooFarFromCapon   = 2,
    Disable           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_campTrespassChatResult : int {
    none     = 0,
    leave    = 1,
    freeRoam = 2,
    fight    = 3,
    evade    = 4,
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Autopilot : int {
    None              = 0,
    WaitingForContext = 1,
    Following         = 2,
    Done              = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithTemperature* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bbff68
enum enum wh::xgenaimodule::E_ConceptAIWuidType::Type : unsigned char {
    LinkableObject = 0,
    Soul           = 1,
    SmartEntity    = 2,
    SmartArea      = 3,
    SmartObject    = 4,
    TriggerArea    = 5,
    AreaUnion      = 6,
    IArea          = 7,
    Item           = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ContextOperator<struct wh::rpgmodule::storm::operation::Remove>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ExplicitFragmentAnimAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeEquipmentEffect* {
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::guimodule::C_TrackViewBase : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
    //Getter: WHGame.dll+0x2a5d0ec
    get  : Checkpoints               : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x90 : CopySoulVisual            : class boost::optional<bool>;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::tests::Foo {

    //vtable offset: 0x8
    Gimme5( );
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_CarryItemPileGeom,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::rpgmodule::storm::C_Rule* {
};

//size in bytes: 0x8
//pointer dimension: 1
signed char* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonecZabomysichValek_playerTeleportSide : int {
    None    = 0,
    Tachov  = 1,
    Zelejov = 2,
    Done    = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::framework::WUID {
};

//size in bytes: 0x260
//pointer dimension: 0
struct wh::rpgmodule::S_RPGStats {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::entitymodule::S_WeaponPresetItem {
    0x8  : item_class_id : struct CryGUID;
    0x18 : amount        : int;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab45b8
enum enum wh::dialogmodule::data::E_DialogInitiator::Type : unsigned char {
    Anyone    = 0,
    Player    = 1,
    NonPlayer = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BodyguardFight : int {
    None           = 0,
    Fight          = 1,
    GuardWon       = 2,
    HenryWon       = 3,
    WeaponWasDrawn = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_KeyItemClass* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct CryGUID {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::xgenaimodule::C_EnumDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::TypeDescriptors::S_Enum,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::TypeDescriptors::S_Enum,class std::allocator<struct wh::xgenaimodule::TypeDescriptors::S_Enum> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasCombatLevel : class wh::rpgmodule::storm::I_Selector {
    0x8 : minValue : float;
    0xc : maxValue : float;
};

//size in bytes: 0x138
//pointer dimension: 0
struct wh::entitymodule::S_WeaponItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_WeaponEquipItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    0xf0  : Class                          : int;
    0xf4  : SubClass                       : int;
    0x110 : Defense                        : float;
    0x114 : MaxStatus                      : int;
    0x118 : StrReq                         : unsigned int;
    0x11c : AgiReq                         : unsigned int;
    0x120 : IsBreakable                    : bool;
    0xf8  : BrokenItemClassId              : struct CryGUID;
    0x128 : HolsterModel                   : class CryStringT<char>;
    0x130 : HolsterMaterial                : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>* {
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::playermodule::C_DisplayTutorial : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40  : Show         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x80  : Hide         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc0  : Reset        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x100 : Tutorial     : class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_TutorialName>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<struct wh::rpgmodule::S_BuffDefinitionAITag,class std::allocator<struct wh::rpgmodule::S_BuffDefinitionAITag> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_DrawWeaponAction* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_FunctionBase> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum playerWokeUp : int {
    None     = 0,
    WakingUp = 1,
    WokeUp   = 2,
    Done     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetLute : int {
    None         = 0,
    GetLute      = 1,
    LuteAcquired = 2,
    GetLuteAgain = 3,
    Aborted      = 4,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorActionSkipTime : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_SkillCheckResult {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_SkirmishStatistics* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudStates* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomocPelclovi : int {
    None        = 0,
    CanStart    = 1,
    Started     = 2,
    BackToPelcl = 3,
    Comleted    = 4,
    Failed      = 5,
    Aborted     = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum extraGuards_location : int {
    Unknown               = 0,
    tr_SlatejovFarma      = 1,
    tr_ZdarFarmaZapad     = 2,
    tr_ZdarFarmaVychod    = 3,
    tr_ZelejovHospoda     = 4,
    tr_ApolenaOvcak       = 5,
    tr_VidlakLovec        = 6,
    tr_VidlakTanner       = 7,
    tr_VidlakFisherman    = 8,
    tr_Troskovice         = 9,
    tr_NebakovMlyn        = 10,
    tr_TachovVillage      = 11,
    tr_SeminVillage       = 12,
    kh_PritokyHospoda     = 13,
    kh_DanemarkMlyn       = 14,
    kh_StaraKutnaHospoda  = 15,
    kh_HoranskoMines      = 16,
    kh_RabstejnskoLogging = 17,
    kh_RabstejnskoMlyn    = 18,
    kh_MalesovStudFarm    = 19,
    kh_PritokyVillage     = 20,
    kh_RatborickoVillage  = 21,
    kh_KutnaHoraKupecka   = 22,
    kh_pachIndustryArea   = 23,
    kh_lorecVineyard      = 24,
    kh_suchdolVillage     = 25,
    kh_staraKutnaVillage  = 26,
    kh_miskovickoVillage  = 27,
    kh_bylanskoVillage    = 28,
    kh_vysokaVillage      = 29,
    kh_bohounoviceVillage = 30,
    kh_horanskaVillage    = 31,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_MenuConfirmationDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuConfirmation,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::guimodule::C_UIMenuConfirmation,class std::allocator<class wh::guimodule::C_UIMenuConfirmation> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x298
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionOutGeneric : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction, class wh::xgenaimodule::NPCState::C_UnstanceActionOut {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
    0x288 : FragmentName                       : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ArneHead : int {
    None                         = 0,
    Injured                      = 1,
    InjuredWaitingForIntermision = 2,
    Scarred                      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressHiddenDone : int {
    None   = 0,
    Active = 1,
    Done   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithTheGirl : int {
    None     = 0,
    Started  = 1,
    JustTalk = 2,
    Dance    = 3,
    RuinedIt = 4,
    Canceled = 5,
    Aborted  = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LacekSittingInPub : int {
    None               = 0,
    GoingToSit         = 1,
    SittingWithTankard = 2,
    Done               = 3,
    Canceled           = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a5d530
enum enum wh::xgenaimodule::E_DogPointType::Type : unsigned char {
    DrinkingSpot        = 0,
    MarkingSpot         = 1,
    WaterTubSpot        = 2,
    MerchantCounterSpot = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_TimeOfDayInterval> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::BehaviorTree::S_CallbackEventDefinition* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_GameOverId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GirlsEscort : int {
    None            = 0,
    GetPackage      = 1,
    OnJourney       = 2,
    EscortCompleted = 3,
    Fail            = 4,
    Abort           = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_GameScriptContextPreset> > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_IntermissionTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ItemSlotTrigger> {
};

//size in bytes: 0xf0
//pointer dimension: 0
struct wh::entitymodule::S_DocumentItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0x8  : Type                           : int;
    0xc  : SubType                        : int;
    0xc0 : DocumentContent                : class std::shared_ptr<struct wh::entitymodule::S_DocumentContent>;
    0xd0 : LengthInGameHours              : float;
    0xd4 : RecipeId                       : int;
    0xd8 : BlacksmithRecipeId             : class CryStringT<char>;
    0xe0 : Rarity                         : class CryStringT<char>;
    0xe8 : VisualCategory                 : int;
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::entitymodule::C_EquippableItemRuntimeData {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_MinigameElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MichalSittingAtTable : int {
    None       = 0,
    NotSitting = 1,
    Sitting    = 2,
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::rpgmodule::C_RPGModule {
    //Getter: WHGame.dll+0x6c6c70
    get : Constants       : class std::reference_wrapper<struct wh::rpgmodule::S_Constants const >;
    //Getter: WHGame.dll+0x19a1700
    get : SoulList        : class wh::rpgmodule::C_SoulList*;
    //Getter: WHGame.dll+0x22e4d44
    get : Statistics      : class wh::rpgmodule::C_Statistics*;
    //Getter: WHGame.dll+0x19d6050
    get : Calendar        : class wh::rpgmodule::C_Calendar*;
    //Getter: WHGame.dll+0x22e6f34
    get : FactionManager  : class wh::rpgmodule::C_FactionManager*;
    //Getter: WHGame.dll+0x22e0f34
    get : SkirmishManager : class wh::rpgmodule::C_SkirmishManager*;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportToHuntsman_Varel : int {
    None             = 0,
    Active           = 1,
    Done             = 2,
    DoneWithoutCapon = 3,
    Canceled         = 4,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuConfirmation,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_GameOverTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_WeaponPresetRef* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::E_ExplicitFragmentEventReference {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudHints* {
};

//size in bytes: 0x140
//pointer dimension: 0
struct wh::entitymodule::S_AmmoItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_WeaponEquipItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    0x8   : Type                           : int;
    0xc   : SubType                        : int;
    //Getter: WHGame.dll+0x19a24c0
    get   : AttackStab                     : float;
    //Getter: WHGame.dll+0x19a2490
    get   : AttackSlash                    : float;
    //Getter: WHGame.dll+0x19c4be0
    get   : AttackSmash                    : float;
    0x104 : PowerMod                       : float;
    0x108 : RpgWeight                      : float;
    0x110 : InquiverModel                  : class CryStringT<char>;
    0x118 : InquiverMaterial               : class CryStringT<char>;
    0x130 : BrokenItemClassId              : struct CryGUID;
    0x128 : ShortModel                     : class CryStringT<char>;
    0x120 : LongModel                      : class CryStringT<char>;
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorSprintTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul          : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnEnterSprint : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnLeaveSprint : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_FacialMoodCommand* {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::guimodule::C_UIDice : class wh::guimodule::C_UIBase {

    //vtable offset: 0x0
    ShowDiceScore( int, string const &, int, int, int, string const &, int, int, int, int, int, string const &, int, int );
    //vtable offset: 0x8
    HideDiceScore( );
    //vtable offset: 0x30
    ShowDiceProperties( string const &, int );
    //vtable offset: 0x8
    HideDiceProperties( );
    //vtable offset: 0x40
    SetCurrentPlayer( bool );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectClean : class wh::xgenaimodule::scheduler::C_SchedulerEffectBase {
    //Getter: WHGame.dll+0x330fd2c
    get : Role        : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fcc8
    get : CleanTarget : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7a938
enum enum wh::xgenaimodule::E_HandType::Type : int {
    Right = 0,
    Left  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KozlikMikesDialog : int {
    None                = 0,
    CekaniNaKlid        = 1,
    PodezdrelyDialog    = 2,
    HracJeBlizkoNeviden = 3,
    Hotovo              = 4,
    Aborted             = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PetrsBodyInCamp : int {
    None            = 0,
    BodyIsInCamp    = 1,
    WaitingToUnload = 2,
    BodyDisappeared = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelOnTheStreet : int {
    None          = 0,
    TalkWithGuard = 1,
    BarkToMother  = 2,
    GoToInjured   = 3,
    Healing       = 4,
    Finished      = 5,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::rpgmodule::C_FactionRelation {
    0x8  : target     : class CryStringT<char>;
    0x18 : type       : enum wh::rpgmodule::E_RelationType;
    //Getter: WHGame.dll+0x2bdbbec
    get  : qualities  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x19b1ec0
    get  : reputation : float;
};

//size in bytes: 0x250
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeStanceToCombatAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeStanceAction {
    0x8   : Name                       : class CryStringT<char>;
    0x10  : Urgency                    : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                   : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies       : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                 : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                    : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions        : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : DataSource                 : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1a4 : FromStance                 : enum wh::entitymodule::E_StanceCategory::Type;
    0x1a8 : ToStance                   : enum wh::entitymodule::E_StanceCategory::Type;
    0x1ac : RequiresEqualFromToObjects : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChatOnPointHandler : int {
    None      = 0,
    ExactMove = 1,
    Chat      = 2,
    Done      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerDrunkness : int {
    None         = 0,
    PlayerInMood = 1,
    PlayerDrunk  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SmilsBehavior : int {
    None              = 0,
    SecretDialog      = 1,
    DialogInterrupted = 2,
    GeneralDialog     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TarasBeforePatrol : int {
    None        = 0,
    AfterLadder = 1,
    Active      = 2,
    Done        = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::guimodule::S_CutsceneProfile {
    //Getter: WHGame.dll+0x2ae6f28
    get  : Type     : class CryStringT<char>;
    0x20 : FileName : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_ShowMapMarker* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_MeleeWeaponItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_Counter* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetNemecTreasureBack : int {
    None                            = 0,
    ItemObtainedWithoutNotification = 1,
    ItemLost                        = 2,
    ItemObtainedWithNotification    = 3,
    Aborted                         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelWithKrystof : int {
    None       = 0,
    Fight      = 1,
    BohutaWon  = 2,
    KrystofWon = 3,
    Done       = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b50290
enum enum wh::framework::E_UIApseView::Type : unsigned char {
    None          = 0,
    Crafting      = 1,
    Inventory     = 2,
    InventoryInfo = 3,
    Player        = 4,
    PlayerInfo    = 5,
    Map           = 6,
    Codex         = 7,
    MapLegend     = 8,
    QuestLog      = 9,
    QuestDiary    = 10,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_SceneWrapper> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KostiPohyb : int {
    None             = 0,
    HracMaKost       = 1,
    VelitelMaKost    = 2,
    AlchemistaMaKost = 3,
    GerhartMaKost    = 4,
    SlavaMaKost      = 5,
    OpatMaKost       = 6,
    KonecQuestovosti = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmbushEnviroStates : int {
    PreAmbush    = 0,
    DuringAmbush = 1,
    AfterAmbush  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_DocumentRarity* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindTheGirl : int {
    None                       = 0,
    Started                    = 1,
    Updated                    = 2,
    FoundTheGirl               = 3,
    WentToWedingWithBlacksmith = 4,
    Canceled                   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a24340
enum enum wh::entitymodule::E_AddDefaultItemMode::Type : int {
    Create            = 0,
    Reclaim           = 1,
    EnsureThenDestroy = 2,
    EnsureThenKeep    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VavakCapturer : int {
    None    = 0,
    Henry   = 1,
    Martin  = 2,
    Kunzlin = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class CryStringT<char> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_punishmentType : int {
    unknown   = 0,
    pillory   = 1,
    beating   = 2,
    branding  = 3,
    execution = 4,
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_PutItemInInventoryAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::S_ActorAdditiveAnimRequest* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_InventoryOperator : class wh::rpgmodule::storm::I_Operator {
    0x8 : preset : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Ratbor2Hibernation : int {
    None  = 0,
    Awake = 1,
    Done  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Effect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringPotionForChamberlain : int {
    None    = 0,
    Active  = 1,
    Updated = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIShop* {
};

//size in bytes: 0x8
//pointer dimension: 1
class CSkin* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_DisableRandomEvent* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ViktorkaBehavior : int {
    IsSinging = 0,
    IsCrying  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BonesDugAtStart : int {
    LevelStart    = 0,
    BonesLoaded   = 1,
    Dug           = 2,
    BonesDugLater = 3,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipeStep {
    0x8  : StepId           : int;
    //Getter: WHGame.dll+0x19a11e0
    get  : Condition        : class CryStringT<char>;
    0x18 : UIText           : class CryStringT<char>;
    0x28 : FeedbackPriority : int;
    0x30 : StepType         : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::I_Area {

    //vtable offset: 0x10
    GetName( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithBard : int {
    None         = 0,
    Started      = 1,
    Believe      = 2,
    DontBelieve  = 3,
    Failed       = 4,
    Abort        = 5,
    failedKilled = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetVineSprout : int {
    None               = 0,
    Active             = 1,
    AlreadyHaveSulphur = 2,
    DontHaveSulphurYet = 3,
    Done               = 4,
    Aborted            = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::entitymodule::C_ActorStanceGroupData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimPlaceRequest* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeCrouchAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::questmodule::C_Quest* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_AIConceptSignalParameter* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantsState : int {
    Protected  = 0,
    Permadeath = 1,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::entitymodule::C_ActorStanceGroupDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::entitymodule::C_ActorStanceGroupData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::entitymodule::C_ActorStanceGroupData,class std::allocator<class wh::entitymodule::C_ActorStanceGroupData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskHunter : int {
    None                = 0,
    AskAtHuntersPlace   = 1,
    GetHunterSafelyHome = 2,
    AskHunter           = 3,
    Completed           = 4,
    Failed              = 5,
    Aborted             = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_AutoSaveType::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PetrZPiskuBehavior : int {
    None          = 0,
    ObservingHole = 1,
    ChatOnPlayer  = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorSkipTimeTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::C_Framework* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_type : int {
    CircleTarget = 0,
    Birds        = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SkirmishTrigger* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4298
enum enum wh::entitymodule::E_ItemFilterType::Type : unsigned char {
    Unused = 0,
    Pass   = 1,
    Fail   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingStatesVorech : int {
    Initial       = 0,
    EatenByPlayer = 1,
    Runaway       = 2,
    Returned      = 3,
    OwnedByPlayer = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ViktorkaHerbs : int {
    None              = 0,
    InSlot            = 1,
    InPlayerInventory = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TraskaniFail : int {
    None           = 0,
    VazounDead     = 1,
    UteklSeSoudkem = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LockpickableEntity *>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_FactionVisibility* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gainingRespect : int {
    None                  = 0,
    Started               = 1,
    UpdateWinArchery      = 2,
    UpdateWinCrossCountry = 3,
    UpdateWinBoth         = 4,
    CompletedAsArcher     = 5,
    CompletedAsRacer      = 6,
    CompletedAsNeutral    = 7,
    Cancelled             = 8,
};

//size in bytes: 0x2
//pointer dimension: 0
class boost::optional<enum wh::xgenaimodule::scheduler::E_Aliveness::Type> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::BehaviorTree::I_ContinuousSwitchableNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct SimulationParams* {
};

//size in bytes: 0x8
//pointer dimension: 1
int* {
};

//size in bytes: 0x1f0
//pointer dimension: 0
class wh::playermodule::C_RandomEventBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace : class boost::optional<bool>;
    0x60  : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x128 : Profile        : class std::optional<class CryStringT<char> >;
    0x138 : Cooldown       : class std::optional<struct wh::framework::S_TimeSpan>;
    0xa8  : OnSpawn        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe8  : OnDespawn      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::xgenaimodule::C_DogPointDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_DogPointLayer,class std::vector> {
    0x30 : DogPoints : class std::vector<struct wh::xgenaimodule::S_DogPointLayer,class std::allocator<struct wh::xgenaimodule::S_DogPointLayer> >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_MovementSpeed {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HanusSoldiersPhase : int {
    None           = 0,
    Guarding       = 1,
    GoingWithHanus = 2,
    Unstreamed     = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeBehaviorStateElement* {
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_MemberFunction> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase, class wh::conceptmodule::C_MemberFunction, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_MemberFunction> {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_CIPilePhase {
    0x8 : Model     : class CryStringT<char>;
    0x0 : CountUpTo : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SkirmishEventTypeData* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_FactionDefinitionID> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gainRespect : int {
    None                   = 0,
    Started                = 1,
    Update_ArcheryWon      = 2,
    Update_CrossCountryWon = 3,
    ReportResult           = 4,
    CompletedAsArcher      = 5,
    CompletedAsRacer       = 6,
    CompletedAsNeutral     = 7,
    Cancelled              = 8,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::E_HibernateStability {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_MaxProxyCounter<int>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseTaming : int {
    None         = 0,
    Started      = 1,
    Completed    = 2,
    Failed       = 3,
    TamingFailed = 4,
    Aborted      = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::entitymodule::clothing::C_Component* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_AnimationPropCommand* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_ObjectiveName> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TimePauseState : int {
    UnpausedInitial        = 0,
    PausedQuestRunning     = 1,
    UnpausedBeforeCutscene = 2,
    PausedAfterCutscene    = 3,
    UnpausedQuestEnded     = 4,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterArmorStat : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : children : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashCharacterArmorStatSub>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashCharacterArmorStatSub> > >;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterSlot : class wh::guimodule::C_UIFlashObject {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : SubType          : int;
    0x1c : IsFocused        : bool;
    0x20 : ActiveState      : int;
    0x24 : IsQAMHighlighted : int;
    0x28 : children         : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashCharacterSlotItem>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashCharacterSlotItem> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_RightHandCondition* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashHorseInspect : class wh::guimodule::C_UIFlashObject {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x20 : Type             : int;
    0x24 : PlayerHorseLevel : int;
    0x28 : NewHorseLevel    : int;
};

//size in bytes: 0x8
//pointer dimension: 1
struct IEntity* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct IEntitySystem {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemSetAsideElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GallowsAndSamStreamingState : int {
    None                         = 0,
    PreparedForBurialCorrectly   = 1,
    PreparedForBurialIncorrectly = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ExtraLog : int {
    None = 0,
    Log  = 1,
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::guimodule::C_UISkiptime : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SmitheryAsset* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_SumCounter<double> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RomanceKatherine : int {
    NoRomance         = 0,
    RomanceAvailable  = 1,
    RomanceConfirmed  = 2,
    RomanceAbandonned = 3,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_MoodCommand : class wh::dialogmodule::data::C_Command {
    0x8  : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay      : float;
    0xe  : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : Mood       : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZemniceProfiles : int {
    Nehori            = 0,
    ZapalenaDialog    = 1,
    ZapalenaPoDialogu = 2,
    HoriFailQuestu    = 3,
    Uhasena           = 4,
};

//size in bytes: 0x60
//pointer dimension: 0
struct wh::entitymodule::S_CarryItemPileGeom {
    0x0  : Name                 : class CryStringT<char>;
    0x8  : Id                   : struct CryGUID;
    0x18 : Unpacked             : class boost::optional<class CryStringT<char> >;
    0x48 : PickupAnimTag        : class CryStringT<char>;
    0x50 : DepositAnimTag       : class CryStringT<char>;
    0x58 : PackAudioSwitchState : class CryStringT<char>;
    0x28 : DefaultModel         : class CryStringT<char>;
    0x30 : Phases               : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_CIPilePhase,class std::allocator<struct wh::entitymodule::S_CIPilePhase> > >;

    //non-vtable method: WHGame.dll+0x11ec9e4
    AfterDeserialization( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_MinigameCondition* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_MenuChoiceDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuChoice,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::guimodule::C_UIMenuChoice,class std::allocator<class wh::guimodule::C_UIMenuChoice> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RunThroughYardState : int {
    None              = 0,
    RunToBackyard     = 1,
    RunToSafeZone     = 2,
    WaitInSafeZone    = 3,
    RunToRoof         = 4,
    BarkOnRoof        = 5,
    RunToHouse        = 6,
    BarkNearHouse     = 7,
    WaitNearHouse     = 8,
    WaitIOutsideHouse = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemDelivery* {
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPutItemInHandRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPutItemInHandRequest {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::framework::C_SequentialContainersExample {
    0x8  : StdArrayOfInt            : class std::reference_wrapper<class std::array<int,3> >;
    //Getter: WHGame.dll+0x24b8e30
    get  : StdVectorOfInt           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x30 : StdVectorOfNodes         : class std::reference_wrapper<class std::vector<struct wh::framework::S_BaseExampleNode,class std::allocator<struct wh::framework::S_BaseExampleNode> > >;
    0x48 : StdVectorOfBoostOptional : class std::reference_wrapper<class std::vector<class boost::optional<int>,class std::allocator<class boost::optional<int> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_ClothingHidingGroup* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetEntityContext> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hynekHouseControl : int {
    Untouched = 0,
    Mess      = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ArmorItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DragonBones : int {
    Bones           = 0,
    DiggedStreaming = 1,
    Digged          = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bd2d78
enum enum wh::dialogmodule::data::E_SequenceType : unsigned char {
    Default           = 0,
    Skillcheck        = 1,
    CharacterCreation = 2,
    Punishment        = 3,
    Bribe             = 4,
    Trigger           = 5,
    Wash              = 6,
    Return            = 7,
    Bathmaid          = 8,
    Shop              = 9,
    RepairShop        = 10,
    Trainer           = 12,
    FastTravel        = 16,
    ShopDenied        = 13,
    RepairShopDenied  = 14,
    Sleepover         = 15,
    QuestGiver        = 17,
    Tournament        = 25,
    DrinkingEasy      = 26,
    DrinkingMedium    = 27,
    DrinkingHard      = 28,
    Payment           = 29,
    PaymentPlumb      = 30,
    PaymentSilver     = 31,
    PaymentGold       = 32,
    DiceGame          = 33,
    PaymentPlumbBet   = 34,
    PaymentSilverBet  = 35,
    PaymentGoldBet    = 36,
    OpenShop          = 37,
    OpenRepairShop    = 38,
    Romance           = 43,
    DLC0              = 44,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_AnimDoor *,class std::allocator<class wh::entitymodule::C_AnimDoor *> > >* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::clothing::S_Uberlod* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PapezskyLegatProgress : int {
    None             = 0,
    Suchdol          = 1,
    Ruthardka        = 2,
    NocSRozou        = 3,
    VavakuvKlic      = 4,
    PruzkumSklepeni  = 5,
    PripravaNaPrepad = 6,
    Honicka          = 7,
    Epilog           = 8,
    Done             = 9,
};

//size in bytes: 0x138
//pointer dimension: 0
struct wh::entitymodule::S_FoodItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass, struct wh::entitymodule::S_ConsumableItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : IsDivisible                    : bool;
    0xb8  : ContainerModel                 : class CryStringT<char>;
    0xc0  : ContainerMaterial              : class CryStringT<char>;
    0xc8  : BuffDefinitionId               : struct CryGUID;
    0xd8  : UiSound                        : class CryStringT<char>;
    0x8   : Type                           : int;
    0xc   : SubType                        : int;
    0xf0  : HealthBenefit                  : float;
    0xf4  : RefreshBenefit                 : float;
    0xf8  : NutritionBenefit               : float;
    0xfc  : ShortTermNutritionBenefitRatio : float;
    0x100 : AlcoholContent                 : float;
    0x104 : CookedItemId                   : struct CryGUID;
    0x114 : SmokedItemId                   : struct CryGUID;
    0x124 : DriedItemId                    : struct CryGUID;
    0x134 : DecayTime                      : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ptacekToStables : int {
    None    = 0,
    Stairs  = 1,
    Kitchen = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::entitymodule::C_DialogueHolder {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TeamState : int {
    None         = 0,
    Wait         = 1,
    IngameDialog = 2,
    AfterDialog  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Waffenrock : int {
    None       = 0,
    Wearing    = 1,
    NotWearing = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_PatchTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CowsStreaming : int {
    Streamed_initInVillage      = 0,
    Streamed_inForest           = 1,
    Unstreamed_soldiersTookThem = 2,
    Streamed_inVillage          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EquestrianContests_ForcedProgression : int {
    None            = 0,
    FirstTrackDone  = 1,
    SecondTrackDone = 2,
    ThirdTrackDone  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zachranaPtacka_prisonersWaitingAnimation : int {
    Kneel          = 0,
    Crouch         = 1,
    WaitingNervous = 2,
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::entitymodule::C_ClothingAttachmentManager : class wh::entitymodule::I_ClothingAttachmentManager {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::C_HomogenousItemDescriptor : class wh::entitymodule::I_ItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinalTalkWithTaras : int {
    None         = 0,
    Active       = 1,
    DoneFriends  = 2,
    DoneEnemies  = 3,
    DoneCanceled = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_LookAtCommand* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum bonkaWithDog : int {
    None                 = 0,
    WithDog              = 1,
    ReactingToPlayer     = 2,
    WalkingHomeWithDog   = 3,
    PlayerWantsToKillDog = 4,
    DogDeathReaction     = 5,
    DogDeathPerception   = 6,
    Finished             = 7,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_MonologEventData : struct wh::xgenaimodule::I_EventData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GoToTalkToRival : int {
    None                  = 0,
    Started               = 1,
    CompletedWithBribe    = 2,
    CompletedWithoutBribe = 3,
    Failed                = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AreaTriggerBase* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_PerceptibleVolumeEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
struct fixed_t<unsigned int,25> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::rpgmodule::C_PlayTimeCounter : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NegotiateWithLaszloFarkas : int {
    None                          = 0,
    NegotiateHandover             = 1,
    ArrangedHandover_LivePrisoner = 2,
    ArrangedHandover_PetrsBody    = 3,
    Canceled                      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VranasMoney : int {
    None           = 0,
    ProfileTrigger = 1,
    MoneyInChest   = 2,
    MoneySeen      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WoodworksHouse : int {
    None            = 0,
    Expected        = 1,
    ExpectedInHouse = 2,
    LeaveWithLute   = 3,
    CancelExpected  = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_BuffAITag* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_DocumentRarity,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<struct wh::dialogmodule::data::S_Response,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::questmodule::E_QuestProgress> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum checkTheLoot : int {
    None        = 0,
    SpeakWith   = 1,
    Loot        = 2,
    OwnerKilled = 3,
    LootChecked = 4,
    Failed      = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudQAM* {
};

//size in bytes: 0x90
//pointer dimension: 0
struct wh::entitymodule::S_PickableItemClass : struct wh::entitymodule::S_ItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingGrave : int {
    NoGrave      = 0,
    Grave        = 1,
    NoGraveAgain = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zaby_cooking : int {
    None                = 0,
    Goto                = 1,
    Cooking             = 2,
    PickingUp           = 3,
    Carrying            = 4,
    FoodWaitingForAlsik = 5,
    FoodDespawnDelay    = 6,
    Done                = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RatiborRetinueStreaming : int {
    None       = 0,
    Streamed   = 1,
    Unstreamed = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HorseUsageElement* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContextPreset> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > >* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionItemSetAside : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase {
    0x8  : DataSource          : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate              : bool;
    0x10 : Hand                : class std::optional<enum wh::xgenaimodule::E_HandType::Type>;
    0x18 : ItemClassId         : struct CryGUID;
    0x28 : SlotManipulationTag : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum translationResults : int {
    1bad  = 0,
    1good = 1,
    2bad  = 2,
    2good = 3,
    3bad  = 4,
    3good = 5,
    4bad  = 6,
    4good = 7,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_DebuggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasNameNumberModulo* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemSetAsideCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8  : Hand             : enum wh::xgenaimodule::E_HandType::Type;
    0xc  : RequiresSetAside : bool;
    0x10 : ItemClassId      : class std::optional<struct CryGUID>;
};

//size in bytes: 0x8
//pointer dimension: 0
class boost::optional<enum wh::rpgmodule::E_SoulProperty::Type> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct IPlatformOS {
    //Getter: WHGame.dll+0x1ede03c
    get : GetProcessId : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TemporaryFactionEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemHolder* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::dialogmodule::data::S_FastForwardRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CleaningDeliveryResult : int {
    None   = 0,
    Water  = 1,
    Liquer = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_OpenShopElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SeriesPortcullisSmokeStains : int {
    None        = 0,
    SmokeStains = 1,
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::rpgmodule::C_POIDiscoveryStatusChangedTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name                : class CryStringT<char>;
    0x18  : RuntimeState        : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports               : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView           : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive            : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : POIType             : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_POITypeWrapper>*;
    0x100 : OnUnknown           : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnKnownUndiscovered : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : OnDiscovered        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AlderObjectiveSupport : int {
    None                 = 0,
    Active               = 1,
    UpdatedWithoutMarker = 2,
    Done                 = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Zaby_SheepStatus : int {
    None            = 0,
    ScatteredSeen   = 1,
    ScatteredUnseen = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashProsBanner : class wh::guimodule::C_UIFlashObject {
    0x8  : Id          : class CryStringT<char>;
    0x10 : Name        : class CryStringT<char>;
    0x18 : Header      : class CryStringT<char>;
    0x20 : Description : class CryStringT<char>;
    0x28 : LinkUrl     : class CryStringT<char>;
    0x30 : ImageName   : class CryStringT<char>;
    0x38 : Order       : int;
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::guimodule::C_UIFlashListItemTrader : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashListItem, class wh::guimodule::C_UIFlashListItemSelection {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : ClassId         : int;
    0x20 : Category        : class CryStringT<char>;
    0x28 : IconId          : class CryStringT<char>;
    0x30 : Amount          : float;
    0x34 : MainStat        : float;
    0x38 : Health          : float;
    0x3c : Quality         : unsigned int;
    0x40 : ItemHealthState : unsigned int;
    0x44 : Weight          : float;
    0x48 : Price           : float;
    0x4c : IsEnable        : bool;
    0x50 : OutfitPresence  : unsigned int;
    0x54 : IsQuestItem     : bool;
    0x58 : Stolen          : unsigned int;
    0x5c : Dirt            : float;
    0x60 : Blood           : float;
    0x64 : BuffIcon        : unsigned int;
    0x68 : BuffDefId       : class CryStringT<char>;
    0x70 : IsSelected      : bool;
    0x78 : InventoryId     : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CvicneZbrane : int {
    None             = 0,
    LongSword        = 1,
    ShortSword       = 2,
    ShortSwordShield = 3,
    Axe              = 4,
    AxeShield        = 5,
    Halberd          = 6,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeCombatAutomationsEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemSlotTrigger* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::C_PlaceEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::definition::C_TypeDefinition* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_AngrinessType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum outroLog : int {
    None = 0,
    Done = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourGate : int {
    None        = 0,
    ChatNaHrace = 1,
    Tour        = 2,
    Waiting     = 3,
    Done        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum findingClues : int {
    None       = 0,
    ClueActive = 1,
    Done       = 2,
    Abort      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindOutSoldierInfo : int {
    None                                  = 0,
    Started                               = 1,
    CampCitizenToldPlayerAboutBlacksmith  = 2,
    BlacksmithDied                        = 3,
    BlacksmithToldPlayerAboutAliveSoldier = 4,
    BlacksmithToldPlayerAboutDeadSoldier  = 5,
    Aborted                               = 6,
    BlacksmithAndSoldierAreDead           = 7,
    CampIsGone                            = 8,
    TalkedWithViktorkaEarly               = 9,
    FoundSoldierByAccident                = 10,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectSoil : class wh::xgenaimodule::scheduler::C_SchedulerEffectBase {
    //Getter: WHGame.dll+0x330fd2c
    get : Role     : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fcc8
    get : SoilRate : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum pockej : int {
    None    = 0,
    Active  = 1,
    Done    = 2,
    Cancel  = 3,
    Cancel2 = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_Item* {
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::rpgmodule::S_ReputationChangeDefinitionID {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RomansCap : int {
    None       = 0,
    Unpickable = 1,
    Pickable   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkaAfterFight : int {
    None = 0,
    Bark = 1,
    Idle = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorFollowTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UISkiptime* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a47480
enum enum wh::conceptmodule::E_TemplateTypename : int {
    None    = 0,
    TypeT   = 1,
    TypeT_0 = 2,
    TypeT_1 = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_DebuggerPort* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetUnderwear : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_SetCharacterComponentBase {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Synagogue : int {
    Default     = 0,
    Burning     = 1,
    AfterPogrom = 2,
};

//size in bytes: 0x240
//pointer dimension: 0
class CXConsole : struct IConsole {

    //non-vtable method: WHGame.dll+0x2390aac
    ExecuteString( classCryStringT<char> const & );
    //vtable offset: 0x238
    GetCvarValue( classCryStringT<char> const & );
    //vtable offset: 0x238
    GetCvarHelp( classCryStringT<char> const & );
};

//size in bytes: 0x8
//pointer dimension: 0
struct ISystem {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum janTransferToLyingHarmed : int {
    None             = 0,
    UnconsciousTimer = 1,
    Done             = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartBehaviorTemplate* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MusaWithAlbikState : int {
    None         = 0,
    Wait         = 1,
    IngameDialog = 2,
    AlbikBark    = 3,
    AlbikStand   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SkirmishStatisticsAsset* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemDocument : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : IsNew            : bool;
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::conceptmodule::C_AssetTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Origin       : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0xf8  : AssetName    : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x138 : OnAdded      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : OnRemoved    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a29e10
enum enum wh::conceptmodule::E_HintType : int {
    Performance      = 0,
    Usability        = 1,
    UsabilityWarning = 2,
    Resource         = 3,
    DeadLock         = 4,
    SubSystem        = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetHorseshoes : int {
    None                 = 0,
    GetHorseshoes        = 1,
    AlreadyHadHorseshoes = 2,
    TalkWithMarta        = 3,
    HorseshoesLost       = 4,
    ViktorkaStillLives   = 5,
    ViktorkaWasDead      = 6,
    Canceled             = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_secondArrestFeedbackResult : int {
    none             = 0,
    acceptPunishment = 1,
    rejectPunishment = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_PerkReward* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hledaniLichtenstejna_kozina_ambushingSomeDrunk : int {
    None                             = 0,
    PreparingForAmbush               = 1,
    LyingInAmbush                    = 2,
    AmbushingUdo                     = 3,
    ConfrontingUdo                   = 4,
    AmbushingPlayer_ExpectedSide     = 5,
    ConfrontingPlayer_ExpectedSide   = 6,
    AmbushingPlayer_UnexpectedSide   = 7,
    ConfrontingPlayer_UnexpectedSide = 8,
    Canceled                         = 9,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_AutolearnPerksOperator : class wh::rpgmodule::storm::I_Operator {
    0x8 : reliability : float;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_Inventory* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_TemporaryFactionEffect> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7ac08
enum enum wh::entitymodule::E_CartHorseSlot::Type : unsigned char {
    left  = 0,
    right = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateWatch* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Enum_Drink : int {
    None  = 0,
    White = 1,
    Red   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightInInnerCourtyardProgress : int {
    None                 = 0,
    MovingIn             = 1,
    MovingInAndDefending = 2,
    FightBeginning       = 3,
    Fight                = 4,
    Done                 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::xgenaimodule::C_TypeLibrary::CreateRuntimeEnums::E_AIIntEnumDummy {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CitizenBehavior : int {
    InDaycycle     = 0,
    WaitOnSquare   = 1,
    UrgeDialog     = 2,
    Fight          = 3,
    Flee           = 4,
    BackInDaycycle = 5,
    Dead           = 6,
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::rpgmodule::C_BloodMaskOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xd0 : BloodMask    : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::clothing::S_BloodMaskName>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xf0
//pointer dimension: 0
struct wh::entitymodule::S_ActionIdleRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetContest_Round : int {
    None            = 0,
    StartWithVajda  = 1,
    RoundInProgress = 2,
    PlayerWon       = 3,
    PlayerLost      = 4,
    Failed          = 5,
    Aborted         = 6,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_EventData : class wh::xgenaimodule::BehaviorTree::I_Node {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ImportantNpcIsDead : int {
    None      = 0,
    NpcIsDead = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>* {
};

//size in bytes: 0x298
//pointer dimension: 0
class wh::entitymodule::C_ItemDeliveryHandler : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_RuntimeState {
    0x10  : Name              : class CryStringT<char>;
    0x18  : RuntimeState      : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports             : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView         : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40  : BeginDelivery     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x80  : AcceptDelivery    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc0  : RejectDelivery    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x100 : ItemDelivery      : class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::C_ItemDelivery> >*;
    0x140 : OnResultAvailable : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : OnAccept          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c0 : OnReject          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x200 : DeliveryResult    : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_DeliveryResult::Type>*;
    0x240 : DeliveryItems     : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_Item *,class std::allocator<class wh::entitymodule::C_Item *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_FirstElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum frenczlRoomTrespass : int {
    Active   = 0,
    Deactive = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LureBailiffOutOfTheTavern : int {
    None              = 0,
    DialogAlreadyUsed = 1,
    DialogPossible    = 2,
    DialogFailed      = 3,
    DialogSucceeded   = 4,
    Aborted           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelWeaponPreset : int {
    None          = 0,
    Default       = 1,
    UtokNaMalesov = 2,
    Captured      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LookingForTheArcher : int {
    None                       = 0,
    StartedWithoutFight        = 1,
    StartedAfterFight          = 2,
    FoundTheArcherWithoutFight = 3,
    FoundTheArcherAfterFight   = 4,
    Left                       = 5,
    AttackedGamblers           = 6,
    Abort                      = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::S_DeltaMovementComputerParams* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObesenciProfile : int {
    none                 = 0,
    CenekObjesen         = 1,
    StulecObesen         = 2,
    OdstrimovatObjesence = 3,
    Odstreamovano        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GateOpening : int {
    None                  = 0,
    Active                = 1,
    GateOpened            = 2,
    EscapedThroughPassage = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::playermodule::C_Battlement *,class std::allocator<class wh::playermodule::C_Battlement *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MikesKozlikStreamingKutnohorsko : int {
    None                           = 0,
    StreamedSedmStatecnychAndAfter = 1,
    UnstreamedRutina               = 2,
    StreamedRutinaAndAfter         = 3,
    UnstreamedHladAZmar            = 4,
    StreamedHladAZmar              = 5,
    UnstreamedStealthMiseZaJindru  = 6,
    StreamedFinaleAndEndGame       = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SuchdolGossipAreaState : int {
    StreamedDefault        = 0,
    UnstreamedSiege        = 1,
    StreamedAfterMainQuest = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressAbortableHiddenComp : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
    Aborted   = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::entitymodule::C_WeaponPreset,class std::vector> {
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::playermodule::C_PlayerSwitcherConceptNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc8 : OnFinished   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x88 : PlayerId     : class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_PlayerId>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::playermodule::C_Battlement *,class std::allocator<class wh::playermodule::C_Battlement *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_Smithery* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Trace> {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_NavigationInfo {
    //Getter: WHGame.dll+0x19a0cc0
    get  : TypeId      : unsigned int;
    0x10 : StartHelper : class CryStringT<char>;
    0x18 : EndHelper   : class CryStringT<char>;
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::clothing::S_SerializedUberlodSource {
    0x0 : Component     : class CryStringT<char>;
    0x8 : EquipmentPart : class CryStringT<char>;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::xgenaimodule::scheduler::C_SmartHub,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIHudEvents {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadPechaShow : int {
    None      = 0,
    CheckBody = 1,
    RunAway   = 2,
    Done      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_AddRemove::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulSkirmishTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_OutputTriggerPort> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c15130
enum enum wh::entitymodule::E_LadderState::Type : unsigned char {
    none     = 0,
    getOn    = 1,
    getOff   = 2,
    climbing = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartObjectAnimations* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_RandomEventOptionResult::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_UnstanceData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaSkillteacher : int {
    None               = 0,
    SedmStatecnychDone = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SkirmishOnField : int {
    None                     = 0,
    Started                  = 1,
    Won                      = 2,
    Lost                     = 3,
    FledButTheFightIsStillOn = 4,
    Fled                     = 5,
    DrawnWeapon              = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsWeapon* {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::entitymodule::C_ActorActionCarryItem : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction, class wh::entitymodule::I_ActorActionCarry, class wh::entitymodule::C_ItemHolder {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GatesInJewishQuarter : int {
    Default                     = 0,
    Barricaded                  = 1,
    BarricadedAndClosedBackyard = 2,
    Destroyed                   = 3,
    AfterPogrom                 = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::musicmodule::S_WorldStateToggleAsEventId {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_OverlayTutorial* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MusaStreaming : int {
    ZikmunduvTabor                = 0,
    OblehaniBitva                 = 1,
    OblehaniOpenWorld             = 2,
    HladAZmarBitva                = 3,
    HladAZmarPoBitve              = 4,
    Bitvy                         = 5,
    KonecHry                      = 6,
    UnstreamedStealthMiseZaJindru = 7,
    StreamedDebug                 = 8,
    UnstreamedDebug               = 9,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerChangeAreaLabel : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role       : class CryStringT<char>;
    0x18 : Operation  : enum wh::xgenaimodule::E_AddRemove::Type;
    //Getter: WHGame.dll+0x330fc50
    get  : Label      : class CryStringT<char>;
};

//size in bytes: 0x118
//pointer dimension: 0
class wh::entitymodule::C_EquipmentManager {

    //non-vtable method: WHGame.dll+0xffff82117d7dc200
    UnequipAllArmor( enumwh::entitymodule::C_EquipmentManager::E_EquipPolicy, structwh::framework::WUID );
    //non-vtable method: WHGame.dll+0x1170ae4
    EquipPlayersItem( classstd::shared_ptr<classwh::entitymodule::I_ItemDescriptor>, wh::entitymodule::E_QuickSlotSpec );
    //non-vtable method: WHGame.dll+0x293c60c
    UnequipPlayersItem( classstd::shared_ptr<classwh::entitymodule::I_ItemDescriptor> );
    //non-vtable method: WHGame.dll+0x293c550
    UnequipPlayersArmorSlots( classstd::vector<structwh::entitymodule::S_EquipmentSlotIdWrapper,classstd::allocator<structwh::entitymodule::S_EquipmentSlotIdWrapper> > const & );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_InformationDiffTrigger> {
};

//size in bytes: 0x110
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<class wh::entitymodule::S_ActorAdditiveAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionAdditiveAnimRequest, class wh::entitymodule::S_ActorAdditiveAnimRequest {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_AlchemyPotionBaseType {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::BehaviorTree::S_TreeSignature* {
};

//size in bytes: 0x218
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_AnimChar* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AlchemyTableAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TarasHibernable : int {
    None        = 0,
    MainPart    = 1,
    CleanupPart = 2,
    NoneAgain   = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_SaveLockEffect> {
};

//size in bytes: 0x8
//pointer dimension: 1
const bool* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReserveRuthardGuard : int {
    None                         = 0,
    StreamingForcedDialog        = 1,
    StreamedForcedDialog         = 2,
    StreamingTimeskip            = 3,
    StreamedTimeskip             = 4,
    StreamingEntranceGuardDialog = 5,
    StreamedEntranceGuardDialog  = 6,
    Done                         = 7,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetCharacterComponentBase : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::activitysystem::E_DogObjective {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_CombatTutorialNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::shopmodule::C_Shop* {
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::xgenaimodule::S_PickUpEventData* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_DespawnItemEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dice_gameLevel : int {
    beggar    = 0,
    wagoner   = 1,
    farmer    = 2,
    miner     = 3,
    novice    = 4,
    craftsman = 5,
    soldier   = 6,
    priest    = 7,
    knight    = 8,
    courtier  = 9,
    cardinal  = 10,
    lord      = 11,
    king      = 12,
    emperor   = 13,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MikusAfterQuest : int {
    None    = 0,
    Tailor  = 1,
    Gambler = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantStairs : int {
    None            = 0,
    Barks           = 1,
    Chat            = 2,
    WaitUnderStairs = 3,
    WaitNervously   = 4,
    Done            = 5,
    DoneNoReaction  = 6,
};

//size in bytes: 0x98
//pointer dimension: 0
class wh::guimodule::C_UIHudEvents : class wh::guimodule::C_UIBase, class wh::framework::I_UIHudEvents {

    //vtable offset: 0x0
    ShowQuestEvent( string const &, wh::questmodule::QuestProgress, string const &, bool, int );
    //vtable offset: 0x0
    ShowItemsTransfer( Guid, int, enumwh::framework::E_ItemTransferDirection::Type );
    //vtable offset: 0x18
    ShowGeneralNotification( string const & );
    //vtable offset: 0x20
    ShowLevelUp( string const &, string const &, int, uint, uint );
    //vtable offset: 0x28
    ShowLevelXpGain( string const &, string const &, int );
    //vtable offset: 0x30
    ShowPerkUsed( string const &, string const & );
    //vtable offset: 0x48
    ShowReputationChanged( int, string const & );
    //vtable offset: 0x50
    ShowRandomEventResult( int, string const &, string const & );
    //vtable offset: 0x60
    ShowDiscoveredPoi( uint, string const &, string const &, Guid );
    //vtable offset: 0x58
    ShowDiscoveredCodex( string const &, string const &, Guid );
    //vtable offset: 0xa8
    ClearNotificationQueue( );
    //vtable offset: 0x18
    ShowTutorial( string const & );
    //vtable offset: 0x18
    HideTutorial( string const & );
    //vtable offset: 0xa8
    HideCurrentTutorial( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_DialogueHolderAsset* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionFastTravel* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_AttachEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RozaAcrossWater : int {
    None         = 0,
    Chat         = 1,
    Carried      = 2,
    BarkWrongWay = 3,
    Finished     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Tutorial : int {
    None               = 0,
    StartPossible      = 1,
    OnTheWay           = 2,
    WaitingForPlayer   = 3,
    TutorialInProgress = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GoingToTrader : int {
    None               = 0,
    GoToTrader         = 1,
    Done               = 2,
    TraderDied         = 3,
    ItemLost           = 4,
    JourneymenBetrayed = 5,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_LockpickableEntity {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekCourtyard : int {
    None                = 0,
    Waiting             = 1,
    WaitingNearBrabant  = 2,
    HereIGoKillingAgain = 3,
    SkirmishBow         = 4,
    SkirmishWithGuards  = 5,
    Done                = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Event_PersistentNPCState : int {
    FirstEncounter  = 0,
    SecondEncounter = 1,
    ThirdEncounter  = 2,
    FourthEncounter = 3,
    Completed       = 4,
    Dead            = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemHandlingAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ClothingPreset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum talkToOndrej : int {
    None      = 0,
    started   = 1,
    aborted   = 2,
    completed = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dismountHorseTogether : int {
    None      = 0,
    Start     = 1,
    DoneSemin = 2,
    DoneSuk   = 3,
    DoneBoth  = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_Task* {
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_SuccessAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleSound : int {
    None                       = 0,
    FrontWallDefending         = 1,
    PlayerIsSupposedToGoToGate = 2,
    GateDefending              = 3,
    OilSpilled                 = 4,
    FinalSideWallDefending     = 5,
    Done                       = 6,
    Canceled                   = 7,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashListStatisticsGroup : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : IconId   : class CryStringT<char>;
    0x20 : Order    : int;
    0x28 : children : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashListStatistics>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashListStatistics> > >;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::entitymodule::clothing::S_ClothingMorph {
    0x0 : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AddSoulDefaultItem> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_BuffEffect* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AreaTriggerBase> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsEquipped* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::soundmodule::S_SkaldAtlTriggerId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TurnajniciDocking : int {
    None           = 0,
    ActiveBezHrace = 1,
    ActiveSHracem  = 2,
    Done           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StalkerWaitingForStalker : int {
    None           = 0,
    WaitingPrep    = 1,
    Hiding         = 2,
    StalkerSeen    = 3,
    StalkerRanAway = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TurnajDays : int {
    None      = 0,
    Active    = 1,
    Done      = 2,
    Canceled  = 3,
    Hint7days = 4,
    Hint6days = 5,
    Hint5days = 6,
    Hint4days = 7,
    Hint3days = 8,
    Hint2days = 9,
    Hint1days = 10,
    Hint0days = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkaCertPokladnice : int {
    None                 = 0,
    OpiraniADialog       = 1,
    Opirani              = 2,
    NetrpeliveOpirani    = 3,
    CekaniNaIngameDialog = 4,
    IngameDialog         = 5,
    Done                 = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh2CouncilPhases : int {
    None                   = 0,
    ZikmundTalking         = 1,
    ZikmundReprimanding    = 2,
    ZikmundForcingDialogue = 3,
    ZikmundsDateWithAulitz = 4,
    Done                   = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_LoadingMovement {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AutolearnPerksOperator* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemsToReturnAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DamaVNesnazich_ProgressFailableAbortable : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
    Aborted  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StartAfterLoad : int {
    None           = 0,
    StartFirst     = 1,
    StartAfterLoad = 2,
    AfterLoad      = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Switch> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Bones : int {
    None               = 0,
    BonesNotTouched    = 1,
    BonesAlmostTouched = 2,
    BonesShouldBeGone  = 3,
    BonesAreGone       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AnnaObjectiveSupport : int {
    None                 = 0,
    Active               = 1,
    UpdatedWithoutMarker = 2,
    UpdatedWithMarker    = 3,
    Done                 = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonradStreaming : int {
    None                 = 0,
    RadaRatbor           = 1,
    Unesen               = 2,
    VlasskyDvurOsvobozen = 3,
    VlasskyDvurOdesli    = 4,
    Suchdol              = 5,
    OpustilHru           = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_WeaponSolverState {
};

//size in bytes: 0x370
//pointer dimension: 0
class wh::guimodule::C_InteractorOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name              : class CryStringT<char>;
    0x18  : RuntimeState      : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports             : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView         : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive          : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Object            : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x100 : Type              : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_InteractionType>*;
    0x140 : ActionPrompt      : class wh::conceptmodule::C_TypedArrayPortRef<class wh::framework::C_LocalizedString>*;
    0x180 : EnabledInteractor : class wh::conceptmodule::C_TypedArrayPortRef<bool>*;
    0x1c0 : DisableReason     : class wh::conceptmodule::C_TypedArrayPortRef<class wh::framework::C_LocalizedString>*;
    0x200 : Priority          : class wh::conceptmodule::C_TypedArrayPortRef<int>*;
    0x240 : OnInteraction     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitingForPlayerAfterDuel : int {
    None              = 0,
    WaitingAndBarking = 1,
    Finished          = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithSoldier : int {
    None                = 0,
    Started             = 1,
    SoldierPersuaded    = 2,
    SoldierNotPersuaded = 3,
    Aborted             = 4,
    CampIsGone          = 5,
    SoldierDied         = 6,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_EventFunction : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase, class wh::conceptmodule::C_Function, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Function>, class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_Function> {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatusGuardNPCs : int {
    StreamedInitial    = 0,
    UnstreamedOblehani = 1,
    StreamedSiege      = 2,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_RoleOperator<struct wh::rpgmodule::storm::operation::Remove> : class wh::rpgmodule::storm::I_Operator {
    0x8 : name : struct wh::rpgmodule::S_RoleId;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourControl : int {
    None             = 0,
    RideBeforeWalls  = 1,
    RideInsideCastle = 2,
    TourFinished     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum testQItem : int {
    None                    = 0,
    QItemSpawn              = 1,
    QItemOverrideInteration = 2,
    QItemPickUpEnabled      = 3,
    QItemPlayerInv          = 4,
    NormalItem              = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::conceptmodule::C_Node>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetArmor : int {
    None         = 0,
    CollectArmor = 1,
    Done         = 2,
    DoneHidden   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VillageState : int {
    IsOk_withBeer    = 0,
    IsOk_withoutBeer = 1,
    DuringLoot       = 2,
    Burning          = 3,
    IsBurned         = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_IsContentFilterActive : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x2cc1ff4
    get : filters : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HandoverUnloading : int {
    None            = 0,
    WaitingToUnload = 1,
    Done            = 2,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_StanceAnimDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_StanceAnimData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::NPCState::S_StanceAnimData,class std::allocator<struct wh::xgenaimodule::NPCState::S_StanceAnimData> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x280
//pointer dimension: 0
class wh::playermodule::C_GenericRandomEventVariant : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase, class wh::playermodule::C_RandomEventVariantBase {
    0x10  : Name                         : class CryStringT<char>;
    0x18  : RuntimeState                 : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView                    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode                : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace               : class boost::optional<bool>;
    0x60  : Types                        : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets                       : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes                        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC                  : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView                    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x234 : Weight                       : class std::optional<float>;
    0x260 : IsAbstract                   : class std::optional<bool>;
    0x262 : IsGuaranteed                 : class std::optional<bool>;
    0x23c : DifficultyMean               : class std::optional<class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > >;
    0x244 : DifficultyStandardDeviation  : class std::optional<class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > >;
    0x250 : CooldownOverride             : class std::optional<struct wh::framework::S_TimeSpan>;
    0x278 : ViewRadius                   : class std::optional<float>;
    0x268 : MapTimeout                   : class std::optional<struct wh::framework::S_TimeSpan>;
    0x220 : EventInitiatedFastTravelData : class std::shared_ptr<struct wh::playermodule::S_RandomEventFastTravelData>;
    0xa0  : OnSpawn                      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe0  : OnDespawn                    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x120 : IsSpawned                    : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x160 : RandomEventOption            : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_RandomEventOption::Type>*;
    0x1a0 : RandomEventOptionResult      : class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_RandomEventOptionResult::Type>*;
    0x1e0 : IsEnabled                    : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_DeliveryResult {
};

//size in bytes: 0x2d0
//pointer dimension: 0
class wh::entitymodule::C_AddStashDefaultItem : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_Stash> {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0  : ItemClass      : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;
    0x150 : Amount         : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x110 : DisableRestock : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Stashes        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_Stash *,class std::allocator<class wh::entitymodule::C_Stash *> > >*;
    0x190 : Quality        : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x250 : Mode           : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_AddDefaultItemMode::Type>*;
    0x1d0 : Health         : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x210 : Condition      : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightWithHanka : int {
    None               = 0,
    FirstSkirmish      = 1,
    AfterMercySkirmish = 2,
    AfterMercyLeave    = 3,
    Done               = 4,
    Abort              = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_LockpickableEntityAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindCows : int {
    None                 = 0,
    FromVrba             = 1,
    CowsTrackingArea1    = 2,
    CowsTrackingArea2    = 3,
    CowsTrackingArea3    = 4,
    CowsTrackingArea4    = 5,
    CowsTrackingArea5    = 6,
    CowsTrackingArea6    = 7,
    CowsFound            = 8,
    CowsFoundWithoutHelp = 9,
    CowsGivenAway        = 10,
    Canceled             = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleLadderProgress : int {
    None          = 0,
    SetUpBehavior = 1,
    LadderActive  = 2,
    Done          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmbushOnTheRoad : int {
    None            = 0,
    InProgress      = 1,
    WaitingToUnload = 2,
    Done            = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIShootingContest* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIItemTransfer* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::entitymodule::clothing::C_BloodMask {
    0x8  : Name    : class CryStringT<char>;
    0x10 : Center  : struct Vec3_tpl<float>;
    0x1c : Radius  : float;
    0x20 : ZoneIdx : unsigned int;
    0x24 : Race    : enum wh::entitymodule::E_Race::Type;
    0x28 : Gender  : enum wh::entitymodule::E_ActorGender;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIItemSelection* {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::TypeDescriptors::S_Member {
    0x0  : Name            : class CryStringT<char>;
    0x8  : Type            : class CryStringT<char>;
    0x10 : InitialValue    : class CryStringT<char>;
    0x18 : ConceptWuidType : enum wh::xgenaimodule::E_ConceptAIWuidType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HorseUsageCondition* {
};

//size in bytes: 0x2be8
//pointer dimension: 0
class CSystem : struct ISystem {
    //Getter: WHGame.dll+0x1eddd24
    get    : CharacterManager : struct ICharacterManager*;
    //Getter: WHGame.dll+0x1eddd3c
    get    : Console          : struct IConsole*;
    //Getter: WHGame.dll+0x1eddd30
    get    : EntitySystem     : struct IEntitySystem*;
    //Getter: WHGame.dll+0x1eddd18
    get    : Platform         : struct IPlatformOS*;
    //Getter: WHGame.dll+0x1eddd48
    get    : Renderer         : struct IRenderer*;
    0x2b60 : BuildInfo        : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionId>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_Statistics* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AreaTriggerAnonymous* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ClothingConfig* {
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::entitymodule::C_DoorTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Door         : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_AnimDoor *>*;
    0x100 : OnOpened     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnClosed     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PoachedStag : int {
    Active   = 0,
    Searched = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JeronymSuspectState : int {
    None          = 0,
    Wait          = 1,
    SuspectPlayer = 2,
    Reset         = 3,
};

//size in bytes: 0x2
//pointer dimension: 0
class boost::optional<enum wh::entitymodule::E_Urgency::Type> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionHomeSlotAutoReturnItemSetAside* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_EffectBase* {
};

//size in bytes: 0x70
//pointer dimension: 0
struct RowSimulationParams {
    0x8  : ClampMode         : enum RowSimulationParams::ClampMode;
    0xb  : ActivateSimuation : bool;
    0xd  : SimFPS            : unsigned char;
    0x10 : ConeAngle         : float;
    0x14 : ConeRotation      : struct Vec3_tpl<float>;
    0x20 : Mass              : float;
    0x24 : Gravity           : float;
    0x28 : Damping           : float;
    0x2c : JointSpring       : float;
    0x30 : RodLength         : float;
    0x34 : StiffnessTarget   : struct Vec2_tpl<float>;
    0x3c : Turbulence        : struct Vec2_tpl<float>;
    0x44 : MaxVelocity       : float;
    0xc  : Cycle             : bool;
    0x48 : Stretch           : float;
    0x4c : RelaxationLoops   : unsigned int;
    0x50 : TranslationAxis   : struct Vec3_tpl<float>;
    0x0  : DirTransJoint     : class CCryName;
    0x9  : DebugSetup        : bool;
    0xa  : DebugText         : bool;
    0x5c : Capsule           : struct Vec2_tpl<float>;
    0xe  : ProjectionType    : unsigned char;
    //Getter: WHGame.dll+0x2513474
    get  : ProxyNames        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct RowSimulationParams* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum searchForKozina : int {
    None        = 0,
    HintDira    = 1,
    HintArea    = 2,
    HintHideout = 3,
    Done        = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3d2bb68
enum enum wh::E_CreditsType::Type : unsigned char {
    Full       = 0,
    FirstPart  = 1,
    SecondPart = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Input> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum komori : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaMigration : int {
    Certovka               = 0,
    Suchdol                = 1,
    RuthardkaPapezskyLegat = 2,
    SuchdolPapezskyLegat   = 3,
    CertovkaEndGame        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SymbolSermirnyAfterQuest : int {
    None        = 0,
    OnWall      = 1,
    Player      = 2,
    Confiscated = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VlachChattingState : int {
    NotInPub          = 0,
    InPubChatDisabled = 1,
    InPubChatEnabled  = 2,
    Stopped           = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CombatAutomationsCondition* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomocKlare : int {
    None      = 0,
    CanStart  = 1,
    Started   = 2,
    Completed = 3,
    Failed    = 4,
    Aborted   = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_WeaponDrawTrigger> {
};

//size in bytes: 0x2b0
//pointer dimension: 0
struct wh::entitymodule::S_DoorAnimSet {
    0x0   : Name          : class CryStringT<char>;
    0x8   : OpenIn        : struct wh::entitymodule::S_DoorThroughData;
    0x78  : CloseOut      : struct wh::entitymodule::S_DoorThroughData;
    0xe8  : OpenOut       : struct wh::entitymodule::S_DoorThroughData;
    0x158 : AutomaticOpen : struct wh::entitymodule::S_DoorThroughData;
    0x1c8 : PlayerClosed  : struct wh::entitymodule::S_DoorThroughData;
    0x238 : PlayerOpened  : struct wh::entitymodule::S_DoorThroughData;
    0x2a8 : DoorCloseAnim : class CryStringT<char>;
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_AutoTriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_TriggerPort, class wh::conceptmodule::C_InputTriggerPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Node> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x2
//pointer dimension: 0
unsigned short {
};

//size in bytes: 0x100
//pointer dimension: 0
class wh::playermodule::C_SaveGameBase {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::shopmodule::S_ShopDBData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_If* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_Action* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionAITag> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_AnimAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TaborCertovkaInstaDone : int {
    None       = 0,
    JindraFair = 1,
    JindraLied = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InfiltrationFailStates : int {
    None                  = 0,
    HendlDied             = 1,
    MandelinaOrTadeasDied = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_InputDataPort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonselTour : int {
    None                       = 0,
    Active                     = 1,
    Done                       = 2,
    Failed_playerCommitedCrime = 3,
    Failed_playerLeft          = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AsiDoVeziAxe : int {
    None   = 0,
    Player = 1,
    Finish = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LockBase *>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bf0948
enum enum wh::combatmodule::E_WeaponSolverState::Type : unsigned char {
    none    = 0,
    recoil  = 1,
    sliding = 2,
    recover = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RacekStreaming : int {
    None                         = 0,
    StreamedRatborPolylog        = 1,
    UnstreamedRatborPolylogEnd   = 2,
    StreamedRatborGodwinGameplay = 3,
    UnstreamedRatborKonecRady    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ClearContexts* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7a5c8
enum enum wh::questmodule::E_ObjectiveType : int {
    Obligatory = 0,
    Optional   = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3affc00
enum enum wh::playermodule::E_AlchemyFeedbacks::Type : unsigned char {
    None                        = 0,
    WrongIngredients            = 1,
    RightIngredientsWrongBase   = 2,
    TooManyFailedSteps          = 3,
    DecayedHerbs                = 4,
    IngredientMilled            = 5,
    IngredientNotMilled         = 6,
    IngredientDistilled         = 7,
    IngredientNotDistilled      = 8,
    IngredientOvercooked        = 9,
    IngredientUnderdone         = 10,
    SmallerAmountsOfIngredients = 11,
    BiggerAmountsOfIngredients  = 12,
    HighCookingTemperature      = 13,
    LowCookingTemperature       = 14,
    ResultMilled                = 15,
    ResultNotMilled             = 16,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekSpurHoldership : int {
    Jezek = 0,
    Henry = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoprovodPtacka : int {
    None                      = 0,
    DoprovodKZavodu           = 1,
    DoprovodKZavoduUpdated    = 2,
    Zavod                     = 3,
    PoZavoduNezPtacekDojede   = 4,
    DoprovodPoZavoduTalk      = 5,
    DoprovodPoZavoduAfterTalk = 6,
    PtacekNasranej            = 7,
    Done                      = 8,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_StashTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChangeEquipmentState : int {
    Unequipped       = 0,
    WaitingToEquip   = 1,
    Eqipped          = 2,
    WaitingToUnequip = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::combatmodule::C_CombatTreeKeyIndexedDatabase<class wh::combatmodule::C_CombatCombo> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_mercyDialogueResult : int {
    unknown       = 0,
    run           = 1,
    continueFight = 2,
    friendsAgain  = 3,
    forceDialogue = 4,
    playerAway    = 5,
    itemsGiven    = 6,
    standUp       = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4248
enum enum wh::entitymodule::E_FocusMode::Type : unsigned char {
    ViewRotationOnly            = 0,
    AlignEntityRotationWithView = 1,
    EntityRotationAfterDelay    = 2,
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItem : class wh::guimodule::C_UIFlashObject {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<struct wh::xgenaimodule::S_AIConceptSignal,class std::vector> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_POITypeWrapper> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressTripleFailableAbortable : int {
    None          = 0,
    Started       = 1,
    Completed     = 2,
    FailedSvatava = 3,
    FailedVendula = 4,
    FailedOther   = 5,
    Aborted       = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LockedDoorState : int {
    None                 = 0,
    InspectInteractionOn = 1,
    Inspected            = 2,
    BeerFound            = 3,
    Cancelled            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_FastTravelCutscene* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum seekers : int {
    None            = 0,
    beforeDialog    = 1,
    Waiting         = 2,
    Patroling       = 3,
    PatrolingBozena = 4,
    PatrolingSimple = 5,
    Talking         = 6,
    AngryTalking    = 7,
    Following       = 8,
    Combating       = 9,
    Running         = 10,
    Dead            = 11,
    Unconcious      = 12,
    Unstreamed      = 13,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CombatAutomationsAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_LedgeObject* {
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UseMinigameAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : FromStance           : enum wh::entitymodule::E_StanceCategory::Type;
    0xc4 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_ConfirmationId {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<bool>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_MemberFunction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CarryingBags : int {
    None     = 0,
    Active   = 1,
    Cart     = 2,
    Barn     = 3,
    Done     = 4,
    Canceled = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh1FeastPhase5 : int {
    None              = 0,
    FirstWineAndChat  = 1,
    SecondWineAndChat = 2,
    ThirdWine         = 3,
    Done              = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh1FeastPhases : int {
    None = 0,
    01   = 1,
    02   = 2,
    03   = 3,
    04   = 4,
    05   = 5,
    Done = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MikusHealedState : int {
    Wounded           = 0,
    HealedButDown     = 1,
    FullyHealedOrDead = 2,
    Aborted           = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_LevelHolder* {
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::rpgmodule::C_SkirmishManager : class wh::rpgmodule::I_SkirmishManager {

    //non-vtable method: WHGame.dll+0x2c3eea0
    DebugTriggerEvent( string const &, string const & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum bathhouse_skiptimeDuration : int {
    1h = 0,
    2h = 1,
    3h = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_DeliveryResult::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_PropCommand* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::C_FactionBase *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_OutputTriggerPort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PickingUpVavaksKey : int {
    None    = 0,
    Playing = 1,
    Fader   = 2,
    Done    = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::combatmodule::C_CombatCombo,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_PortRef* {
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_DrawWeaponAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_WeaponActionBase {
    0x8  : Name                      : class CryStringT<char>;
    0x10 : Urgency                   : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority                  : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies      : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects                   : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions       : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : Stance                    : enum wh::entitymodule::E_StanceCategory::Type;
    0xf0 : UnknownWeaponSetModeRight : enum wh::xgenaimodule::NPCState::E_UnknownWeaponSetMode::Type;
    0xf1 : UnknownWeaponSetModeLeft  : enum wh::xgenaimodule::NPCState::E_UnknownWeaponSetMode::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VavaksMenStreaming : int {
    Stream   = 0,
    Unstream = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightClubShouting : int {
    Disabled       = 0,
    IdleWaiting    = 1,
    ForcedShouting = 2,
    Active         = 3,
    Inactive       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RabbiAndSamuel : int {
    None                = 0,
    IngameDialogRunning = 1,
    IndividualActivity  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_DisablePlayerCartDismount* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3bca0b8
enum enum wh::rpgmodule::E_SoulSkill : unsigned int {
    stealth                = 0,
    horse_riding           = 1,
    fencing                = 2,
    bard                   = 3,
    thievery               = 4,
    pickpocketing_obsolete = 5,
    alchemy                = 6,
    cooking                = 7,
    craftsmanship          = 8,
    smithing_obsolete      = 9,
    fishing                = 10,
    mining                 = 11,
    first_aid              = 12,
    drinking               = 13,
    survival               = 14,
    defense                = 15,
    weapon_sword           = 16,
    heavy_weapons          = 17,
    weapon_bow_obsolete    = 18,
    marksmanship           = 19,
    weapon_shield          = 20,
    weapon_mace_obsolete   = 21,
    weapon_dagger          = 22,
    weapon_large           = 23,
    weapon_unarmed         = 24,
    herbalism_obsolete     = 25,
    scholarship            = 26,
    tailoring              = 27,
    armourer               = 28,
    weaponsmithing         = 29,
    shoemaking             = 30,
    gunsmithing            = 31,
    bowyery                = 32,
    gambling               = 33,
    houndmaster            = 34,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::C_FactionReputationReward : class wh::rpgmodule::I_Reward {
    0x8  : Target           : struct wh::rpgmodule::S_FactionDefinitionID;
    0x10 : ReputationChange : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum kettleState : int {
    full      = 0,
    eaten     = 1,
    halfEmpty = 2,
    empty     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindingMarika : int {
    None                                    = 0,
    SearchApolena_Loose_FromVajda           = 1,
    SearchApolena_Loose_FailedHerbalist     = 2,
    SearchApolena_Loose_RejectedByHerbalist = 3,
    SearchApolena_Exact                     = 4,
    MarikaFound                             = 5,
    Aborted                                 = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudBuffs* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeResetSamplingCounter<struct wh::rpgmodule::T_WorldTimePolicy>* {
};

//size in bytes: 0x24
//pointer dimension: 0
struct TContainerCountsBase<float>::ParticleCounts : struct TElementCountsBase<float> {
    0x0  : alloc       : float;
    0x4  : alive       : float;
    0x8  : updated     : float;
    0xc  : rendered    : float;
    0x10 : reiterate   : float;
    0x14 : reject      : float;
    0x18 : clip        : float;
    0x1c : collideTest : float;
    0x20 : collideHit  : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum trialogValidation : int {
    Argument       = 0,
    TrialogStarted = 1,
    PlayerLetItGo  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::I_UIShop* {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::engine3d::C_HLod : class wh::I_HLod, class wh::engine3d::C_HLodStreaming {
    0x24 : DataOffset                   : int;
    0x28 : DataSize                     : int;
    0x30 : ProxyIndex                   : int;
    0x2c : UpdateStreamingPrioriryFrame : int;
    0x80 : StreamingStatus              : enum EFileStreamingStatus;
    0x38 : Objects                      : class std::vector<struct IRenderNode *,class std::allocator<struct IRenderNode *> >;
    0x68 : ProxyMesh                    : struct IRenderNode*;
    //Getter: WHGame.dll+0x33f7af0
    get  : ProxyMeshMemoryUsage         : int;
    //Getter: WHGame.dll+0x33f7b5c
    get  : ProxyTextureMemoryUsage      : int;
    //Getter: WHGame.dll+0x33f7b2c
    get  : ProxyMeshStreamingStatus     : enum EFileStreamingStatus;
    //Getter: WHGame.dll+0x1eddc50
    get  : Type                         : enum wh::E_HLodType::Type;
    0x94 : Pos                          : struct Vec3_tpl<float>;
    0xa0 : Radius                       : float;
    //Getter: WHGame.dll+0x1ede060
    get  : LayerId                      : unsigned short;
    0xd4 : NearestObserverDistance      : float;
    0xb0 : Children                     : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::engine3d::C_HLod>,class std::allocator<class std::shared_ptr<class wh::engine3d::C_HLod> > > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekOpenworldHorseKutnohorsko : int {
    None                       = 0,
    StreamedZachranaPtacka     = 1,
    UnstreamedSetkaniVRatbori1 = 2,
    StreamedSetkaniVRatbori1   = 3,
    StreamedSetkaniVRatbori2   = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::T_GameTimePolicy {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuChoice,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::TypeDescriptors::S_Enum* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_StanceElementRequired* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekHorseStreaming : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x170
//pointer dimension: 0
class wh::xgenaimodule::C_SetRelationContext : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_RelationScriptContext> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Context      : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContext>*;
    0xe0  : From         : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x120 : To           : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VranasDaggerInspection : int {
    None          = 0,
    InTent        = 1,
    InTentSeen    = 2,
    NotInTent     = 3,
    NotInTentSeen = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AngryBehaviorAfterDuel : int {
    None          = 0,
    AngryOnSpot   = 1,
    AngrilyGoHome = 2,
    Finished      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PerfumeItemHolder : int {
    None      = 0,
    ElseStash = 1,
    Player    = 2,
    Francek   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StolenShoeQI : int {
    None            = 0,
    InTent          = 1,
    Henry           = 2,
    BackToKatherine = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::guimodule::C_UIMenuChoice {
    0x8  : Id   : enum wh::guimodule::E_ChoiceName::Type;
    0x10 : Text : class wh::framework::C_LocalizedString;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleStatusWest : int {
    None           = 0,
    DuringCutscene = 1,
    Palisade       = 2,
    Done           = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_TechnicalStatus {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_CarryItemPile* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HitOnTheGirl : int {
    None                   = 0,
    Started                = 1,
    Lost                   = 2,
    WonAndAceptedToFight   = 3,
    WonButRefuseToFight    = 4,
    StopedBotheringTheGirl = 5,
    Abort                  = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KrystofImmortality : int {
    None            = 0,
    PlayerTooFar    = 1,
    PlayerNearby    = 2,
    KrystofDied     = 3,
    KrystofSurvived = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_CarryItemPileAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_SoulQueryContext* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetLootInventory* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantSoldiersState : int {
    None                         = 0,
    StreamedZikmunduvTabor       = 1,
    StikaUnstreamedUtokNaMalesov = 2,
    BertaUnstreamedPapezskyLegat = 3,
    Unstreamed                   = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_CharacterComponentTagPaleness {
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::xgenaimodule::scheduler::S_SchedulerAlias {
    0x0 : Name       : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fd60
    get : Parameters : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_AlchemyTutorialFeature {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum IngamePolylogNadvori : int {
    None          = 0,
    WaitForPlayer = 1,
    PlayPolylog   = 2,
    Done          = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_RandomEvent* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_StatisticTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ViktorkaState : int {
    ViktorkaStreamed      = 0,
    ViktorkaGraveStreamed = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WeaponSlot : int {
    Primary   = 0,
    Secondary = 1,
    Oversized = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_DistanceCondition : class wh::xgenaimodule::BehaviorTree::I_Node, class wh::xgenaimodule::BehaviorTree::I_SwitchableNode, class wh::xgenaimodule::BehaviorTree::I_ContinuousSwitchableNode {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::I_UIHudEvents* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekCestaNebakov : int {
    None                                    = 0,
    PtacekChceOjdedNaNebakov                = 1,
    NasranejPtacekChceOjdedNaNebakov        = 2,
    PtacekCekaUBranyNaKoni                  = 3,
    PtacekZacinaTour                        = 4,
    PtacekJedeKSibenici                     = 5,
    PtacekJedeZaBranu                       = 6,
    PtacekJedeKRozcesti                     = 7,
    PtacekCekaNaHraceUStartu                = 8,
    PtacekRekneChatPredZavodem              = 9,
    PtacekZavodi                            = 10,
    PtacekNezavodiAleJede                   = 11,
    PtacekCekaNaKonciZavodu                 = 12,
    PtacekZeZavoduKNebakovu_tichoPredUvodem = 13,
    PtacekZeZavoduKNebakovu_uvodBark        = 14,
    PtacekZeZavoduKNebakovu_chatUvod        = 15,
    PtacekFastTravelChat                    = 16,
    PtacekZeZavoduKNebakovu_koukej          = 17,
    PtacekZeZavoduKNebakovu_zrychlime       = 18,
    PtacekZeZavoduKNebakovu_doleva          = 19,
    PtacekZeZavoduKNebakovu_chatONebakove   = 20,
    PtacekCekaUNebakova                     = 21,
    PtacekJdeZpet                           = 22,
    Done                                    = 23,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_AddRemove {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatableRelikvie : int {
    None      = 0,
    Active    = 1,
    Updated   = 2,
    Completed = 3,
    Fail      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::shopmodule::C_Shop>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LevelLocation : int {
    Trosecko    = 0,
    Kutnohorsko = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerWokeUp : int {
    None     = 0,
    WakingUp = 1,
    WokeUp   = 2,
    Done     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WorkingForInkeeper : int {
    None             = 0,
    TalkToVavrinec   = 1,
    DoTasks          = 2,
    ReturnToVavrinec = 3,
    Done             = 4,
    InnkeeperIsDead  = 5,
    Aborted          = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_RestApiExample {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_situation : int {
    disable = 0,
    enable  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PraskaniHosina : int {
    None      = 0,
    ObeCtvrti = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetInventory* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadSoldiersAfterFight : int {
    None                      = 0,
    ActiveDeadPrefabs_Village = 1,
    StreamingFakeAmbush       = 2,
    ActiveFakeAmbush          = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_ConceptModule {
    //Getter: WHGame.dll+0x8c2cc0
    get : ConceptManager : class wh::conceptmodule::C_ConceptManager*;

    //non-vtable method: WHGame.dll+0x19a7f50
    GetDefinitions( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HansMigration : int {
    Default           = 0,
    Suchdol           = 1,
    Ruthardka         = 2,
    SuchdolAfterLegat = 3,
    CertovkaEndGame   = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterSoulProperty : class wh::guimodule::C_UIFlashObject {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : SoulId           : class CryStringT<char>;
    0x20 : DummySoulId      : class CryStringT<char>;
    0x28 : BaseLevel        : int;
    0x2c : BuffedLevel      : int;
    0x30 : DummyBaseLevel   : int;
    0x34 : DummyBuffedLevel : int;
    0x38 : InvertedColor    : bool;
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::animationmodule::JointPoseMorphData::S_Model {
    0x0 : Name  : class CryStringT<char>;
    0x8 : Poses : class std::reference_wrapper<class std::vector<struct wh::animationmodule::JointPoseMorphData::S_Pose,class std::allocator<struct wh::animationmodule::JointPoseMorphData::S_Pose> > >;

    //non-vtable method: WHGame.dll+0xb6c960
    OnAfterDeserialization( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_AddDefaultItemMode {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_Effect>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum pickpocketEvent : int {
    failedPouch        = 0,
    failedSatchel      = 1,
    success            = 2,
    failedWithoutCrime = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab46f8
enum enum wh::conceptmodule::E_PortConnectionType : int {
    Any      = 0,
    Constant = 1,
    Edge     = 2,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_WeaponPresetRef : class wh::entitymodule::C_PresetItemBase {
    0x8  : Weight      : float;
    0xc  : CombatLevel : float;
    0x10 : Name        : class CryStringT<char>;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeSpan> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x318
//pointer dimension: 0
class wh::rpgmodule::C_AreaTriggerAnonymous : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::rpgmodule::C_AreaTriggerBase {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x100 : Areas        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > >*;
    0x180 : OnEnter      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x200 : OnLeave      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x240 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x280 : Area         : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::I_Area *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SpawnItemEventData* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::I_InteractionTrigger *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChosenFightObjective : int {
    None                 = 0,
    FightingCuman        = 1,
    FightingJealousMan   = 2,
    FightLost            = 3,
    WonAgainstCuman      = 4,
    WonAgainstJealousMan = 5,
    Aborted              = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum trapKozina : int {
    none       = 0,
    germanHint = 1,
    talkToUdo  = 2,
    completed  = 3,
    aborted    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SvatiReactToPlayer : int {
    None     = 0,
    Tracking = 1,
    Chatting = 2,
    Done     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::BehaviorTree::I_CallbackEventConsumer* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_UseBookTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum komarStreaming : int {
    DefaultUnstream       = 0,
    StreamDebug           = 1,
    UnstreamDebug         = 2,
    UnstreamPapezskyLegat = 3,
    StreamPapezskyLegat   = 4,
    UnstreamDeath         = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HungerDespairTurnAndBark : int {
    None = 0,
    Wait = 1,
    Bark = 2,
    Done = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
bool {
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorSkipTimeTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul            : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : SkipTimeStarted : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : SkipTimeEnded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatedFailable : int {
    None     = 0,
    Active   = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
    Aborted  = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::engine3d::C_HLod* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4658
enum enum wh::dialogmodule::data::E_DecisionEntryGrayOutMode::Type : unsigned char {
    All   = 0,
    Any   = 1,
    Never = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TlamaShieldHoldership : int {
    None               = 0,
    TlamaOwner         = 1,
    PlayerOwner        = 2,
    CervenakOwner      = 3,
    PlayerWantToKeepIt = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeliverTheDress : int {
    None            = 0,
    NobodyToDeliver = 1,
    Deliver         = 2,
    Delivered       = 3,
    Abort           = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BehaviorsScene : int {
    None                            = 0,
    ButcherAndVillagersWaiting      = 1,
    ButcherAndVillagersPlayingScene = 2,
    ButcherAndVillagersHangingKomar = 3,
    EndBehavior                     = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::runtime::C_RuntimeType* {
};

//size in bytes: 0x58
//pointer dimension: 0
struct wh::rpgmodule::S_SoulArchetype {
    0x8  : Id     : int;
    0x10 : Name   : class CryStringT<char>;
    //Getter: WHGame.dll+0x19d6e70
    get  : Gender : enum wh::entitymodule::E_ActorGender;
    //Getter: WHGame.dll+0x19a0ba0
    get  : Race   : enum wh::entitymodule::E_Race::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_PickUpEventData* {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::conceptmodule::C_LastElement : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_ElementAtBase {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Value        : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::conceptmodule::C_TriggerSequence : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x80 : OnExec       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SelectedHorseDecision* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_Soul* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulState>* {
};

//size in bytes: 0x8
//pointer dimension: 1
__int64* {
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::rpgmodule::C_BuffAITagDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_BuffAITag,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::S_BuffAITag,class std::allocator<struct wh::rpgmodule::S_BuffAITag> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x110
//pointer dimension: 0
class CAttachmentVCLOTH {
};

//size in bytes: 0x8
//pointer dimension: 1
const class std::vector<int,class std::allocator<int> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithLacek : int {
    None             = 0,
    Active           = 1,
    DoneHaveMoney    = 2,
    DoneFailDialogue = 3,
    Canceled         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WineAndChat : int {
    None         = 0,
    Wine         = 1,
    Chat         = 2,
    DoneWineFail = 3,
    Done         = 4,
    Cancel       = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KapitanStrazi : int {
    None                  = 0,
    ChuzeKeKostkam        = 1,
    DialogSHracemKostek   = 2,
    ChatujuAKoukamNaHrace = 3,
    ChatujuAChciSedet     = 4,
    ChciSedetUStolu       = 5,
    ChciChoditPoHrade     = 6,
    JduDolu               = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class rttr::type* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_TriggerPointEventImplementation* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ErikDialog_TagpointSetting : int {
    Primary   = 0,
    Secondary = 1,
    Failsafe  = 2,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::combatmodule::C_CombatComboStep {
    0xc  : GuardZone  : int;
    //Getter: WHGame.dll+0x10a0f10
    get  : InputClass : class CryStringT<char>;
    //Getter: WHGame.dll+0x10a0f10
    get  : AttackType : class CryStringT<char>;
    0x14 : IsCharged  : bool;
    0x15 : UseSolver  : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Tribool : int {
    None  = 0,
    True  = 1,
    False = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_DisplayTutorial> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StrazciDialog : int {
    None         = 0,
    CekaniNaAreu = 1,
    Dialog       = 2,
    Done         = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerAddMetaRole : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid      : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role            : class CryStringT<char>;
    0x18 : EnabledMetaRole : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AvengeAnna : int {
    None                  = 0,
    ShouldBeatUpBretislav = 1,
    WonAgainstBretislav   = 2,
    GotRewardFromAnna     = 3,
    InsultedAnna          = 4,
    AnnaIsDead            = 5,
    Aborted               = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToDrozdAboutBorderPeg : int {
    None               = 0,
    PlayerHasBorderPeg = 1,
    Started            = 2,
    Done               = 3,
    Failed             = 4,
    FailedDrozdIsDead  = 5,
    Aborted            = 6,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartEntityTemplate::S_UnstanceResourceRecord {
    0x0 : Unstance : class CryStringT<char>;
    0x8 : Resource : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OuterCourtyardStealthCommando : int {
    None                     = 0,
    GoingToLiftingDrawbridge = 1,
    GoingToPushTheCart       = 2,
    PushingCart              = 3,
    Hiding                   = 4,
    Done                     = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeHorseUsageEffect* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyRecipeStepType,class std::vector> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::guimodule::C_UIFlashListReputation : class wh::guimodule::C_UIFlashObject {
    0x8  : Id           : class CryStringT<char>;
    0x10 : Name         : class CryStringT<char>;
    0x18 : IconId       : class CryStringT<char>;
    0x20 : IconValue    : int;
    0x24 : IsDiscovered : bool;
    0x28 : Order        : int;
    0x30 : children     : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashListReputation>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashListReputation> > >;
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::C_DisableHorseInventory : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InvestigateWithSuk : int {
    none         = 0,
    active       = 1,
    report       = 2,
    henryFoundIt = 3,
    sukFoundIt   = 4,
    canceled     = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_ContextPresetOperator<struct wh::rpgmodule::storm::operation::Remove> : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x2c83608
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationSerializedCheckResult {
    //Getter: WHGame.dll+0x320c150
    get : DropReasons : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TournamentBanState : int {
    None           = 0,
    BanJedenTurnaj = 1,
    BanDvaTurnaje  = 2,
    BanTriTurnaje  = 3,
    BanCrimeHigh   = 4,
    Odbanovan      = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyRecipeProduct* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7a758
enum enum wh::rpgmodule::storm::C_CustomSelector::Mode : int {
    and = 0,
    or  = 1,
};

//size in bytes: 0x320
//pointer dimension: 0
class wh::guimodule::C_UIHudMask : class wh::guimodule::C_UIBase, class wh::framework::I_UIHudMask {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum staryMistr_hadanka : int {
    None      = 0,
    WasLooted = 1,
    WasRead   = 2,
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_RiderActionOut : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_RiderActionBase {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<struct wh::dialogmodule::S_DialogParams> >* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_BodyPartOverride> {
};

//size in bytes: 0xa8
//pointer dimension: 0
struct wh::rpgmodule::S_SoulStaticDBData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BurryDead : int {
    None       = 0,
    Active     = 1,
    Grave1Used = 2,
    Grave2Used = 3,
    Grave3Used = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RideWithGravedigger : int {
    None        = 0,
    Active      = 1,
    Done        = 2,
    Aborted     = 3,
    CleanUpDone = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum afterBattlePolylog_setkaniVRatbori2 : int {
    None                         = 0,
    Started                      = 1,
    spokeWithBohuta_krystofDead  = 2,
    spokeWithBohuta_krystofAlive = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TravelToKH : int {
    None                                = 0,
    SpeakWithRozaRuthard                = 1,
    FastTaveledToTunnelEntry            = 2,
    CarryRozaAcrossWater                = 3,
    GoToRuthardka                       = 4,
    EnteredRuthardkaThroughSecretTunnel = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
const signed char* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a29f00
enum enum SimulationParams::ClampType : int {
    Disabled              = 0,
    PendulumCone          = 1,
    PendulumHingePlane    = 2,
    PendulumHalfCone      = 3,
    SpringEllipsoid       = 4,
    TranslationProjection = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LootersConflict : int {
    None             = 0,
    SolveLooters     = 1,
    LootersKilled    = 2,
    PeacefulSolution = 3,
    PlayerLeft       = 4,
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionAdditiveAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionAdditiveAnimRequest {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::I_DisableRagdollEffect {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PockejNaSvujSouboj : int {
    None         = 0,
    Pockej       = 1,
    JdiDoOhradky = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_LinkEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HynekInCamp : int {
    None            = 0,
    HynekIsInCamp   = 1,
    WaitingToUnload = 2,
    HynekIsGone     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WalkWithZajic : int {
    None       = 0,
    Active     = 1,
    Done       = 2,
    Failed     = 3,
    PlayerLeft = 4,
};

//size in bytes: 0x118
//pointer dimension: 0
class wh::xgenaimodule::C_SetOwner : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : What         : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0xd0 : Who          : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::entitymodule::I_InteractionTrigger {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KutnohorskoStoryLevelSwitch : int {
    None         = 0,
    FirstSwitch  = 1,
    SecondSwitch = 2,
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::guimodule::S_CutsceneEventDesc {
    0x8  : StartFrame : int;
    0xc  : EndFrame   : int;
    0x10 : Type       : enum wh::guimodule::E_CutsceneEventType::Type;
    0x18 : StringData : class CryStringT<char>;
    0x20 : Layout     : enum wh::guimodule::E_CustomTextLayout::Type;
    0x24 : FadeIn     : int;
    0x28 : FadeOut    : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zbranePanaSemina_crossroadSearchPhases : int {
    None       = 0,
    Searching1 = 1,
    Searching2 = 2,
    Searching3 = 3,
    Searching4 = 4,
    Finding    = 5,
    Reporting  = 6,
    Done       = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_BlockUINotifications> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportBergovovi : int {
    None          = 0,
    Active        = 1,
    ZjistenoHovno = 2,
    ZjistenoMalo  = 3,
    ZjistenoHodne = 4,
    ZjistenNebak  = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_ClothingPreset,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::rpgmodule::S_BuffDefinitionAITag,class std::allocator<struct wh::rpgmodule::S_BuffDefinitionAITag> > >* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29b40
enum enum wh::rpgmodule::E_SkirmishEventRole::Type : unsigned char {
    Source          = 0,
    SourceCompanion = 1,
    SourceLeader    = 2,
    Target          = 3,
    TargetCompanion = 4,
    TargetLeader    = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FlowersItemHolder : int {
    None    = 0,
    Player  = 1,
    Francek = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stealingBookCook : int {
    None                     = 0,
    Started                  = 1,
    UpdatedOnLocation        = 2,
    UpdatedAfterTalk         = 3,
    UpdatedAfterTalkAndSteal = 4,
    Done                     = 5,
    Aborted                  = 6,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::musicmodule::S_WorldStateToggleId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelUndeground : int {
    None              = 0,
    WaitNearEnter     = 1,
    WaitInTunnel      = 2,
    Tour              = 3,
    WaitNearLooters   = 4,
    GoToEnd           = 5,
    SearchFirstPlace  = 6,
    SearchSecondPlace = 7,
    WaitingForMark    = 8,
    ChatWithPlayer    = 9,
    TourBack          = 10,
    Done              = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelWithFlorian : int {
    None       = 0,
    Active     = 1,
    PlayerWin  = 2,
    PlayerLose = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_MonologByAliasEventData : struct wh::xgenaimodule::I_EventData, struct wh::xgenaimodule::S_MonologEventData {
    0x8 : Parameter : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VazounDiedDuringActivity : int {
    None                = 0,
    VazounDied          = 1,
    PlayerKnowsAbout2v1 = 2,
    Aborted             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AdamStreaming : int {
    DefaultUnstreamed = 0,
    StreamedCouncil   = 1,
    UnstreamedCouncil = 2,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::C_ActorActionCarryCorpse : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction, class wh::entitymodule::I_ActorActionCarry {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_WeaponEquipItemClass* {
};

//size in bytes: 0x310
//pointer dimension: 0
class wh::guimodule::C_UIHudMessages : class wh::guimodule::C_UIBase, class wh::framework::I_UIHudMessages {

    //vtable offset: 0x0
    ShowInfoText( string const &, int, int );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HasteState : int {
    None        = 0,
    Active      = 1,
    HasteTour   = 2,
    HasteAttack = 3,
    Done        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_ScriptCounter* {
};

//size in bytes: 0x8
//pointer dimension: 1
const long* {
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::entitymodule::S_MissileWeaponClass* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_DisableActionEffect> {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_InventoryPresetRef : class wh::entitymodule::C_PresetItemBase {
    0x8  : Weight      : float;
    0xc  : CombatLevel : float;
    0x10 : Name        : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZalozniUtok : int {
    None   = 0,
    Ready  = 1,
    Attack = 2,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<struct wh::playermodule::S_Tutorial>,class std::vector>,class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<class std::shared_ptr<struct wh::playermodule::S_Tutorial> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulDerivedStat>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::clothing::S_BloodMaskName>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetCharacterComponentBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BonkaAndZink : int {
    None      = 0,
    BonkaDead = 1,
    ZinkDead  = 2,
    BothDead  = 3,
    NooneDied = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_TimerState::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7ad98
enum enum wh::conceptmodule::E_NodeRuntimeState : int {
    Awake       = 0,
    Hibernating = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UtecZDolu : int {
    None         = 0,
    Utec         = 1,
    StihlTimer   = 2,
    NestihlTimer = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zikmunduvTaborIOUwatch : int {
    None    = 0,
    Started = 1,
    Found   = 2,
    Read    = 3,
    Aborted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CampScouting : int {
    None      = 0,
    Progress  = 1,
    CampFound = 2,
    Canceled  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_MeleeWeaponClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DeactivatedItem* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LedgeObject *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::conceptmodule::C_SceneFinishedWaiter : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_RuntimeState {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : Enqueue      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x80 : OnEnqueue    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc0 : OnFinished   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoldiersWithPtacekPhases : int {
    None                                       = 0,
    GoingToSemin                               = 1,
    SoldiersWaitingOutsideSemin                = 2,
    GotToSeminWithHenry                        = 3,
    SoldiersInsideSemin                        = 4,
    SoldiersInsideSemin_WaitingForIntermission = 5,
    SoldiersInsideSemin_StreamInProgress       = 6,
    DoneWithoutHenry                           = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ziskejZbrane : int {
    None             = 0,
    vykopejFakeMisto = 1,
    vykopejMisto     = 2,
    seberZbrane      = 3,
    doneZbraneMam    = 4,
};

//size in bytes: 0x54
//pointer dimension: 0
struct TContainerCountsBase<float> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_AlchemyBaseItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::environmentmodule::C_SunEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum osvobodJenika : int {
    None               = 0,
    Zadano             = 1,
    OsvobozenNasilim   = 2,
    OsvobozenStealthem = 3,
    OsvobozenJednanim  = 4,
    Fail               = 5,
    Aborted            = 6,
    ZadanoOndrej       = 7,
    Canceled           = 8,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::game::C_ExtraRewardData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeRightHandContentEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIOverlay* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonradCombat : int {
    None      = 0,
    Ranged    = 1,
    Melee     = 2,
    NotForced = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a6cb38
enum enum wh::entitymodule::E_Urgency::Type : unsigned char {
    Default = 0,
    Slow    = 1,
    Fast    = 2,
    Instant = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatusCivilNPCs : int {
    StreamedInitial    = 0,
    UnstreamedDebug    = 1,
    UnstreamedOblehani = 2,
    StreamedEnd        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TwoHolesDigging : int {
    None       = 0,
    BothFilled = 1,
    OneDug     = 2,
    BothDug    = 3,
    Aborted    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HandOverTreasure : int {
    None            = 0,
    Active          = 1,
    DoneGood        = 2,
    DoneBad         = 3,
    CanceledSvatava = 4,
    CanceledVendula = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GuardingWife : int {
    GuardingWife = 0,
    Bribed       = 1,
    LostFight    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_GameScriptContext>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff240
enum enum wh::combatmodule::E_WeaponKind::Type : unsigned char {
    none      = 0,
    melee     = 1,
    missile   = 2,
    oversized = 3,
    undefined = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::entitymodule::S_LayerProfile,class std::allocator<struct wh::entitymodule::S_LayerProfile> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<struct wh::entitymodule::S_LayerProfile,class std::allocator<struct wh::entitymodule::S_LayerProfile> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::entitymodule::C_Stash {
    //Getter: WHGame.dll+0x8bb450
    get : Inventory : class wh::entitymodule::C_Inventory*;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ElementAtBase> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetEntityContextPreset> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::game::C_LevelSwitchData* {
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::entitymodule::C_ActorCarryItemTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x1d8 : SourcePiles  : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > >*;
    0xf8  : OnPickedUp   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x198 : OnDropped    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnDeposited  : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::C_StatReward : class wh::rpgmodule::I_Reward {
    0x8  : Type             : class CryStringT<char>;
    0x10 : ExperienceChange : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZebrikKPasti : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CheckTournamentOutfit : int {
    None                         = 0,
    SkipCheck                    = 1,
    CorrectOutfit                = 2,
    WrongOutfitForSwordAndShield = 3,
    WrongOutfitForLongSword      = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::rpgmodule::C_DebugReputationLog : class wh::rpgmodule::I_ReputationLog {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_CombatCombo* {
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimHolsterRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::TypeDescriptors::S_Value* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum goToKozina : int {
    None          = 0,
    GoToHideout   = 1,
    WaitForKozina = 2,
    Done          = 3,
    Canceled      = 4,
};

//size in bytes: 0x1f8
//pointer dimension: 0
class wh::rpgmodule::C_Faction : class wh::rpgmodule::C_FactionBase {
    //Getter: WHGame.dll+0x2bdbb9c
    get   : PlayerRenown         : float;
    //Getter: WHGame.dll+0x1ede058
    get   : Name                 : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get   : UIName               : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddb50
    get   : NumMembers           : unsigned __int64;
    //Getter: WHGame.dll+0x1eddb90
    get   : Parent               : class std::shared_ptr<class wh::rpgmodule::C_Faction>;
    0xc8  : OverrideMemberNumber : class boost::optional<unsigned __int64>;
    0xd8  : InitialReputation    : float;
    0x98  : UIName               : class CryStringT<char>;
    0xa0  : UIDescription        : class CryStringT<char>;
    0xa8  : UIOrder              : int;
    0xb0  : UIIcon               : class CryStringT<char>;
    0xc0  : Name                 : class CryStringT<char>;
    0xdc  : NumChildsCache       : int;
    //Getter: WHGame.dll+0x2bdc28c
    get   : Visibility           : bool;
    //Getter: WHGame.dll+0x2bdb15c
    get   : Labels               : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x180 : LocationId           : struct wh::rpgmodule::S_LocationId;
    0xb8  : LevelId              : int;
    0x80  : Children             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::C_Faction>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::C_Faction> > > >;
    0x1b0 : Relations            : class std::vector<class wh::rpgmodule::C_FactionRelation,class std::allocator<class wh::rpgmodule::C_FactionRelation> >;
    0x1e0 : Souls                : class std::reference_wrapper<class std::vector<class std::weak_ptr<class wh::rpgmodule::C_NPCFactionNode>,class std::allocator<class std::weak_ptr<class wh::rpgmodule::C_NPCFactionNode> > > const >;

    //non-vtable method: WHGame.dll+0xffff82117d8bdf80
    PlayerReputation( bool, bool );
    //non-vtable method: WHGame.dll+0x40b240
    OnAfterDeserialization( );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab41f8
enum enum wh::environmentmodule::E_WeatherProfileDelayedAction::Type : unsigned char {
    Hide           = 0,
    Unhide         = 1,
    DisableEmitter = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_ItemSlot *,class std::allocator<class wh::entitymodule::C_ItemSlot *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorIdleState::Type> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HealingX : int {
    None       = 0,
    Diagnose   = 1,
    Healing    = 2,
    Cured      = 3,
    Died       = 4,
    NoDiagnose = 5,
    NotCured   = 6,
    Aborted    = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_StatWrapper>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VazounFight : int {
    None             = 0,
    WaitingForPlayer = 1,
    PlayerDidntCome  = 2,
    AfterFight       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KutnohorskyTurnaj_rounds : int {
    None        = 0,
    FirstRound  = 1,
    SecondRound = 2,
    FinalRound  = 3,
    Done        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DeactivatingItem* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlacesInActiveTour : int {
    None              = 0,
    Hospital          = 1,
    ToTournamentArena = 2,
    TournamentArena   = 3,
    ToBathhouseEnd    = 4,
    Bathhouse         = 5,
    ToEatery          = 6,
    Eatery            = 7,
    ToPillory         = 8,
    Pillory           = 9,
    Finished          = 10,
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimerState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Stehovani : int {
    None                       = 0,
    CekaniNaVzdaleni           = 1,
    CekaniNaFader              = 2,
    CekaniNaDokonceniStehovani = 3,
    Done                       = 4,
    Canceled                   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MillerFamilyFleeingDanemark : int {
    None                = 0,
    StartedFleeing      = 1,
    MillerFled          = 2,
    MillerAndWifeFled   = 3,
    EveryoneFled        = 4,
    RestoredNormalState = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelBehaviors : int {
    None            = 0,
    AwaitingDuel    = 1,
    IntroducingDuel = 2,
    DuringDuel      = 3,
    DuringNPCDuel   = 4,
    AfterDuel       = 5,
    DuelDone        = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Effect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoldiersElimination : int {
    PlayerIsStealth  = 0,
    PlayerIsRevealed = 1,
    Done             = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadPechaOffscreen : int {
    None                  = 0,
    WaitForBanditsToLeave = 1,
    DeadPecha             = 2,
    Finished              = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mainquestTimeline : int {
    UntilM45 = 0,
    AfterM45 = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_SpawnedItemsCleanupEventImplemenation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_NPCGameModeTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_ScriptParamName {
    0x0 : Name : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::S_Trigger {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DanceWithPharmacistsWife : int {
    None           = 0,
    AskAboutPotion = 1,
    DanceWithWife  = 2,
    BuyPotion      = 3,
    BoughtPotion   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
unsigned char* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIDice* {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_StaticTriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_TriggerPort, class wh::conceptmodule::C_ActiveTriggerPort, class wh::conceptmodule::C_InterfaceTriggerPort {
    0x28 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value     : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type      : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x30 : Direction : enum wh::conceptmodule::E_PortDirection;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TipsterAliveState : int {
    Alive = 0,
    Dead  = 1,
};

//size in bytes: 0x120
//pointer dimension: 0
struct wh::entitymodule::S_HelmetItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_ArmorItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    //Getter: WHGame.dll+0x19c4ab0
    get   : DefenseStab                    : float;
    //Getter: WHGame.dll+0x19c4bf0
    get   : DefenseSlash                   : float;
    //Getter: WHGame.dll+0x19a24c0
    get   : DefenseSmash                   : float;
    0xfc  : StrReq                         : float;
    0x100 : Noise                          : float;
    0x104 : MaxStatus                      : int;
    0x108 : FactionId                      : class CryStringT<char>;
    0x118 : VisorTypeId                    : unsigned int;
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_SmitheryAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_PickUpAction* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ConfiscationTrigger> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_CutsceneType {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_RandomEventVariant* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MountBergovHorse : int {
    None                         = 0,
    Started                      = 1,
    Completed                    = 2,
    AbortedQuestFailed           = 3,
    AbortedHorseCameHomeByItself = 4,
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoCombo : class wh::guimodule::C_UIFlashObject {
    0x8  : Id          : class CryStringT<char>;
    0x10 : Name        : class CryStringT<char>;
    0x18 : Icon        : class CryStringT<char>;
    0x20 : GroupId     : unsigned int;
    0x28 : GroupName   : class CryStringT<char>;
    0x30 : Description : class CryStringT<char>;
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::playermodule::C_DisableMinigameEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name            : class CryStringT<char>;
    0x18 : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : MinigameObjects : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::playermodule::C_Battlement *,class std::allocator<class wh::playermodule::C_Battlement *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_FireOnHitMode {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::definition::I_NodeDefinition* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_EntityScriptContext {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditsAndBergovHorseStreaming : int {
    None                    = 0,
    WaitingForStream        = 1,
    BanditsAndHorseStreamed = 2,
};

//size in bytes: 0x1a8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_StanceCategory::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GraveLootersState : int {
    None            = 0,
    Loot            = 1,
    Bark            = 2,
    Skirmish        = 3,
    DeadAtRuthardka = 4,
    DeadInTunnels   = 5,
    Enemies         = 6,
    Done            = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestMusicState : int {
    None                       = 0,
    SiegeBegins                = 1,
    PlayerGoesSleep            = 2,
    NightAttack_SomethingWrong = 3,
    NightAttack_BattleStarts   = 4,
    QuestEnd                   = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_TextCutscene* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SaveLockState : int {
    Off = 0,
    On  = 1,
};

//size in bytes: 0x10
//pointer dimension: 0
struct IMaterial {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::conceptmodule::C_Library : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::data::S_FastForwardRequestForAll* {
};

//size in bytes: 0x210
//pointer dimension: 0
class wh::entitymodule::C_AddSlotDefaultItem : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_ItemSlot> {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0  : DisableRestock : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Slots          : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_ItemSlot *,class std::allocator<class wh::entitymodule::C_ItemSlot *> > >*;
    0x110 : Quality        : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x150 : Health         : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : Condition      : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SymbolSermirnySwordHoldership : int {
    None   = 0,
    Player = 1,
    Slot   = 2,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::entitymodule::S_DoorThroughDirectionData {
    0x0  : Fragment  : class CryStringT<char>;
    //Getter: WHGame.dll+0x2908688
    get  : Tags      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x20 : DoorAnims : class std::vector<struct wh::entitymodule::S_DoorAnimData,class std::allocator<struct wh::entitymodule::S_DoorAnimData> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_EntityScriptContext>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StalkerPostQuest : int {
    None                      = 0,
    KatherineKilled           = 1,
    HenryKilledWithoutKnowing = 2,
    Resolved                  = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::C_IsPublicEnemy : class wh::rpgmodule::storm::I_Selector {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_SkillTeacher,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_FactionRelationBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SaintAnthonyStreaming : int {
    BeforeAmbush = 0,
    AfterAmbush  = 1,
    AfterQuest   = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasACharacter : class wh::rpgmodule::storm::I_Selector {
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::rpgmodule::C_FactionRelationBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : RelationValue : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zizkaInCertovka : int {
    None                   = 0,
    GoToTavernAfterTour    = 1,
    UseBench               = 2,
    GoToTavernAfterWaiting = 3,
    Done                   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TerasaFightStatus : int {
    None                 = 0,
    Start                = 1,
    BehindCorner         = 2,
    GoingToKomori        = 3,
    Komori               = 4,
    All                  = 5,
    AllWithReinforcement = 6,
    Cover                = 7,
    Done                 = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SearchingForPetr : int {
    None                 = 0,
    FindPetr             = 1,
    GotClueAboutTent     = 2,
    InvestigateTent      = 3,
    HynekMightHelp       = 4,
    HynekPointedToCarts  = 5,
    FoundPetr_Myself     = 6,
    FoundPetr_WithAdvice = 7,
    Failed               = 8,
    Canceled             = 9,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::combatmodule::C_CombatTutorialNode> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ConfrontingNomadObjective : int {
    None       = 0,
    Started    = 1,
    SilentDone = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AdvancedCombatTutorial : int {
    None               = 0,
    Started            = 1,
    GoToTrainingGround = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_WeaponPresetGUID> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_GetModuleVersion> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Prepadeni_backToPtacek : int {
    None                    = 0,
    BackToPtacekAlternative = 1,
    Done                    = 2,
    Aborted                 = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::animationmodule::C_FocusCameraNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemDeliveryHandler* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskAboutArcher : int {
    None                          = 0,
    StartedFromBorut              = 1,
    StartedFromInnkeeperInPritoky = 2,
    UpdatedFromInnkeeperInPritoky = 3,
    SpokeWithInnkeeperInBylany    = 4,
    FoundArcherWithoutHelp        = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_DecisionLabel,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionCarryCorpse* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::vector> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af6e50
enum enum wh::guimodule::E_CutsceneType::Type : unsigned char {
    Fader      = 0,
    FastTravel = 1,
    Ingame     = 2,
    Rendered   = 3,
    SkipTime   = 4,
    TrackView  = 5,
    Text       = 6,
    Credits    = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BohutaTravelsWithErik : int {
    None                     = 0,
    BohutaFollowsErik        = 1,
    BohutaRacesErik          = 2,
    BohutaReachedDestination = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditCampAndAmbush : int {
    Default             = 0,
    BanditCampAndAmbush = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SwordHolder : int {
    None          = 0,
    PickSlot      = 1,
    Player        = 2,
    HracHoZtratil = 3,
    PlaceSlot     = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_Urgency::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressDuelWithMachal : int {
    None              = 0,
    Active            = 1,
    PlayerUnconscious = 2,
    Completed         = 3,
    Aborted           = 4,
};

//size in bytes: 0x240
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionInGenerated : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction, class wh::xgenaimodule::NPCState::C_UnstanceActionIn {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
    0x218 : FragmentName                       : class CryStringT<char>;
    0x220 : Tags                               : class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > >;
    0x238 : TargetStance                       : enum wh::entitymodule::E_StanceCategory::Type;
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::conceptmodule::C_RandomElement : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_ElementAtBase {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Value        : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StatecnyCivil : int {
    None                                = 0,
    CekaniNaPrilezitost                 = 1,
    JdeNaMistoACekaJestliSeHracPriblizi = 2,
    CivilBeziSeSchovat                  = 3,
    CivilObihaLes                       = 4,
    CivilBeziZpet                       = 5,
    Hotovo                              = 6,
    Aborted                             = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_RandomEventBase* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class std::vector<double,class std::allocator<double> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRewardFromInnkeeper : int {
    None                         = 0,
    BeforeReceivingReward        = 1,
    GotMoneyAndInfoAboutPodsemin = 2,
    GotMoneyAndInfoAboutChampion = 3,
    Aborted                      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b20b08
enum enum wh::rpgmodule::E_RelationTag : int {
    Schadenfreude = 0,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulPresetOverride> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<double>* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class CryStringT<char>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DesperateDefenseAsBohuta_SilentCompletionObjective : int {
    None   = 0,
    Active = 1,
    Done   = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af6e00
enum enum wh::xgenaimodule::activitysystem::E_DogCompanionMode::Type : unsigned char {
    Wait       = 0,
    Follow     = 1,
    Free       = 2,
    Aggressive = 3,
    Search     = 4,
    Hunt       = 5,
    Guard      = 6,
    Ambush     = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BenchCommands : int {
    None            = 0,
    InitialSetup    = 1,
    MoveToSpot      = 2,
    InitialCommands = 3,
    HeimannCommands = 4,
    LipoldCommands  = 5,
    Done            = 6,
    Failed          = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh2FeastPhases : int {
    None                = 0,
    DialogWithCouncil   = 1,
    ZikmundsMonolog     = 2,
    ForcedDialogOnHenry = 3,
    Done                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoudekSPrachem : int {
    None              = 0,
    ChtejiVyhoditDoly = 1,
    UkrastSoudek      = 2,
    MamSoudek         = 3,
    VyhozeneDoly      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_Faction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FortressCrew : int {
    None            = 0,
    Streamed        = 1,
    StreamedAndDead = 2,
    Unstreamed      = 3,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_FactionBaseAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_StanceBy {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bdfe18
enum enum wh::entitymodule::E_HorseState::Type : unsigned char {
    idle           = 0,
    idle2move      = 1,
    move2idle      = 2,
    rear           = 3,
    forcedRear     = 4,
    fastStop       = 5,
    exhausted      = 6,
    jump           = 7,
    bondingSaddle  = 8,
    bondingGround  = 9,
    headNoResponse = 10,
    headHitting    = 11,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_RiderActionIn* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimRequest* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_StanceOn {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_InteractionTriggerAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Shellshock : int {
    None       = 0,
    Shellshock = 1,
    Done       = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_BuffAITag,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToBailiff : int {
    None          = 0,
    TalkToBailiff = 1,
    Done          = 2,
    Failed        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MasterstrikeTutorial : int {
    None            = 0,
    Phase0_starting = 1,
    Phase0_active   = 2,
    Phase1_starting = 3,
    Phase1_active   = 4,
    Phase2_starting = 5,
    Phase2_active   = 6,
    Phase3_starting = 7,
    Phase3_active   = 8,
    Done            = 9,
    Failed          = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeItemSetAsideEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BohutaMigration : int {
    InCertovka  = 0,
    InSuchdol   = 1,
    InRuthardka = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIApse {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_EquipmentManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Assault : int {
    None    = 0,
    Success = 1,
    Fail    = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab4798
enum enum wh::conceptmodule::E_ConstraintType : int {
    None  = 0,
    Table = 1,
    Asset = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_BlacksmithRecipeId>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TutorialHasteSkip : int {
    None           = 0,
    SkipPlayerWon  = 1,
    SkipPlayerLost = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::scheduler::E_Aliveness {
};

//size in bytes: 0x100220
//pointer dimension: 0
class wh::rpgmodule::C_SoulList {
    //Getter: WHGame.dll+0x19d6ee0
    get      : SoulCount   : int;
    //Getter: WHGame.dll+0x22e7db0
    get      : PlayerSoul  : class wh::rpgmodule::C_Soul*;
    0x100080 : SoulsByGuid : class std::unordered_map<struct CryGUID,class wh::rpgmodule::C_Soul *,struct std::hash<struct CryGUID>,struct std::equal_to<struct CryGUID>,class std::allocator<struct std::pair<struct CryGUID const ,class wh::rpgmodule::C_Soul *> > >;
    //Getter: WHGame.dll+0xa2d804
    get      : IsPaused    : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BasementGameplay : int {
    None                = 0,
    FocusCameraActive   = 1,
    FocusCameroInactive = 2,
    Done                = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RideOnCartWithGravedigger : int {
    None                 = 0,
    MountCart            = 1,
    RideWithGravedigger  = 2,
    SolveTaskOnCartStop  = 3,
    SpeakWithGravedigger = 4,
    HoleStop             = 5,
    Done                 = 6,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::dialogmodule::data::S_FastForwardRequestForRole : struct wh::dialogmodule::data::S_FastForwardRequest {
    0x8 : Role : struct wh::rpgmodule::S_RoleId;
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::conceptmodule::C_InputDataPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WolvesBehavior : int {
    None                    = 0,
    CombatInterruptPossible = 1,
    Done                    = 2,
    Aborted                 = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::conceptmodule::definition::S_Enumeration {
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_MusicModule* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum falesnaPosadkaQItem : int {
    None       = 0,
    Velitel    = 1,
    Hrac       = 2,
    QuestGiver = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_LockpickingResultTrigger* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitiazerHorseUsage : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get : Role       : class CryStringT<char>;
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionFullBodyAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionFullBodyAnimRequest> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SeriesPaths : int {
    Default             = 0,
    StealthMiseZaJindru = 1,
    ArmyCampPresent     = 2,
    Unstream            = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Sermiri : int {
    None        = 0,
    Start       = 1,
    Konfrontace = 2,
    Zadani      = 3,
    Kradeni     = 4,
    Vyzva       = 5,
    Prijeti     = 6,
    Turnaj      = 7,
    PoTurnaji   = 8,
    Done        = 9,
    Fail        = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObjectiveGetToSecondCourtyard : int {
    None                = 0,
    StreamBridgeBarrier = 1,
    GetOnWall           = 2,
    OpenGate            = 3,
    GetToTheFirstDoor   = 4,
    GetToTheSecondDoor  = 5,
    Done                = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Opratka : int {
    None             = 0,
    MrtvolaMaOpratku = 1,
    HracMaOpratku    = 2,
    NikdoNemaOpratku = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_MonologByMetaroleEventData* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_LeftHandCondition* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_StanceCategory::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3be8bf0
enum enum wh::rpgmodule::E_SkirmishEventType::Type : unsigned char {
    SoulAdded            = 0,
    SoulRemoved          = 1,
    SoulDied             = 2,
    SoulUnconscious      = 3,
    SoulFlee             = 4,
    SoulSurrender        = 5,
    HitTarget            = 6,
    MissedTarget         = 7,
    Attack               = 8,
    Clinch               = 9,
    Combo                = 10,
    MasterStrike         = 11,
    NormalBlock          = 12,
    PerfectBlock         = 13,
    TargetEscaped        = 14,
    TargetChanged        = 15,
    WeaponChanged        = 16,
    AimingOnFriend       = 17,
    SkirmishVictory      = 18,
    CombatIdle           = 19,
    PlayerFlee           = 20,
    WeaponDestroyed      = 21,
    GettingArmedSkirmish = 22,
    PlayerDodge          = 23,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_PositioningStage {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::conceptmodule::C_Level : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xb0
//pointer dimension: 0
struct wh::entitymodule::S_PlayerItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_FunctionBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashContentCodexRecord : class wh::guimodule::C_UIFlashObject {
    0x8  : Id            : class CryStringT<char>;
    0x10 : Name          : class CryStringT<char>;
    0x18 : ContentText   : class CryStringT<char>;
    0x20 : ContentImage  : class CryStringT<char>;
    0x28 : ContentLayout : int;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_BuffTagTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VysetrovaniVrazdySarky : int {
    None              = 0,
    PromluvSiVHospode = 1,
    NajdiTaborUhliru  = 2,
    NajdiSarkuUUhliru = 3,
    PromluvSiSSarkou  = 4,
    Vyreseno          = 5,
    Canceled          = 6,
    Abort             = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_TriggerPort> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::I_ReputationLog {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_stimulusKind : int {
    unknown            = 0,
    aim                = 1,
    alarm              = 2,
    animalAbuse        = 3,
    animalCorpse       = 4,
    combat             = 5,
    corpse             = 6,
    corpseViolation    = 7,
    corpseMissing      = 8,
    criminal           = 9,
    disturbance        = 10,
    dramaticBark       = 11,
    enemy              = 12,
    escalatedTrespass  = 13,
    foul               = 14,
    friskable          = 15,
    friskRefusal       = 16,
    graveRobbing       = 17,
    hit                = 18,
    horseTheft         = 19,
    information        = 20,
    item               = 21,
    kettlePoisoning    = 22,
    lockpick           = 23,
    lyingBody          = 24,
    missingAnimal      = 25,
    missingNpc         = 26,
    murder             = 27,
    nearTrespass       = 28,
    nonAttributedCrime = 29,
    offence            = 30,
    pickpocket         = 31,
    pilloryBreak       = 32,
    playerCompanion    = 33,
    shooter            = 34,
    sound              = 35,
    suspiciousDoor     = 36,
    takedown           = 37,
    theft              = 38,
    threat             = 39,
    trespass           = 40,
    unconsciousBody    = 41,
    unknownShooter     = 42,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulDeathTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum sickState : int {
    Sick         = 0,
    LeavingLevel = 1,
    Healed       = 2,
    Dead         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a2a420
enum enum wh::conceptmodule::E_PortDirection : int {
    None = 0,
    In   = 1,
    Out  = 2,
    Bi   = 3,
};

//size in bytes: 0xf0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_WeaponActionBase : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : Stance               : enum wh::entitymodule::E_StanceCategory::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Initialization : int {
    None        = 0,
    MountDriver = 1,
    MountPlayer = 2,
    FaderOut    = 3,
    Done        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_PhaseItemEventData* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionOutStatic* {
};

//size in bytes: 0x8
//pointer dimension: 1
short* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SadloStreaming : int {
    None                    = 0,
    StreamedZikmunduvTabor  = 1,
    UnstreamedUtokNaMalesov = 2,
    UnstreamedPapezskyLegat = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterArmorStatSub : class wh::guimodule::C_UIFlashObject {
    0x8  : Id    : class CryStringT<char>;
    0x10 : Name  : class CryStringT<char>;
    0x18 : Stab  : float;
    0x1c : Slash : float;
    0x20 : Smash : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum talkToKaterina : int {
    None        = 0,
    BeforeQuest = 1,
    DuringQuest = 2,
    Done        = 3,
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_GameScriptContextPreset> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CatchLegate : int {
    None             = 0,
    StayedNearLegate = 1,
    CaughtLegate     = 2,
};

//size in bytes: 0xc
//pointer dimension: 0
struct wh::rpgmodule::S_StabSlashSmashValue {
    0x0 : Stab  : float;
    0x4 : Slash : float;
    0x8 : Smash : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_Urgency::Type>* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::storm::operation::Add {
};

//size in bytes: 0x8
//pointer dimension: 1
enum wh::game::E_GameMode::Type* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BarkTimer : int {
    None  = 0,
    Tri   = 1,
    Sedm  = 2,
    Deset = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatableAsiDoVezi : int {
    None    = 0,
    Started = 1,
    Updated = 2,
    Done    = 3,
    Fail    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamButcher : int {
    Streamed                  = 0,
    UnstreamedSedmStatecnych2 = 1,
    StreamedSedmStatecnych2   = 2,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_StanceCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8  : RequiredStance          : enum wh::entitymodule::E_StanceCategory::Type;
    0xc  : DataSource              : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : CompareDataSourceObject : bool;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_Punishment {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::I_InteractionTrigger *,class std::allocator<class wh::entitymodule::I_InteractionTrigger *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::I_InteractionTrigger *,class std::allocator<class wh::entitymodule::I_InteractionTrigger *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::conceptmodule::C_ConceptPath,class std::allocator<class wh::conceptmodule::C_ConceptPath> > >* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_DisablePlayerCartDismount> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitiazerHorseUsage* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StulecReagujeNaHrace : int {
    None             = 0,
    VidiHrace        = 1,
    HracUtociNaCenka = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Cameras : int {
    WithoutVillageAttack = 0,
    WithVillageAttack    = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_dialogType : int {
    chat         = 0,
    bark         = 1,
    ingameDialog = 2,
    none         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DesperateDefenseAsBohuta : int {
    None   = 0,
    Quest  = 1,
    Battle = 2,
    Done   = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ExplicitItemPlacedElement : class wh::xgenaimodule::NPCState::I_Element, class wh::xgenaimodule::NPCState::C_ItemSetAsideElement {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SermiriTurnajKola : int {
    None        = 0,
    FirstRound  = 1,
    SecondRound = 2,
    ThirdRound  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ConfiscationTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HeadShotPecha : int {
    None                    = 0,
    Started                 = 1,
    DoneKillPecha           = 2,
    DoneSavePecha           = 3,
    DoneDidNotShot          = 4,
    DoneRefuseKill          = 5,
    DoneConvincedNotToShoot = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ContextPresetOperator<struct wh::rpgmodule::storm::operation::Remove>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WhoWearsHat : int {
    Vlach  = 0,
    Player = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class wh::rpgmodule::I_Soul *>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::questmodule::E_QuestProgress>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JasakInTrosecko : int {
    DefaultStreamed = 0,
    Unstreamed      = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZikmunduvTaborHQDeterrent : int {
    None     = 0,
    Stabbing = 1,
    Trial    = 2,
    Open     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MountActivation_BergovHorse : int {
    NotMountableAfterLevelStart           = 0,
    MountableDuringUkradenyKun            = 1,
    NotMountableAfterUkradenyKunCompleted = 2,
    MountableAfterUkradenyKunFailed       = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_GameReleaseVersion::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::C_ClearContexts : class wh::rpgmodule::storm::I_Operator {

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0xc8
//pointer dimension: 0
struct wh::entitymodule::S_MoneyItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::clothing::C_ElementBase {
};

//size in bytes: 0x130
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimDrawRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum mucirna_prisonerHealthState : int {
    Alive = 0,
    Dying = 1,
    Dead  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
long {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CaveStealthResult : int {
    None          = 0,
    NoInteraction = 1,
    Success       = 2,
    Fail          = 3,
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulCounter> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xd0  : Counter      : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulCounter>*;
    0x110 : Operator     : class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_Operator>*;
    0x150 : Value        : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : OnMatch      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1d0 : OnUnmatch    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x228
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeStanceAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase {
    0x8   : Name                       : class CryStringT<char>;
    0x10  : Urgency                    : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                   : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies       : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                 : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                    : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions        : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : DataSource                 : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1a4 : FromStance                 : enum wh::entitymodule::E_StanceCategory::Type;
    0x1a8 : ToStance                   : enum wh::entitymodule::E_StanceCategory::Type;
    0x1ac : RequiresEqualFromToObjects : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AssetTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum kzik_gateGuardState : int {
    SeePlayerApproaching = 0,
    Escalate             = 1,
    MindPlayer           = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NajdiTabor : int {
    none                     = 0,
    MapaKoupena              = 1,
    MapaUkradena             = 2,
    MapaKoupenaTaborObjeven  = 3,
    MapaUkradenaTaborObjeven = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NavratKHavirum : int {
    None            = 0,
    Active          = 1,
    ActiveSPrazdnou = 2,
    Done            = 3,
    DoneSPrazdnou   = 4,
    NoReward        = 5,
    Canceled        = 6,
    Aborted         = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PopravciMec : int {
    None          = 0,
    HracMaMec     = 1,
    PopravciMaMec = 2,
    NikdoNemaMec  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum fistfigthWithVazoun : int {
    None     = 0,
    Fighting = 1,
    Won      = 2,
    Lost     = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class CSkin : struct ISkin {
};

//size in bytes: 0x30
//pointer dimension: 0
class rttr::detail::metadata {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VezniNaTroKeysAndEquipHoldership : int {
    None                                   = 0,
    AcquiredAllByPlayer                    = 1,
    KeysHandedToKaterina_PlayerHasEquip    = 2,
    KeysHandedToKaterina_EquipHandedToBoys = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_RandomEventFastTravelData* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Inventory *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VictimsOnBackyard : int {
    None     = 0,
    Attacked = 1,
    Saved    = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<class std::shared_ptr<class wh::dialogmodule::data::C_DialogueProp>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NebakovPruzkum_CrossCountryState : int {
    NotStarted                     = 0,
    HeatUpPhaseAtStart             = 1,
    InProgress                     = 2,
    EveryoneFinishedOrTimerExpired = 3,
    PlayerBrokeTheRules            = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatArenaState : int {
    Open   = 0,
    Closed = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WallState : int {
    Default      = 0,
    Disassembled = 1,
    BoardedUp    = 2,
};

//size in bytes: 0x168
//pointer dimension: 0
class wh::rpgmodule::C_ClothingPresetOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul>, class wh::rpgmodule::C_SoulPresetOverride {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Souls          : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xe8  : PriorityEquip  : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x128 : ClothingPreset : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ClothingPresetGUID>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeSamplingCounter<struct wh::rpgmodule::T_WorldTimePolicy>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HealSoldier : int {
    None               = 0,
    Started            = 1,
    DiagnosisDoneGood  = 2,
    DiagnosisDoneBad   = 3,
    CureIsTakingEffect = 4,
    TalkedWithMusa     = 5,
    HealingSuccess     = 6,
    Aborted            = 7,
    CampIsGone         = 8,
    SoldierDied        = 9,
    HealingFail        = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::C_SelectedItemDecision* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_ObjectiveName>* {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoBuff : class wh::guimodule::C_UIFlashObject {
    0x8  : Id                : class CryStringT<char>;
    0x10 : Name              : class CryStringT<char>;
    0x18 : IconId            : class CryStringT<char>;
    0x20 : Type              : int;
    0x24 : PrimaryProgress   : float;
    0x28 : SecondaryProgress : int;
    0x30 : Desc              : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DoorThroughDirectionData* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyRecipeIngredient* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c206d0
enum enum wh::rpgmodule::E_SkirmishEventFlag::Type : unsigned char {
    BarkWaitForGuard = 0,
    BarkInstant      = 1,
    VisiblePort      = 2,
    DeletedPort      = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class CCryName {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab42e8
enum enum wh::entitymodule::E_AmmoLength::Type : unsigned char {
    Short  = 0,
    Medium = 1,
    Long   = 2,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::vector>,class std::map<class CryStringT<char>,class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,struct std::less<class CryStringT<char> >,class std::allocator<struct std::pair<class CryStringT<char> const ,class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > > > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::environmentmodule::C_TimeOfDayProfile* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerHandContent* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zaby_eating : int {
    None       = 0,
    Eat        = 1,
    Transition = 2,
    Vomit      = 3,
    Done       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum pruzkumState : int {
    None               = 0,
    predZadanimHledani = 1,
    SaSCekajiNaHrace   = 2,
    FocusDone          = 3,
    Done               = 4,
    Canceled           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadPriest : int {
    None        = 0,
    Nonlootable = 1,
    Lootable    = 2,
    Done        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableAbortable : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
    Failed    = 3,
    Aborted   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BojMichal : int {
    None           = 0,
    VyzvaPrijata   = 1,
    VyzvaNeprijata = 2,
    BojMichal      = 3,
    BojVyhra       = 4,
    BojProhra      = 5,
    Aborted        = 6,
    Canceled       = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeStanceEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ContainsElement* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemClassDescriptor* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LocateAndDo : int {
    None             = 0,
    Active           = 1,
    ActiveWithMarker = 2,
    Done             = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::game::C_CVarOverrideData* {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::guimodule::C_UIFlashMapPoiMarker : class wh::guimodule::C_UIFlashObject {
    0x8  : Id           : class CryStringT<char>;
    0x10 : Name         : class CryStringT<char>;
    0x18 : Icon         : class CryStringT<char>;
    0x20 : State        : int;
    0x24 : IsFastTravel : bool;
    0x28 : Order        : int;
    0x2c : XPos         : float;
    0x30 : YPos         : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableUpdatable : int {
    None     = 0,
    Active   = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActionSlavedAnimRequest* {
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::rpgmodule::C_CombatHistoryTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name                  : class CryStringT<char>;
    0x18  : RuntimeState          : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                 : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView             : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive              : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Soul1                 : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xd0  : Soul2                 : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x110 : MaxTime               : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x150 : OnCombatHistoryBegins : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringBookBack : int {
    None      = 0,
    Active    = 1,
    Done      = 2,
    Cancelled = 3,
    Aborted   = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_CombatTutorialDomain {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum slamaConfrontation : int {
    none         = 0,
    active       = 1,
    doneKilled   = 2,
    doneArrested = 3,
    doneFreed    = 4,
    canceled     = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIShop {
};

//size in bytes: 0x1a0
//pointer dimension: 0
class wh::environmentmodule::C_MoonEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : UseLongitude : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0  : Longitude    : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x110 : UseLatitude  : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x150 : Latitude     : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PogromQuestProgress : int {
    None                  = 0,
    PathFromRatbore       = 1,
    RunToKuttenberg       = 2,
    ToMotherAndWithMother = 3,
    SynagogueAndFight     = 4,
    Finale                = 5,
    Done                  = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::C_ItemHolder {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeliverThePerfume : int {
    None                = 0,
    NobodyToDeliver     = 1,
    Deliver             = 2,
    Delivered           = 3,
    BeenAtWeddingAnyway = 4,
    Abort               = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailable : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KuttenbergTownHallStates : int {
    Initial             = 0,
    CouncilWithStaff    = 1,
    CouncilWithoutStaff = 2,
    BackToNormal        = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4388
enum enum wh::entitymodule::E_FireOnHitMode::Type : unsigned char {
    None         = 0,
    Fire         = 1,
    MisfireIfLit = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRidOfDregsInRuthardka : int {
    None                  = 0,
    GotoYard              = 1,
    KillThugsAtYard       = 2,
    FirstThugKilledByRoza = 3,
    KillThugAtRozasDoor   = 4,
    KillThugsAtRuthardka  = 5,
    KilledAllThugs        = 6,
};

//size in bytes: 0x130
//pointer dimension: 0
class wh::entitymodule::C_CarryItemPile {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::questmodule::C_Gameplay> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Event_TravelingMerchantState : int {
    None           = 0,
    Story1         = 1,
    Story2         = 2,
    Story3         = 3,
    Story4         = 4,
    Story5         = 5,
    AllStoriesDone = 6,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_CameraAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_crimeLevel : int {
    none     = 0,
    offence  = 1,
    trespass = 2,
    property = 3,
    violent  = 4,
    murder   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MapInteraction : int {
    None        = 0,
    Pickable    = 1,
    Inspectable = 2,
    Done        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InjuredJan : int {
    None        = 0,
    Undiagnosed = 1,
    Diagnosed   = 2,
    Healed      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vineyardExclusiveJob : int {
    None           = 0,
    SpeakToManager = 1,
    FollowManager  = 2,
    DoWork         = 3,
    Done           = 4,
    Fail           = 5,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContextPreset> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LazarDiagnose : int {
    None          = 0,
    Started       = 1,
    BasicSucces   = 2,
    PremiumSucces = 3,
    NoSucces      = 4,
    Failed        = 5,
    Aborted       = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Password : int {
    None    = 0,
    Praha   = 1,
    Koralka = 2,
    Kozy    = 3,
    Vidle   = 4,
    Pivo    = 5,
    Kobyla  = 6,
    Slichta = 7,
    Cabraka = 8,
    Sekera  = 9,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipeIngredient {
    0x8  : IngredientItemId : struct CryGUID;
    0x18 : Quantity         : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Sneaking : int {
    None                = 0,
    BarkFollow          = 1,
    GoThroughReeds_1    = 2,
    SneakingAnimation   = 3,
    GoThroughReeds_2    = 4,
    BarkAboutGuardWoman = 5,
    Sidetrack           = 6,
    RunThroughFreeSpace = 7,
    BarkAfterSidetrack  = 8,
    GoThroughReeds_3    = 9,
    PlayCutscene        = 10,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_BattleEvent {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum findClues : int {
    None       = 0,
    Formation  = 1,
    firstArea  = 2,
    secondArea = 3,
    thirdArea  = 4,
    fourthArea = 5,
    Done       = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bba858
enum enum wh::framework::E_EnumExample::Type : unsigned char {
    First  = 0,
    Second = 1,
    Third  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Pohrbivani : int {
    None       = 0,
    CekaNaSmrt = 1,
    LzePohrbit = 2,
    Pohrbeno   = 3,
    Aborted    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventMemberFunction* {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::rpgmodule::C_SkirmishEventTypeData {
    0x8  : EventType       : enum wh::rpgmodule::E_SkirmishEventType::Type;
    0x18 : BarkingCooldown : float;
    0x38 : BarkingPriority : int;
    0x20 : Roles           : class std::reference_wrapper<class std::vector<class wh::rpgmodule::C_SkirmishEventRole,class std::allocator<class wh::rpgmodule::C_SkirmishEventRole> > >;
    //Getter: WHGame.dll+0x2c3f438
    get  : Flags           : class CryStringT<char>;
};

//size in bytes: 0x1f8
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x140
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimDrawRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimDrawRequest {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitiazerEnableBehaviorForNPC : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get : Role       : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fc78
    get : Behavior   : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MinersAgaintsMarkoltsGroup : int {
    None              = 0,
    Active            = 1,
    MinersWon         = 2,
    MysliborWasKilled = 3,
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::framework::C_SimpleTypesExample {
    0x8  : Bool             : bool;
    0xc  : Int              : int;
    0x10 : UnsignedInt      : unsigned int;
    0x14 : Float            : float;
    0x18 : Double           : double;
    0x48 : Enum             : enum wh::framework::E_EnumExample::Type;
    0x20 : String           : class CryStringT<char>;
    0x28 : StdString        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x4c : Vector3          : struct Vec3_tpl<float>;
    0x58 : Color            : struct Color_tpl<float>;
    //Getter: WHGame.dll+0x19a4780
    get  : ComputedProperty : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmbusherFight : int {
    None              = 0,
    FightOnlyRas      = 1,
    FightRasAndPlayer = 2,
    Done              = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PepikMentioned : int {
    None      = 0,
    Mentioned = 1,
};

//size in bytes: 0x10
//pointer dimension: 0
struct Quat_tpl<float> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp5_ReportToHuntsman : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
    Aborted  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3af6ea0
enum enum wh::entitymodule::E_WeaponEquipSlot : int {
    PrimaryMainHand   = 0,
    PrimaryOffHand    = 1,
    SecondaryMainHand = 2,
    SecondaryOffHand  = 3,
    Oversized         = 4,
    OversizedOff      = 5,
    Torch             = 6,
    Dagger            = 7,
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CombatAutomationsAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_SuccessAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::S_ModInfo* {
};

//size in bytes: 0x130
//pointer dimension: 0
class wh::combatmodule::C_BattleRegistrationEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : SmartObjects : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > >*;
    0xd8 : LinkFilter   : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::playermodule::S_RandomEventOptionSet {
    0x0 : Name    : class CryStringT<char>;
    //Getter: WHGame.dll+0x2dfd604
    get : Options : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIHorseInspect : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_PerkOperator<struct wh::rpgmodule::storm::operation::Add> : class wh::rpgmodule::storm::I_Operator {
    0x8 : ID   : struct CryGUID;
    //Getter: WHGame.dll+0x2c8361c
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashListStatistics : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : Value    : float;
    0x1c : MaxValue : float;
    0x20 : Unit     : unsigned int;
    0x24 : Order    : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TlamaSouboj : int {
    None             = 0,
    SoubojSTlamou    = 1,
    ChatProbehnul    = 2,
    BanditiJsouMrtvi = 3,
    TlamaSeVzdava    = 4,
    TlamaSeVzdal     = 5,
    SoubojUkoncen    = 6,
    HracChceBojovat  = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_HandContextSerializationMode {
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionIdleRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionIdleRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionIdleRequest> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_RandomEventVariantBase> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ladderProgress : int {
    None   = 0,
    Unhide = 1,
    Active = 2,
    Done   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_RandomEventVariantBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MoneyForCenek : int {
    None           = 0,
    GiveCenekMoney = 1,
    CenekGotMoney  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ConstantPort> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HorseParkedCondition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_GenericRandomEvent* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af6f40
enum enum wh::entitymodule::E_CartActorState::Type : unsigned char {
    none            = 0,
    waitingForMount = 1,
    mounting        = 2,
    dismounting     = 3,
    fastDismounting = 4,
    sitting         = 5,
    riensGo         = 6,
    riensStop       = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NajdiAulitze : int {
    None       = 0,
    Active     = 1,
    AulitzDead = 2,
    AulitzLive = 3,
    Canceled   = 4,
};

//size in bytes: 0x98
//pointer dimension: 0
class wh::playermodule::C_RandomEventTagDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::playermodule::S_RandomEventTag,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::playermodule::S_RandomEventTag,class std::allocator<struct wh::playermodule::S_RandomEventTag> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HorseParkedCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8 : Negate : bool;
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimeOfDayState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionOut* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KomarHansCsaba : int {
    None                = 0,
    ChatPoOtevreni      = 1,
    IngameDialog        = 2,
    ChatPoIngameDialogu = 3,
    JdemeSiPovidat      = 4,
    KontrolaCsabaChatu  = 5,
    PovidameSi          = 6,
    Done                = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SkirmishBattlefield : int {
    None          = 0,
    CheckSkirmish = 1,
    StartSkirmish = 2,
    PlayerWon     = 3,
    PlayerLost    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
const __int64* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_UnstanceElement* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_TextCutscene : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
    0x60 : StringName                : class CryStringT<char>;
    0x68 : Duration                  : struct wh::framework::S_TimeSpan;
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::dialogmodule::data::C_DialogueProp {
    0x8  : Name           : class CryStringT<char>;
    0x10 : CopyItemVisual : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableMajka : int {
    None                 = 0,
    OdrezMajku           = 1,
    OdrezMajkuPoProckovi = 2,
    ZvedniMajku          = 3,
    Done                 = 4,
    CanceledMysi         = 5,
    Bonz                 = 6,
    Chycen               = 7,
    Utekl                = 8,
    Nesebral             = 9,
    NekdoUmrel           = 10,
    OlbramUmrel          = 11,
    CanceledOther        = 12,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ObjectProperties* {
};

//size in bytes: 0xc0
//pointer dimension: 0
struct wh::entitymodule::S_DiceBadgeItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0x8  : Type                           : int;
    0xc  : SubType                        : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavetDuelProgress : int {
    None        = 0,
    PreDuelChat = 1,
    Duel        = 2,
    Finished    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3992f58
enum enum wh::rpgmodule::S_SoulQueryContext::E_QueryReason : int {
    Default            = 0,
    BaseValueQuery     = 1,
    LongTermValueQuery = 2,
    DialogSkillCheck   = 3,
    Haggle             = 4,
    Combat             = 5,
    Reward             = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Punishment_damaVNesnazich : int {
    None      = 0,
    Crime     = 1,
    Persuade  = 2,
    Fine      = 3,
    Pillory   = 4,
    Denied_it = 5,
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::entitymodule::S_ItemManipulationAnim {
    0x0 : Fragment : class CryStringT<char>;
    //Getter: WHGame.dll+0x2908688
    get : Tags     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorActionInteractiveScene : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> >, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > >, class wh::entitymodule::C_ActorParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::entitymodule::I_ActorAction> {
};

//size in bytes: 0x2
//pointer dimension: 0
class boost::optional<unsigned char> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavetAgreedWeapon : int {
    None   = 0,
    Sword  = 1,
    Dagger = 2,
    Sabre  = 3,
    Axe    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mikusDeathWhileInjured : int {
    None             = 0,
    Injured          = 1,
    StartFocusCamera = 2,
    Done             = 3,
    Canceled         = 4,
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::entitymodule::C_UseItemTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnUsed       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : Item         : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Item *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelWIthCert : int {
    None     = 0,
    LostDuel = 1,
    WonDuel  = 2,
};

//size in bytes: 0x888
//pointer dimension: 0
class wh::guimodule::C_UIItemSelection : class wh::guimodule::C_UIBase, class wh::framework::I_UIItemSelection {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyCrushableSpecialIngredient,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GreatEscape : int {
    None            = 0,
    Active          = 1,
    DoneStealth     = 2,
    DonePoplach     = 3,
    DoneAlternative = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::entitymodule::S_EquipmentSlotIdWrapper {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateBase<enum wh::framework::E_GameReleaseVersion::Type> > {
};

//size in bytes: 0x8
//pointer dimension: 0
class boost::optional<float> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UILoadingScreen* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpecatorsAudioIntensity : int {
    None         = 0,
    Default      = 1,
    Announcement = 2,
    InFight      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemHealthProvider* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionSkipTime* {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipe {
    0x8  : RecipeId            : int;
    0xc  : BaseMaterial        : enum wh::playermodule::E_AlchemyPotionBaseType::Type;
    0x10 : UIName              : class CryStringT<char>;
    0x18 : UIUsage             : class CryStringT<char>;
    0x20 : UIIcon              : class CryStringT<char>;
    0x48 : Products            : class std::vector<class wh::playermodule::C_AlchemyRecipeProduct,class std::allocator<class wh::playermodule::C_AlchemyRecipeProduct> >;
    0x30 : Ingredients         : class std::vector<class wh::playermodule::C_AlchemyRecipeIngredient,class std::allocator<class wh::playermodule::C_AlchemyRecipeIngredient> >;
    0x60 : Steps               : class std::vector<class wh::playermodule::C_AlchemyRecipeStep,class std::allocator<class wh::playermodule::C_AlchemyRecipeStep> >;
    0x28 : BaseQualityRewardXP : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_EquipmentPresetFilter* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_Tutorial* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasFaction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ProfileStateTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::combatmodule::S_BattleSituation *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mines : int {
    none              = 0,
    active            = 1,
    activeAlternative = 2,
    done              = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourToSemin : int {
    None                                = 0,
    FastForwardHasek                    = 1,
    GettingOutOfStables                 = 2,
    MovingToGatherSoldiers              = 3,
    WaitingForSoldiersForming           = 4,
    RidingToFieldsOutsideCastle         = 5,
    RidingToFieldsOutsideCastleWithChat = 6,
    RidingToSemin                       = 7,
    RidingCloserToSemin                 = 8,
    RidingEvenCloserToSemin             = 9,
    ApproachingSemin                    = 10,
    Done                                = 11,
    Aborted                             = 12,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_ScriptCommand* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulSkirmishTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UseOnce : int {
    NotUsed = 0,
    Used    = 1,
};

//size in bytes: 0x70
//pointer dimension: 0
struct TParticleCounts<float> : struct TContainerCountsBase<float> {
    0x0  : components : struct TElementCounts<float>;
    0x10 : spawners   : struct TElementCounts<float>;
    0x20 : particles  : struct TContainerCountsBase<float>::ParticleCounts;
    0x44 : pixels     : struct TElementCounts<float>;
    0x54 : emitters   : struct TElementCounts<float>;
    0x64 : volume     : struct TParticleCounts<float>::VolumeStats;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefeatRadmilInDuel : int {
    None                   = 0,
    Started                = 1,
    CompletedWhenPlayerWon = 2,
    FailedWhenPlayerLost   = 3,
    FailedWhenQuestFailed  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChovaniPtackaPriTabore : int {
    None                        = 0,
    ChatOnPlayerBeforeTheAttack = 1,
    WatchCamp                   = 2,
    AttackPoachers              = 3,
    ChatOnPlayerAfterTheAttack  = 4,
    Finished                    = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LichtGoForDocuments : int {
    None              = 0,
    GoToOffice        = 1,
    DialogueWithHenry = 2,
    SearchDocuments   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HibernaceVlasaku : int {
    None      = 0,
    Gate      = 1,
    Courtyard = 2,
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::definition::C_NodeDefinition : class wh::conceptmodule::definition::I_NodeDefinition {
    //Getter: WHGame.dll+0x2547990
    get  : TypeName           : class CryStringT<char>;
    0x10 : Name               : class CryStringT<char>;
    0x18 : Description        : class CryStringT<char>;
    0x20 : Category           : class CryStringT<char>;
    0x28 : Style              : enum wh::conceptmodule::E_NodeStyle;
    0x60 : AutoTriggerSupport : bool;
    0x30 : Properties         : class std::vector<struct wh::conceptmodule::definition::I_NodeDefinition::S_PropertyDef,class std::allocator<struct wh::conceptmodule::definition::I_NodeDefinition::S_PropertyDef> >;
    //Getter: WHGame.dll+0x25476d8
    get  : Ports              : class std::vector<class std::shared_ptr<class wh::conceptmodule::definition::I_PortDefinition>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::definition::I_PortDefinition> > >;
    0x48 : Assets             : class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObjectiveUpdateDone : int {
    None    = 0,
    Updated = 1,
    Done    = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BasanSwordsInChest : int {
    NoSword        = 0,
    SingleSword    = 1,
    MultipleSwords = 2,
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::entitymodule::C_Hole {
    //Getter: WHGame.dll+0x29087e8
    get : IsDug : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AntonAfterQuestFail : int {
    None                = 0,
    FailWithAntonOnBack = 1,
    TimerIsRunning      = 2,
    CheckDistance       = 3,
    Done                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EnemyGroupFight : int {
    None        = 0,
    WeaponSetup = 1,
    Wait        = 2,
    Fight       = 3,
    Done        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightWithAmbushers : int {
    None                     = 0,
    WaitingForPlayerDistance = 1,
    Fighting                 = 2,
    DefendersWon             = 3,
    AmbushersWon             = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::soundmodule::S_SkaldAtlTriggerId>* {
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::xgenaimodule::C_SmartEntityDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_SmartEntityTemplate,class std::list> {
    0x30 : Objects : class std::reference_wrapper<class std::list<struct wh::xgenaimodule::S_SmartEntityTemplate,class std::allocator<struct wh::xgenaimodule::S_SmartEntityTemplate> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum baraPlayerDistance : int {
    Far           = 0,
    GettingAway   = 1,
    GettingCloser = 2,
    Close         = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_DeadBodyRegistrationEffect* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff1f0
enum enum wh::dialogmodule::E_DialogueCameraTypeOverride::Type : unsigned char {
    NoOverride = 0,
    Medium     = 1,
    CloseShot  = 2,
    Closeup    = 3,
    Master     = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemsToReturnCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemHolder *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WhereWasMessSeen : int {
    None           = 0,
    SeenUpstairs   = 1,
    SeenDownstairs = 2,
    SeenBoth       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BohutaTravelsToErik : int {
    None                     = 0,
    BohutaStartedTravelling  = 1,
    BohutaGotToNebakovRavine = 2,
    BohutaGotNearErik        = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::I_FactionManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdated2Failable : int {
    None               = 0,
    Active             = 1,
    UpdateTarget       = 2,
    UpdateSackOnGround = 3,
    UpdateSource       = 4,
    Done               = 5,
    Aborted            = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_RandomEventTag* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4108
enum enum wh::xgenaimodule::scheduler::E_Weather::Type : unsigned char {
    Default = 0,
    Rain    = 1,
    Sun     = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AddFactionRelationWithinArray> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CartProgressPogrom : int {
    None              = 0,
    PlayerSeatEnabled = 1,
    RideActive        = 2,
    Done              = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::E_ValidationMode {
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::vector>,class std::unordered_map<class CryStringT<char>,class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,struct std::hash<class CryStringT<char> >,struct std::equal_to<class CryStringT<char> >,class std::allocator<struct std::pair<class CryStringT<char> const ,class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial> > > > > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NajdiPoklad : int {
    None                           = 0,
    Active                         = 1,
    KoupenaMapaComplete            = 2,
    UkradenaMapaComplete           = 3,
    KoupenaMapaKrizanMrtvyComplete = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsInChangedEquipment : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MigrationMenhartUndArne : int {
    EmperorCharlesTavern   = 0,
    TavernOutsideKutnaHora = 1,
    FencingHall            = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WolframStreaming : int {
    InitialStreamed                   = 0,
    StreamedDebug                     = 1,
    UnstreamedDebug                   = 2,
    StreamedErik                      = 3,
    UnstreamedBattleOblehaniSuchdole  = 4,
    StreamedNonBattleOblehaniSuchdole = 5,
    UnstreamedOptionalBattleHladAZmar = 6,
    StreamedAfterBattleHladAZmar      = 7,
    UnstreamedStealthMise             = 8,
    StreamedOptionalBattleFinale      = 9,
    UnstreamedEndGame                 = 10,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_UnstanceTransitionData,class std::vector> {
};

//size in bytes: 0x1c
//pointer dimension: 0
struct wh::animationmodule::JointPoseMorphData::S_JointDelta {
    //Getter: WHGame.dll+0x19a0470
    get  : Name   : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x4  : DeltaT : struct Vec3_tpl<float>;
    0x10 : DeltaR : struct Ang3_tpl<float>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_ClothingFeature* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BeforeBattle : int {
    None                 = 0,
    MoveToPalisadePhase1 = 1,
    MoveToPalisadePhase2 = 2,
    ZizkaMovesToPalisade = 3,
    BattleStarts         = 4,
    Done                 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DiceResult : int {
    None = 0,
    Won  = 1,
    Lost = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TomasSwordHoldership : int {
    None             = 0,
    Original         = 1,
    Copy             = 2,
    GotRidOfHisSword = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::C_AchievementReward : class wh::rpgmodule::I_Reward {
    0x8 : Achievement : class CryStringT<char>;
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::guimodule::C_CutsceneDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::guimodule::I_Cutscene>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::guimodule::I_Cutscene>,class std::allocator<class std::shared_ptr<class wh::guimodule::I_Cutscene> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum PatrolType : int {
    ToEndPoint   = 0,
    BackAndForth = 1,
    Loop         = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ActivePlayer : int {
    Bohuta = 0,
    Henry  = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::animationmodule::JointPoseMorphData::S_JointDelta* {
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::entitymodule::clothing::C_Head : class wh::entitymodule::clothing::C_Component {
    0x8  : Name                          : class CryStringT<char>;
    0x10 : Race                          : class std::optional<enum wh::entitymodule::E_Race::Type>;
    0x18 : Gender                        : class std::optional<enum wh::entitymodule::E_ActorGender>;
    0x20 : FilePath                      : class CryStringT<char>;
    //Getter: WHGame.dll+0x2830820
    get  : HidingGroups                  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50 : Elements                      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase> > > >;
    0x68 : Features                      : class std::reference_wrapper<class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> > >;
    //Getter: WHGame.dll+0x2830920
    get  : Morphs                        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x80 : DerivedComponents             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    0x98 : RepresentativeUberlodClothing : class CryStringT<char>;
    //Getter: WHGame.dll+0x19bc240
    get  : SourceForUberlodPart          : class CryStringT<char>;
    0xd8 : DistributionWeight            : float;
    //Getter: WHGame.dll+0x2830964
    get  : Paleness                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830a24
    get  : Roughness                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x283051c
    get  : Age                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VagabondStatus : int {
    None                        = 0,
    AtLeastOneAliveAndConscious = 1,
    AtleastOneDead              = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HungerDespairBuffStatus : int {
    None     = 0,
    Morale   = 1,
    Dismoral = 2,
    Finished = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::rpgmodule::S_DocumentRarity {
    0x0 : Name         : class CryStringT<char>;
    0x8 : XPMultiplier : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_StanceElement* {
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::xgenaimodule::scheduler::S_SchedulerLink {
    0x10 : Parameters          : struct wh::xgenaimodule::scheduler::S_SchedulerLinkParameters;
    0x8  : PositioningDelegate : unsigned __int64;
    //Getter: WHGame.dll+0x3327f34
    get  : TargetGuid          : unsigned __int64;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_OutfitId {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ConstantInterfacePort> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasRole : class wh::rpgmodule::storm::I_Selector {
    0x8 : name : struct wh::rpgmodule::S_RoleId;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stavPopohaneni : int {
    None           = 0,
    popohnani1walk = 1,
    popohnani1talk = 2,
    popohnani2walk = 3,
    popohnani2talk = 4,
    popohnani3walk = 5,
    popohnani3talk = 6,
    finalWalk      = 7,
    finalTalk      = 8,
    done           = 9,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_AssetTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TellJanLaszloIsDead : int {
    None               = 0,
    TellJanAboutLaszlo = 1,
    ToldJanAboutLaszlo = 2,
    Canceled           = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_StatWrapper> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x130
//pointer dimension: 0
class wh::guimodule::C_PlayTrackView : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : CutsceneHolder : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_CutsceneHolder *>*;
    0xd0 : OnFinished     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab40b8
enum enum wh::xgenaimodule::NPCState::E_UnknownWeaponSetMode::Type : unsigned char {
    NotSupported                  = 0,
    AllowItemsFromChangeEquipment = 1,
    AllowItemsFromInventory       = 2,
};

//size in bytes: 0x68
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartBehaviorTemplate {
    0x60 : Name                         : class CryStringT<char>;
    0x8  : TreeLocation                 : struct wh::xgenaimodule::S_TreeLocation;
    0x18 : MaxInstances                 : int;
    0x1c : InitialState                 : enum wh::xgenaimodule::E_SmartBehaviorState::Type;
    //Getter: WHGame.dll+0x139fd2c
    get  : Inboxes                      : class std::vector<struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_SerializedInboxTemplate,class std::allocator<struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_SerializedInboxTemplate> >;
    //Getter: WHGame.dll+0x31f7de8
    get  : Resource                     : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x31f7dd4
    get  : PreventsMonsterLod           : class boost::optional<bool>;
    //Getter: WHGame.dll+0x31f7dac
    get  : HibernateInMonsterLod        : class boost::optional<bool>;
    //Getter: WHGame.dll+0x31f7dc0
    get  : PostponeByPlayerInMonsterLod : class boost::optional<bool>;
    //Getter: WHGame.dll+0x31f7e18
    get  : SkipMLODMove                 : class boost::optional<bool>;
    //Getter: WHGame.dll+0x1822a54
    get  : NavigationInfo               : struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_NavigationInfo*;
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::entitymodule::C_DisableAlchemyTable : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : AlchemyTables : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_AlchemyTable *,class std::allocator<class wh::entitymodule::C_AlchemyTable *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinaleSKrizanem : int {
    None                = 0,
    Active              = 1,
    FistFightSKrizanem  = 2,
    KrizanVraciPenize   = 3,
    KrizanNevraciPenize = 4,
    Aborted             = 5,
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_ActionFullBodyAnimRequestImpl<struct wh::entitymodule::S_ActionIdleRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionIdleRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionIdleRequest>, struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionIdleRequest> {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemFood : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemDestructible {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Health           : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : DecayTime        : float;
    0x5c : NutritionBenefit : float;
    0x60 : RefreshBenefit   : float;
    0x64 : HealthBenefit    : float;
    0x6c : AlcoholContent   : float;
    0x68 : Satiety          : float;
    0x70 : BuffName         : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a5e6b0
enum enum wh::entitymodule::C_InventoryPreset::E_GeneratorMode::Type : unsigned char {
    All            = 0,
    OneChild       = 1,
    AmountCount    = 2,
    AmountFraction = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskTanner : int {
    None           = 0,
    Started        = 1,
    UpdatedOnClues = 2,
    Done           = 3,
    Failed         = 4,
    Aborted        = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ItemSetAsideElement* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct SVClothParams* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_AnimCharAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelInsideHouse : int {
    None       = 0,
    Combat     = 1,
    Bark       = 2,
    Hug        = 3,
    LeaveHouse = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ObjectProperties> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Level* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_ClothingConfig,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Select* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum postTrialFightBehav : int {
    None       = 0,
    StepanDead = 1,
    GrozavDead = 2,
    Done       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp4_Tracks : int {
    None                     = 0,
    Started                  = 1,
    UpdatedOnMiller          = 2,
    UpdatedOnFireworkshopers = 3,
    Done                     = 4,
    Failed                   = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_EffectControlledItem* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_EntityContextTrigger* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::guimodule::E_ConceptMarkerType::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::playermodule::C_ManualRandomEvent>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaHansDialog : int {
    None                  = 0,
    KubenkaLookingForHans = 1,
    KubenkaTalkingToHans  = 2,
    Done                  = 3,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemSkillbook : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemDocument {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : IsNew            : bool;
    0x58 : BookLength       : float;
    0x5c : Progress         : float;
    0x60 : RequiredSkill    : class CryStringT<char>;
    0x68 : SkillLevel       : int;
    0x6c : CurrSkillLevel   : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum buresState : int {
    Alive          = 0,
    DeadBeforeMint = 1,
    DeadInMint     = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct S_TriggerEffectCommandData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseContests_ForcedProgression : int {
    None            = 0,
    FirstTrackDone  = 1,
    SecondTrackDone = 2,
    ThirdTrackDone  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithRecipe* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Library* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum prepadeniNaCeste : int {
    None           = 0,
    Started        = 1,
    DoneViolent    = 2,
    DoneNonViolent = 3,
    Canceled       = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a898
enum enum wh::xgenaimodule::E_CheckEntityContextType::Type : unsigned char {
    All = 0,
    Any = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CartPlayerSeat : int {
    Back  = 0,
    Front = 1,
};

//size in bytes: 0x1d8
//pointer dimension: 0
class wh::entitymodule::C_ActorMountedTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorMountState::Type> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnMount      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnDismount   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x190 : Horse        : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseBase {

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_GroupCombinationNavMeshId* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Pokladnice : int {
    Full      = 0,
    HalfEmpty = 1,
    Empty     = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AcquireHorseObjective : int {
    None                        = 0,
    Started                     = 1,
    UpdatedTourneyWon           = 2,
    UpdatedMustSteal            = 3,
    Done                        = 4,
    DoneStolen                  = 5,
    UpdatedDismountNotDelivered = 6,
    Abort                       = 7,
    FailedHorseDied             = 8,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::questmodule::C_QuestManager : class wh::conceptmodule::C_NodeManager {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::NPCState::S_StanceAnimData* {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::rpgmodule::C_ProxyCounter<int> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_InputTriggerPort> {
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_GameScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xb0
//pointer dimension: 0
class wh::rpgmodule::C_NPCFactionNode : class wh::rpgmodule::C_FactionBase {
    //Getter: WHGame.dll+0x2bdbb9c
    get : PlayerRenown : float;
    //Getter: WHGame.dll+0x1ede058
    get : Name         : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : UIName       : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddb50
    get : NumMembers   : unsigned __int64;
    //Getter: WHGame.dll+0x1eddb90
    get : Parent       : class std::shared_ptr<class wh::rpgmodule::C_Faction>;
    //Getter: WHGame.dll+0x1ede058
    get : Name         : class CryStringT<char>;

    //non-vtable method: WHGame.dll+0xffff82117d8bdf80
    PlayerReputation( bool, bool );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ClothingPresetGUID>* {
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::rpgmodule::C_FactionVisibility : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd0 : Visibility   : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Faction      : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_FactionDefinitionID>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::I_Selector* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableDoubleDone : int {
    none      = 0,
    started   = 1,
    done1     = 2,
    done2     = 3,
    cancelled = 4,
};

//size in bytes: 0x138
//pointer dimension: 0
class wh::xgenaimodule::C_SetEntityContextPreset : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_EntityScriptContextPreset> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Preset       : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContextPreset>*;
    0xe0 : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::shopmodule::C_AddShopDefaultItem* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_ActorState {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3cf8
enum enum wh::rpgmodule::E_TimerState::Type : unsigned char {
    Stopped  = 0,
    Running  = 1,
    Finished = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StolenAmulet : int {
    None                = 0,
    TakeAmuletFromVajda = 1,
    GiveAmuletToMarika  = 2,
    AmuletGivenToMarika = 3,
    Failed              = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_DisableMinigameEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ConvincingHermit : int {
    None             = 0,
    ConsultInnkeeper = 1,
    TalkToHermit     = 2,
    HermitConvinced  = 3,
    HermitDead       = 4,
    Abort            = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<struct wh::entitymodule::S_ItemClass>,class std::vector> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::soundmodule::S_SkaldAtlRtpcId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::definition::I_NodeDefinition {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Assert* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_OutputTriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_TriggerPort, class wh::conceptmodule::C_ActiveTriggerPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkaAndHorseStreamingKutnohorsko : int {
    StreamedDebug               = 0,
    UnstreamedDebug             = 1,
    StreamedInitial             = 2,
    Unstreamed_PosledniPomazani = 3,
    Streamed_PosledniPomazani   = 4,
    Unstreamed_HladAZmar        = 5,
    Streamed_HladAZmar          = 6,
    Unstreamed_StealthMise      = 7,
    Stream_Finale               = 8,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::C_SelectedItemDecision : class wh::xgenaimodule::I_StoredDecision {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SearchingForLaszloFarkas : int {
    None                  = 0,
    KnowsNothing          = 1,
    SpokeWithSomebody     = 2,
    SpokeWithCumanSoldier = 3,
    FoundLaszloFarkas     = 4,
    Failed                = 5,
    Canceled              = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHelpOverlay* {
};

//size in bytes: 0x1418
//pointer dimension: 0
class C3DEngine : struct I3DEngine {
    //Getter: WHGame.dll+0x1ee2714
    get : HLodManager             : class wh::I_HLodManager*;
    //Getter: WHGame.dll+0x19fbe10
    get : MatMan                  : class CMatMan*;
    //Getter: WHGame.dll+0x19fbe60
    get : ObjManager              : class CObjManager*;
    //Getter: WHGame.dll+0x1ee2720
    get : ParticleManager         : struct IParticleManager*;
    //Getter: WHGame.dll+0x19fbf40
    get : RenderingCameraPosition : struct Vec3_tpl<float>;
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_ObjectProperties : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : DeclaringType : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ShowPlayerChatActionHintEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseArchery_Result : int {
    None = 0,
    Won  = 1,
    Tie  = 2,
    Lost = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3c47948
enum enum wh::guimodule::E_CutsceneProfileType::Type : int {
    Default = 1,
    XBOX    = 2,
    PS5     = 4,
    Console = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::game::S_LevelSwitching* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemSetAsideCondition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_PerkOperator<struct wh::rpgmodule::storm::operation::Remove>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::combatmodule::C_BattleRegistrationEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuskoBehavior : int {
    None                        = 0,
    LookingForRoman_inArea      = 1,
    LookingForRoman_outsideArea = 2,
    Sitting                     = 3,
    Finished                    = 4,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AddBuffElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AsiDoVeziAxeHoldership : int {
    None       = 0,
    Player     = 1,
    QuestGiver = 2,
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_PlaceAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasName* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::C_SaveGameDescription::C_DLCDescription* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::scheduler::E_Weather {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7acf8
enum enum wh::dialogmodule::data::E_ItemAttachmentHand::Type : unsigned char {
    Left  = 0,
    Right = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum questObjectiveHealing : int {
    None            = 0,
    DiagnosisActive = 1,
    HealingActive   = 2,
    HealingDone     = 3,
    Canceled        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StringsAssignment : int {
    None           = 0,
    AboutStrings   = 1,
    HuntsmanIsDead = 2,
    AboutPayment   = 3,
    NoMoreTopics   = 4,
    Failed         = 5,
    Aborted        = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KunzlinMigration : int {
    Ruthardka = 0,
    Suchdol   = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorCarryCorpseTrigger> {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasAttribute : class wh::rpgmodule::storm::I_Selector {
    0x10 : skill    : enum wh::rpgmodule::E_SoulProperty::Type;
    0x10 : stat     : enum wh::rpgmodule::E_SoulProperty::Type;
    0x8  : minValue : float;
    0xc  : maxValue : float;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasAFaction : class wh::rpgmodule::storm::I_Selector {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIMenuChoice* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToPtacekBeforeAttack : int {
    None                                     = 0,
    Started                                  = 1,
    Completed                                = 2,
    FailedPlayerSkippedDialogAndAttackedCamp = 3,
    Aborted                                  = 4,
    AbortedPlayerCompletedZikmundCamp        = 5,
    FailedPlayerDidntFollowPtacek            = 6,
    FailPlayerDeclinedToFight                = 7,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashMapLabel : class wh::guimodule::C_UIFlashObject {
    0x8  : Id          : class CryStringT<char>;
    0x10 : Name        : class CryStringT<char>;
    0x18 : X           : float;
    0x1c : Y           : float;
    0x20 : Reputation  : int;
    0x24 : WantedLevel : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StateOfMillerFamilly : int {
    EverybodyAlive = 0,
    SomebodyDied   = 1,
    EverybodyDied  = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::framework::S_DerivedExampleNode : struct wh::framework::S_BaseExampleNode {
    0x8  : BaseContent    : class CryStringT<char>;
    0x10 : DerivedContent : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HungerDespairNonQuestItem : int {
    None    = 0,
    InWorld = 1,
    Player  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::Haste::C_HasteTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::I_Area *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditHunt : int {
    None                               = 0,
    Started                            = 1,
    AmbsuhedByBandit                   = 2,
    LeftAmbush                         = 3,
    FoundBanditInCamp                  = 4,
    DealWithBanditBailiff              = 5,
    DealWithBanditCaptain              = 6,
    FightWithBandit                    = 7,
    KilledBandit                       = 8,
    SpokeWithBailiffAboutDeadBandit    = 9,
    RefuseToHuntBanditBailiff          = 10,
    SpokeWithBailiffAboutNotDeadBandit = 11,
    LiedToBailiffAboutNotDeadBandit    = 12,
    SpokeWithCaptainAboutDeadBandit    = 13,
    RefuseToHuntBanditCaptain          = 14,
    SpokeWithCaptainAboutNotDeadBandit = 15,
    LiedToCaptainAboutNotDeadBandit    = 16,
    Aborted                            = 17,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemShorts : int {
    None    = 0,
    Francek = 1,
    Player  = 2,
    Deleted = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::game::C_LevelDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::game::C_LevelData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::game::C_LevelData,class std::allocator<class wh::game::C_LevelData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIHudMask {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::entitymodule::clothing::C_Body* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum keyToMinterJail : int {
    None            = 0,
    SecretMintTable = 1,
    Player          = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Function>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulPresetOverride* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NegotiateWithWoodcuttersLeader : int {
    None                = 0,
    NegotiateWithLeader = 1,
    SettledWithLeader   = 2,
    Failed              = 3,
    Aborted             = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasNameNumberModulo : class wh::rpgmodule::storm::I_Selector {
    0x8 : divisor : int;
    0xc : result  : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MigrationStatesSamuel : int {
    JewishQuarterKutnaHora    = 0,
    CertovkaZikmunduvTabor    = 1,
    SuchdolPapezskyLegat      = 2,
    RuthardkaPapezskyLegat    = 3,
    SuchdolAfterPapezskyLegat = 4,
    CertovkaFinale            = 5,
};

//size in bytes: 0x50
//pointer dimension: 0
struct wh::entitymodule::S_ActorActionStandupQueryData : struct wh::entitymodule::S_ActionQueryData {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b9d5d0
enum enum wh::playermodule::E_AlchemyState::Type : unsigned char {
    E_GS_INIT              = 0,
    E_GS_EXACT_POSITIONING = 1,
    E_GS_IDLE              = 2,
    E_GS_MORTAR            = 3,
    E_GS_READING           = 4,
    E_GS_DISTILLATION      = 5,
    E_GS_CLEANUP_REQUEST   = 6,
    E_GS_CLEANING          = 7,
    E_GS_ENDED             = 8,
    E_GS_LAST              = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingMenhart : int {
    StreamedInitial      = 0,
    UnstreamedSermiriEnd = 1,
    StreamedDebug        = 2,
    UnstreamedDebug      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_HelmetItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SeriesQuestPhases : int {
    PrijezdNaSuchdol_PrvniDenVecer          = 0,
    PrijezdNaSuchdol_DruhyDenRano           = 1,
    OpenWorld_InGame                        = 2,
    PapezskyLegat_Lazaret                   = 3,
    PapezskyLegat_ClosedLazaret             = 4,
    PapezskyLegat_BreakAtRuthardka          = 5,
    Erik_Phase1                             = 6,
    Erik_Phase2                             = 7,
    Erik_Phase3                             = 8,
    OblehaniSuchdole_Battle                 = 9,
    OblehaniSuchdole_Quest                  = 10,
    OblehaniSuchdole_NightAttack1           = 11,
    OblehaniSuchdole_NightAttack2           = 12,
    RutinaAVypad_BeforeTorching             = 13,
    RutinaAVypad_AfterTorching              = 14,
    HladAZmar_GatheringFood                 = 15,
    HladAZmar_GodwinsSermon                 = 16,
    HladAZmar_FrontAttack                   = 17,
    HladAZmar_FrontAttackAfterTower         = 18,
    HladAZmar_PreparingToLeave              = 19,
    StealthMiseZaJindru_barnClosed          = 20,
    StealthMiseZaJindru_barnOpened          = 21,
    ZoufalaObranaZaBohutu_DrinkingWithCapon = 22,
    ZoufalaObranaZaBohutu_Awakening         = 23,
    ZoufalaObranaZaBohutu_Battle            = 24,
    Finale_Battle1                          = 25,
    Finale_Battle2                          = 26,
    Finale_FinalWithTreasure                = 27,
    Finale_FinalWithoutTreasure             = 28,
    OpenWorld_EndGame                       = 29,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::C_ClothingConfigDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_ClothingConfig,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ClothingConfig,class std::allocator<struct wh::entitymodule::S_ClothingConfig> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_TemplatedNode> {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::guimodule::C_CreditsCutscene : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
    0x61 : Type                      : enum wh::E_CreditsType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NajdiTruhlicku : int {
    None           = 0,
    NajdiTruhlicku = 1,
    Naseltruhlicku = 2,
    HracUtekl      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LouceniSeSarou : int {
    None                           = 0,
    MuzesMluvitSeSarou             = 1,
    PromluvilJsemSeSarou           = 2,
    PromluvilJsemSeSarouAOstatnima = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrayingPhase : int {
    None          = 0,
    BeforeBarking = 1,
    Barking       = 2,
    Praying       = 3,
    Done          = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_EquipmentPart {
    0x0 : Id   : unsigned int;
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::game::C_CVarOverrideDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::game::C_CVarOverrideData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::game::C_CVarOverrideData,class std::allocator<class wh::game::C_CVarOverrideData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditChatTopic : int {
    TurnAndLeave   = 0,
    CountingToTen  = 1,
    AreYouLost     = 2,
    ForgetYouSawUs = 3,
    ThisIsOurPlace = 4,
    CutYouUp       = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af7120
enum enum wh::combatmodule::E_CombatSlotId::Type : unsigned char {
    Undefined        = 0,
    PerfectBlock     = 1,
    Riposte          = 2,
    Combo            = 3,
    SyncPerfectBlock = 4,
    MasterStrike     = 5,
    Block            = 6,
    Dodge            = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorsePromenade : int {
    None      = 0,
    Started   = 1,
    Paused    = 2,
    Failed    = 3,
    Completed = 4,
    Aborted   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mapToSecretSmelter : int {
    None   = 0,
    Vokrak = 1,
    Player = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NegotiationResult : int {
    None                              = 0,
    OldrichKilledPavlena_NoTrialog    = 1,
    OldrichKilledPavlena_Offscreen    = 2,
    PavlenaKilledOldrich_AfterTrialog = 3,
    OldrichKilledPavlena_AfterTrialog = 4,
    PlayerKilledPavlena               = 5,
    PlayerKilledOldrich               = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum weaponSelection_offHand : int {
    anything               = 0,
    emptyHand              = 1,
    specifiedByItemClassId = 2,
    type_shield            = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_Component* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_CutsceneHolder *>* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_ItemAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name           : class CryStringT<char>;
    0x10 : Target         : class CryStringT<char>;
    //Getter: WHGame.dll+0x262b7d8
    get  : ItemClassGuids : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3bba030
enum enum wh::entitymodule::E_ItemCategory : int {
    Misc               = 0,
    MeleeWeapon        = 1,
    MissileWeapon      = 2,
    Ammo               = 3,
    Armor              = 4,
    Food               = 5,
    Money              = 6,
    Document           = 8,
    CraftingMaterial   = 9,
    Herb               = 10,
    AlchemyBase        = 11,
    NPCTool            = 12,
    Ointment           = 13,
    Poison             = 14,
    Die                = 15,
    DiceBadge          = 7,
    Helmet             = 16,
    Key                = 17,
    KeyRing            = 18,
    PlayerItem         = 25,
    EquippableItem     = 26,
    Weapon             = 27,
    ConsumableItem     = 28,
    QuickSlotContainer = 19,
    Hood               = 29,
    Invalid            = -1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_PerkOperator<struct wh::rpgmodule::storm::operation::Add>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::I_ConceptScopeHelper {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::entitymodule::clothing::S_UberlodQuery {
    0x0 : Genderace  : struct wh::entitymodule::S_Genderace;
    0x8 : Components : class boost::container::flat_set<class wh::entitymodule::clothing::C_Component const *,struct std::less<class wh::entitymodule::clothing::C_Component const *>,void>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum komarWeaponPreset : int {
    SedmStatecnych2     = 0,
    UtokNaMalesovBattle = 1,
    UtokNaMalesovEnd    = 2,
    EndSedmStatecnych2  = 3,
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::entitymodule::C_InventoryPresetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::C_InventoryPreset>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::C_InventoryPreset>,class std::allocator<class std::shared_ptr<class wh::entitymodule::C_InventoryPreset> > > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AddMetaroleElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_IsContentFilterActive* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MaypoleState : int {
    Whole = 0,
    Cut   = 1,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_DeactivatingItem : struct wh::entitymodule::S_QuestItemInfo, struct wh::entitymodule::S_ExistingQuestItem {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::C_Counter {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kontrola : int {
    None              = 0,
    Active            = 1,
    CuredWithStone    = 2,
    CuredWithNoStone  = 3,
    NotCuredWithSTone = 4,
    NotCured          = 5,
    Canceled          = 6,
    Canceled2         = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::databasemodule::T_TableString {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39930e8
enum enum wh::conceptmodule::E_NodeHibernateReason : int {
    LevelSwitching = 0,
    GameModeEnd    = 1,
    GraphUnload    = 2,
    RandomEventEnd = 3,
    ScriptRequest  = 4,
    Debug          = 5,
    GameLoading    = 6,
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::guimodule::C_InfiniteHoldInteractionTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_Effect> {
    0x10 : Name              : class CryStringT<char>;
    0x18 : RuntimeState      : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports             : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView         : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive          : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : IsPressed         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd8 : StartActionPrompt : class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::C_DisablePlayerCartDismount : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasSocialClass : class wh::rpgmodule::storm::I_Selector {
    0x8 : ID   : int;
    //Getter: WHGame.dll+0x2cc2220
    get : name : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CrimeDetection : int {
    NoCrime      = 0,
    LightCrime   = 1,
    ViolentCrime = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum talkToGrinders : int {
    None             = 0,
    TalkToGrinders   = 1,
    CarrySacks       = 2,
    ReturnToGrinders = 3,
    Done             = 4,
    Canceled         = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_ItemSlotAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum pogrom_dialogType : int {
    none         = 0,
    chat         = 1,
    ingameDialog = 2,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::dialogmodule::data::C_LookAtCommand : class wh::dialogmodule::data::C_Command {
    0x8  : Role               : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay              : float;
    0xe  : TimingMode         : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : LookAtRole         : struct wh::rpgmodule::S_RoleId;
    0x18 : Offset             : class CryStringT<char>;
    0x20 : CustomTarget       : class CryStringT<char>;
    0x28 : TransitionDuration : float;
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimPickUpRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::questmodule::C_EnumLog* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TeleportLacek : int {
    None         = 0,
    WaitingForFF = 1,
    Teleport     = 2,
    Done         = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_PlayerSwitcherConceptNode* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum leceniClear : int {
    None      = 0,
    Active    = 1,
    Done      = 2,
    Canceled  = 3,
    Canceled2 = 4,
    TooLate   = 5,
    Aborted   = 6,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_SwitchItemDescriptor : class wh::entitymodule::I_ItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithMother : int {
    None                               = 0,
    TreatedBadly                       = 1,
    TreatedWell                        = 2,
    GoclinDied                         = 3,
    MotherKnowsAboudBadlyTreatedGoclin = 4,
    MotherKnowsAboudWellTreatedGoclin  = 5,
    MotherKnowsAboudDeadGoclin         = 6,
    Failed                             = 7,
    Aborted                            = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_PlaceAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestFailureBeforeHandover : int {
    None       = 0,
    JanDied    = 1,
    LaszloDied = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StolenItemHandling : int {
    None               = 0,
    ZakladniLokace     = 1,
    SekundarniLokace   = 2,
    HracMaPredmet      = 3,
    PavelMaPredmet     = 4,
    VracenoMajiteli    = 5,
    VracenoFarari      = 6,
    VracenoRychtari    = 7,
    PredmetMaObchodnik = 8,
    PredmetNeni        = 9,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_IfCondition : class wh::xgenaimodule::BehaviorTree::I_Node, class wh::xgenaimodule::BehaviorTree::I_SwitchableNode, class wh::xgenaimodule::BehaviorTree::I_ContinuousSwitchableNode {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_TemplatedNode> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Tour : int {
    None         = 0,
    Tour         = 1,
    Teleport     = 2,
    DoneFT       = 3,
    DoneTeleport = 4,
    DoneTour     = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Inspection : int {
    None              = 0,
    SpeakToCouncilman = 1,
    Done              = 2,
    Fail              = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinalWord : int {
    None    = 0,
    Wait    = 1,
    Started = 2,
    Paused  = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AddFactionRelationBetweenArrays> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaHorseWaitOnSpot : int {
    None         = 0,
    CutsceneWait = 1,
    WeaponWait   = 2,
    AssaultWait  = 3,
    CombatWait   = 4,
    TourActive   = 5,
    Done         = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_KeyRingItemClass* {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_StateBase<enum wh::framework::E_GameReleaseVersion::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIItemTransfer {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_ContextOperator<struct wh::rpgmodule::storm::operation::Remove> : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x2c835f8
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x280
//pointer dimension: 0
class wh::playermodule::C_RandomEventVariantBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10  : Name                         : class CryStringT<char>;
    0x18  : RuntimeState                 : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView                    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode                : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace               : class boost::optional<bool>;
    0x60  : Types                        : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets                       : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes                        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC                  : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView                    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x234 : Weight                       : class std::optional<float>;
    0x260 : IsAbstract                   : class std::optional<bool>;
    0x262 : IsGuaranteed                 : class std::optional<bool>;
    0x23c : DifficultyMean               : class std::optional<class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > >;
    0x244 : DifficultyStandardDeviation  : class std::optional<class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > >;
    0x250 : CooldownOverride             : class std::optional<struct wh::framework::S_TimeSpan>;
    0x278 : ViewRadius                   : class std::optional<float>;
    0x268 : MapTimeout                   : class std::optional<struct wh::framework::S_TimeSpan>;
    0x220 : EventInitiatedFastTravelData : class std::shared_ptr<struct wh::playermodule::S_RandomEventFastTravelData>;
    0xa0  : OnSpawn                      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe0  : OnDespawn                    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x120 : IsSpawned                    : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x160 : RandomEventOption            : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_RandomEventOption::Type>*;
    0x1a0 : RandomEventOptionResult      : class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_RandomEventOptionResult::Type>*;
    0x1e0 : IsEnabled                    : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::entitymodule::C_PresetItem : class wh::entitymodule::C_PresetItemBase, class wh::entitymodule::C_ItemHealthProvider {
    0x8  : Weight             : float;
    0xc  : CombatLevel        : float;
    0x8  : Quality            : unsigned int;
    0xc  : Health             : float;
    0x10 : HealthVariation    : float;
    0x14 : Condition          : float;
    0x18 : ConditionVariation : float;
    0x30 : Name               : class CryStringT<char>;
    0x38 : Amount             : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DrunkState : int {
    Sober   = 0,
    Serious = 1,
    Drunk   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DobrosWolframStreaming : int {
    InitialUnstreamed          = 0,
    StreamedDebug              = 1,
    UnstreamedDebug            = 2,
    UnstreamedPosledniPomazani = 3,
    StreamedOpenWorld          = 4,
    ErikIndividuallyDefined    = 5,
    StreamedOblehaniSuchdole   = 6,
    UnstreamedRutinaAVypad     = 7,
    StreamedRutinaAVypad       = 8,
    UnstreamedBattleHladAZmar  = 9,
    StreamedHladAZmar          = 10,
    UnstreamedStealthMise      = 11,
    StreamedBattleFinale       = 12,
    UnstreamedEndGame          = 13,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_StanceCondition* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_SmartObjectAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FoodForHynek : int {
    None            = 0,
    GetFood_Started = 1,
    GetFood_Updated = 2,
    DeliverFood     = 3,
    FoodDelivered   = 4,
    Failed          = 5,
    Canceled        = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitializerChangeEquipment* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReadyForFightState : int {
    None              = 0,
    PredSWaitFighterA = 1,
    PredSWaitVsichni  = 2,
    SoubojProbiha     = 3,
    PoSoubojiWait     = 4,
    Done              = 5,
    TournamentEnds    = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatus_BergovHorse : int {
    StreamingAfterLevelStart       = 0,
    StreamedLevelStart             = 1,
    UnstreamedZachranaPtackaStart  = 2,
    StreamingForUkradenyKunStart   = 3,
    StreamedUkradenyKunStart       = 4,
    UnstreamedUkradenyKunCompleted = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleGroupProgress : int {
    None  = 0,
    Move  = 1,
    Fight = 2,
    Flee  = 3,
    Done  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FrantaCrime : int {
    None          = 0,
    Assaulted     = 1,
    Forgiven      = 2,
    AssaltedAgain = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::C_SelectedHorseDecision : class wh::xgenaimodule::I_StoredDecision {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::conceptmodule::C_StateBase<class rttr::variant> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<struct wh::dialogmodule::data::S_Port,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ClothingPresetRef* {
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::guimodule::C_UIHudQAM : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WeaponStash : int {
    Default           = 0,
    WeaponStash       = 1,
    ActiveWeaponStash = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_RelationScriptContextPreset>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a22a70
enum enum wh::shared::E_DLC::Type : unsigned char {
    Invalid             = 0,
    QuestForValor       = 1,
    Barber              = 2,
    HorseRacing         = 3,
    HardcoreMode        = 4,
    ForgeTycoon         = 5,
    TouristMode         = 6,
    MysteriaEcclesiae   = 7,
    Unpublished         = 8,
    BanditCamps         = 9,
    SeasonPassShields   = 10,
    GoldEditionHuntsman = 11,
    Last                = 12,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ProjectileInAreaTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_LeftHandCondition* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum reportToProcek : int {
    None           = 0,
    active         = 1,
    splnenoRadne   = 2,
    splnenoZaTrest = 3,
    Aborted        = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<struct wh::entitymodule::S_LayerProfile,class std::allocator<struct wh::entitymodule::S_LayerProfile> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIHudBuffs : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindBonesWithoutWoodcutter : int {
    none        = 0,
    CanBePicked = 1,
    Done        = 2,
    Canceled    = 3,
    Aborted     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum tour : int {
    None            = 0,
    Started         = 1,
    mill            = 2,
    cellar          = 3,
    oven            = 4,
    ovenWithAnna    = 5,
    stables         = 6,
    stablesWithKuba = 7,
    invited         = 8,
    notInvited      = 9,
    Failed          = 10,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartState {
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::playermodule::C_UseBookTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xf8  : OnOpened         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnClosed         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : OnLastPageTurned : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xb8  : Book             : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimDropRequest* {
};

//size in bytes: 0x898
//pointer dimension: 0
class wh::rpgmodule::C_Statistics {
    //Getter: WHGame.dll+0x2c83348
    get : CountersByName : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class wh::rpgmodule::C_Counter>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class wh::rpgmodule::C_Counter> > > >;
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasSoulCrimeRole : class wh::rpgmodule::storm::I_Selector {
    0x8 : name : enum wh::rpgmodule::E_SoulCrimeRole::Type;
    0x8 : ID   : enum wh::rpgmodule::E_SoulCrimeRole::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerFoodConfiscated : int {
    None = 0,
    Some = 1,
    Much = 2,
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::dialogmodule::data::C_Sequence {
    0x8  : Decision               : class std::shared_ptr<class wh::dialogmodule::data::C_Decision>;
    0x18 : UIPrompt               : class wh::framework::C_LocalizedString;
    0x28 : Elements               : class std::reference_wrapper<struct DynArray<struct wh::dialogmodule::data::S_Response,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > >;
    0x30 : IncludedDecisions      : struct DynArray<struct wh::dialogmodule::data::S_IncludedDecisionAlias,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
    0x38 : Cooldown               : struct wh::framework::S_TimeSpan;
    0x40 : CooldownTimeType       : enum wh::framework::E_TimeType::Type;
    0xa9 : Priority               : unsigned char;
    0x44 : SpeechCoef             : float;
    0x48 : Name                   : class CryStringT<char>;
    //Getter: WHGame.dll+0x2750974
    get  : Reputation             : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x50 : ReputationChangeTarget : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x2750a54
    get  : SkillCheck             : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x58 : Type                   : enum wh::dialogmodule::data::E_SequenceType;
    0x54 : SkillCheckType         : enum wh::rpgmodule::E_SkillCheck::Type;
    0x52 : SkillCheckTarget       : struct wh::rpgmodule::S_RoleId;
    0x59 : CharacterCreationType  : enum wh::dialogmodule::data::E_CharacterCreation::Type;
    0x5a : PunishmentType         : enum wh::dialogmodule::data::E_Punishment::Type;
    0x5b : RepairType             : enum wh::dialogmodule::data::E_RepairShopType::Type;
    0x60 : GoToDecision           : class CryStringT<char>;
    //Getter: WHGame.dll+0x19b5f60
    get  : Input                  : bool;
    0x5c : EndType                : enum wh::dialogmodule::data::E_SequenceEndType;
    0x5d : Visibility             : enum wh::dialogmodule::data::E_SequenceVisibility::Type;
    //Getter: WHGame.dll+0x2750854
    get  : EntryCondition         : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x5e : SkillcheckCondition    : enum wh::dialogmodule::data::E_SkillCheckResult::Type;
    0x68 : PerkCondition          : class CryStringT<char>;
    0x70 : DisguiseCondition      : class CryStringT<char>;
    0x78 : VoiceCategory          : enum wh::rpgmodule::E_VoiceCategory::Type;
    0x80 : VoiceCategoryRoles     : struct DynArray<struct wh::rpgmodule::S_RoleId,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
    0x88 : ExitScript             : class CryStringT<char>;
    0x90 : Triggers               : struct DynArray<struct wh::dialogmodule::data::S_Port,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
    0xa8 : ChatPosition           : enum wh::dialogmodule::data::E_SequenceChatPosition;
    0xa0 : ChatDistance           : float;
    0xa4 : ChatAngle              : float;
    //Getter: WHGame.dll+0x19b5f80
    get  : IsUsed                 : bool;
    0xb0 : LastUsedTime           : __int64;
    0x98 : FastForwards           : class std::reference_wrapper<struct DynArray<class std::shared_ptr<struct wh::dialogmodule::data::S_FastForwardRequest>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > >;
    0xac : GrayOutIfSequencesUsed : enum wh::dialogmodule::data::E_DecisionEntryGrayOutMode::Type;
    //Getter: WHGame.dll+0x42428c
    get  : IsAvailable            : bool;

    //non-vtable method: WHGame.dll+0x42f8a8
    SetUsed( );
    //non-vtable method: WHGame.dll+0x761d30
    ResetUsed( bool );
    //non-vtable method: WHGame.dll+0x76c7e0
    AfterDeserialization( );
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::shopmodule::S_ShopDBData {
    0x0  : shop_id          : int;
    0x8  : shop_name        : class CryStringT<char>;
    0x10 : restock_period   : unsigned int;
    0x30 : inventory_preset : class CryStringT<char>;
    0x18 : ShopItemFilters  : class std::reference_wrapper<class std::vector<struct wh::shopmodule::S_ShopItemFilter,class std::allocator<struct wh::shopmodule::S_ShopItemFilter> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableHenikMankaRande : int {
    None                 = 0,
    StartHenik           = 1,
    StartManka           = 2,
    UpdateHenik          = 3,
    UpdateMankaAgreed    = 4,
    UpdateHenikDateSet   = 5,
    HenikCurrentlyOnDate = 6,
    Done                 = 7,
    CanceledMankaRefused = 8,
    CanceledHenikFight   = 9,
    CanceledMaypoleDone  = 10,
    CanceledDead         = 11,
    CanceledOther        = 12,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::E_AnimEventContextSource {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_CreditsCutscene* {
};

//size in bytes: 0x98
//pointer dimension: 0
class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_Effect> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_Hair* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_GenericRandomEvent> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::data::S_FastForwardRequestForRole* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressAbortable : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
    Aborted   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestDuelNotification : int {
    Ignore                  = 0,
    Notifications           = 1,
    NotificationsWithStart  = 2,
    EndDuelAndNotifications = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerEnableRoleOnHub* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_AutoSaveType::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressDivaci : int {
    None     = 0,
    UOhradky = 1,
    Rozchod  = 2,
    Konec    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JourneymanBarking : int {
    None     = 0,
    Vazoun   = 1,
    Vepr     = 2,
    Tovarys1 = 3,
    Tovarys2 = 4,
    Tovarys3 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_difficulty : int {
    None     = 0,
    Beginner = 1,
    Advanced = 2,
    Expert   = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::entitymodule::S_ItemClassPhase {
    0x8  : Model           : class CryStringT<char>;
    0x10 : Material        : class CryStringT<char>;
    0x18 : AttachmentName  : class CryStringT<char>;
    0x20 : KeepModelLoaded : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MusaGuardGuarding : int {
    None                  = 0,
    Guarding              = 1,
    DrinkingAfterKaterina = 2,
    DrinkAndLeave         = 3,
    LeftForever           = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::framework::C_GameplayManager {

    //non-vtable method: WHGame.dll+0x19a1580
    IsGameplayStarted( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum treeStash : int {
    None              = 0,
    HaveBeenTold      = 1,
    FindIt            = 2,
    FindItWithoutClue = 3,
    Failed            = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_RelationScriptContext> > {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::rpgmodule::C_DistinctCounter<unsigned int> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 1
unsigned short* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashListBuff : class wh::guimodule::C_UIFlashObject {
    0x8  : Id                : class CryStringT<char>;
    0x10 : Name              : class CryStringT<char>;
    0x18 : IconId            : class CryStringT<char>;
    0x20 : Type              : int;
    0x24 : Order             : unsigned int;
    0x28 : PrimaryProgress   : float;
    0x2c : SecondaryProgress : int;
};

//size in bytes: 0x8
//pointer dimension: 1
struct CryGUID* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZakladniLokaceTyp : int {
    Soul  = 0,
    Slot  = 1,
    Stash = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JansDocument : int {
    None                  = 0,
    HenryHasQuestDocument = 1,
    Canceled              = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_CutsceneHandler> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::dialogmodule::data::C_ShowActorCommand : class wh::dialogmodule::data::C_Command {
    0x8 : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get : Delay      : float;
    0xe : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VezniNaTroskachGamePlay : int {
    None                  = 0,
    QuestStart            = 1,
    Torturing             = 2,
    KaterinaRescues       = 3,
    StreamingJailCorpse   = 4,
    StreamingCastleAssets = 5,
    CastleGameplay        = 6,
    ApolenaGameplay       = 7,
    HappyEnd              = 8,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::guimodule::C_FastTravelCutscene : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::conceptmodule::runtime::C_RuntimeTypeRegister::CreateRttrEnum::E_RuntimeIntEnum {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefectorsQI : int {
    None      = 0,
    Dezerteri = 1,
    Hrac      = 2,
    Desatnik  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertSkillteacher : int {
    None                = 0,
    SedmStatecnych2Done = 1,
};

//size in bytes: 0x1c
//pointer dimension: 0
struct wh::S_RotationAngleComputerParams {
    0x0  : MinAngularDiff                     : float;
    0x4  : MaxAngularDiff                     : float;
    0x8  : MinAngularSpeed                    : float;
    0xc  : MaxAngularSpeed                    : float;
    0x10 : AngularSpeedSmothingTime           : float;
    0x14 : ResetAngularSpeedOnSignChange      : bool;
    0x18 : OppositeSideAngDifferenceThreshold : float;
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_ModuleVersionState : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_StateBase<enum wh::framework::E_GameReleaseVersion::Type> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50 : Version      : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_GameReleaseVersion::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_AnimDoor *,class std::allocator<class wh::entitymodule::C_AnimDoor *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_FaderDialogueNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AttributeOperator<struct wh::rpgmodule::storm::operation::Remove>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TimedProgressFailable : int {
    None           = 0,
    FirstTimeSpan  = 1,
    SecondTimeSpan = 2,
    ThirdTimeSpan  = 3,
    FourthTimeSpan = 4,
    Completed      = 5,
    Failed         = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b501a0
enum enum wh::entitymodule::E_SingleMatchResult::Type : unsigned char {
    Success              = 0,
    WrongItem            = 1,
    EquippedMismatch     = 2,
    QuestMismatch        = 3,
    StolenMismatch       = 4,
    HealthMismatch       = 5,
    PriceMismatch        = 6,
    CharismaMismatch     = 7,
    ArmorSurfaceMismatch = 8,
    QualityMismatch      = 9,
    ConditionMismatch    = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_QuickSlotContainerItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum pickpocket_stage : int {
    none    = 0,
    onPlace = 1,
    ready   = 2,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::guimodule::C_UIFlashListMapLegendUniqueItem : class wh::guimodule::C_UIFlashObject {
    0x8  : Id    : class CryStringT<char>;
    0x10 : Name  : class CryStringT<char>;
    0x18 : State : int;
};

//size in bytes: 0x118
//pointer dimension: 0
class wh::questmodule::C_Objective : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x60  : Progress      : class wh::conceptmodule::C_PortRef*;
    0xa0  : Tracker       : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;
    0x110 : IsOptional    : bool;
    0xe8  : LocalizedName : class wh::framework::C_LocalizedString;
    //Getter: WHGame.dll+0x483850
    get   : Logs          : class std::vector<class std::shared_ptr<class wh::questmodule::C_Log>,class std::allocator<class std::shared_ptr<class wh::questmodule::C_Log> > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
    //non-vtable method: WHGame.dll+0x75f834
    ProcessDeserializationLineNumber( uint );
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::rpgmodule::S_SoulClassDBData {
    0x8 : Name : class wh::databasemodule::T_TableString;
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CodeAction : class wh::xgenaimodule::NPCState::C_Action {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::conceptmodule::C_ContainsElement : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Value        : class wh::conceptmodule::C_PortRef*;
    0xc8 : Result       : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum turnajVyzbrojState : int {
    None            = 0,
    VolnaDisciplina = 1,
    StityMece       = 2,
    DlouheMece      = 3,
    Odzbrojen       = 4,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_EnableBehaviorForNPCElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemReferenceVectorDescriptor* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KhTournamentState : int {
    None            = 0,
    Active          = 1,
    WaitingToActive = 2,
    Paused          = 3,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationCollection {
    0x0  : AnimationsMap : class boost::container::flat_map<unsigned int,class std::vector<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimation,class std::allocator<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimation> >,struct std::less<unsigned int>,void>;
    0x18 : HashValue     : unsigned __int64;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelAtBackyard : int {
    None          = 0,
    Wait          = 1,
    GoToHouse     = 2,
    StayNearHouse = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashReward : class wh::guimodule::C_UIFlashObject {
    0x8  : Id     : class CryStringT<char>;
    0x10 : Name   : class CryStringT<char>;
    0x18 : Info   : class CryStringT<char>;
    0x20 : IconId : class CryStringT<char>;
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::rpgmodule::S_SoulQueryContext {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KovarProgressUpdatedAbortable : int {
    None    = 0,
    Active  = 1,
    Updated = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_RandomEventOptionAdditionalAction {
};

//size in bytes: 0x14
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationResultKey {
    0x0  : FragmentGuid : struct CryGUID;
    0x10 : HelperId     : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasCombatLevel* {
};

//size in bytes: 0x298
//pointer dimension: 0
class wh::rpgmodule::C_SkirmishTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls           : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x140 : EventType       : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SkirmishEventType::Type>*;
    0x100 : ReferenceSoul   : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x180 : OnEvent         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c0 : EventSoul       : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x200 : EventTargetSoul : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x240 : Statistics      : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_SkirmishStatistics *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_MovementDirection {
};

//size in bytes: 0x138
//pointer dimension: 0
class wh::conceptmodule::C_StateWatch : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode>, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> > {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x78 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8 : WatchedState : class wh::conceptmodule::C_PortRef*;
    0xf8 : OnChanged    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TournamentLevel : int {
    None   = 0,
    Level1 = 1,
    Level2 = 2,
    Level3 = 3,
    Level4 = 4,
    Level5 = 5,
    Level6 = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantMigration : int {
    MalesovPrisoner          = 0,
    InCertovkaZachranaPtacka = 1,
    InSuchdolUtokNaMalesov   = 2,
    InRuthardkaPapezskyLegat = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_BattleTrigger* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_RandomEventOptionAction {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamMachal : int {
    StreamedDefault = 0,
    UnstreamedU34   = 1,
    StreamedS58     = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BannerHoldership : int {
    None              = 0,
    InChest           = 1,
    InPlayerInventory = 2,
    LostAgain         = 3,
    HandedToVlach     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CanMarketaStandUp : int {
    None         = 0,
    WaitingForFF = 1,
    StandingUp   = 2,
    Done         = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartActorState {
};

//size in bytes: 0x50
//pointer dimension: 0
struct wh::playermodule::S_OverlayTutorial : struct wh::playermodule::S_Tutorial {
    0x8  : Name                : class CryStringT<char>;
    0x10 : RemindAfterLongTime : bool;
    0x20 : GameModeFilter      : enum wh::game::E_GameMode::Type;
    0x11 : Repeatable          : bool;
    0x18 : RepeatCooldown      : struct wh::framework::S_TimeSpan;
    0x28 : UiName              : class wh::framework::C_LocalizedString;
    0x38 : UiOrder             : int;
    0x40 : UiScreenName        : class CryStringT<char>;
    0x48 : VisibleInMenu       : bool;
    0x49 : IsSystemOverlay     : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PilgrimageSpotTrosecko : int {
    None         = 0,
    SmiriciKamen = 1,
    Kaplicka     = 2,
    SmiriciKriz  = 3,
    Poustevnik   = 4,
};

//size in bytes: 0x50
//pointer dimension: 0
struct IRenderNode {
};

//size in bytes: 0x178
//pointer dimension: 0
class wh::xgenaimodule::C_NPCGameModeTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name                   : class CryStringT<char>;
    0x18  : RuntimeState           : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                  : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView              : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive               : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : NPCSoul                : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnGameModeStartTrigger : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnGameModeEndTrigger   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_RelationScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BundleOfWeapons : int {
    None     = 0,
    OnLoaded = 1,
    Chest    = 2,
    Player   = 3,
    Done     = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DocumentContent* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrackViewFansState : int {
    Unstreamed                       = 0,
    Idle_WaitingForStreamingFinished = 1,
    Idle_Cheering                    = 2,
    Idle_CheeringRecording           = 3,
    Reaction1                        = 4,
    Reaction2                        = 5,
    FastLeaving                      = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindCumanCampObjective : int {
    None                         = 0,
    GoingToCampAfterInvitation   = 1,
    SearchingForCampNoMarker     = 2,
    SearchingForCampInForest     = 3,
    SentToNomadCampToLookFurther = 4,
    GoingToCamp                  = 5,
    Done                         = 6,
    Aborted                      = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::questmodule::C_Gameplay>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum playerAction_stanceObject_stance : int {
    sitting = 0,
    lying   = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::E_AnimationOverride {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::engine3d::E_HLodState {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Switch* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithVajdaAfterContest : int {
    None                        = 0,
    TellVajdaAboutContest       = 1,
    TalkedWithVajdaAfterContest = 2,
    Failed                      = 3,
    Aborted                     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinishBookWithRoza : int {
    None                      = 0,
    Started                   = 1,
    BookIsFinished            = 2,
    ReadRozasBook             = 3,
    RozaIsCaptured            = 4,
    RozaIsAtMalesov           = 5,
    FreedRozaAtMalesov        = 6,
    SharedThoughtsImmediately = 7,
    SharedThoughtsLater       = 8,
    ThoughtsNotShared         = 9,
    BookDeliveredNotFinished  = 10,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetLootInventory : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_InventoryOperator {
    0x8 : preset : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetRelationContextPreset* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_DoorTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab44c8
enum enum wh::entitymodule::E_StanceSide::Type : int {
    none  = 0,
    left  = 1,
    right = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mucirna_ProgressUpdated : int {
    None             = 0,
    Active           = 1,
    ActiveWithMarker = 2,
    Done             = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AddScheduleItemOperator* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7ade8
enum enum wh::conceptmodule::E_NodeQueryQuantificator::Type : unsigned char {
    All = 0,
    Any = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_Calendar* {
};

//size in bytes: 0x1f0
//pointer dimension: 0
class wh::shared::C_GameInterface {
    //Getter: WHGame.dll+0xd1aec0
    get : Example         : class wh::framework::I_RestApiExample*;
    //Getter: WHGame.dll+0x19a4610
    get : Framework       : class wh::framework::C_Framework*;
    //Getter: WHGame.dll+0x19a3860
    get : System          : struct ISystem*;
    //Getter: WHGame.dll+0x19a66c0
    get : Cry3DEngine     : struct I3DEngine*;
    //Getter: WHGame.dll+0x19a66d0
    get : ConceptModule   : class wh::conceptmodule::C_ConceptModule*;
    //Getter: WHGame.dll+0x19a59a0
    get : DatabaseModule  : class wh::databasemodule::I_DatabaseModule*;
    //Getter: WHGame.dll+0x19a66e0
    get : DialogModule    : class wh::dialogmodule::C_DialogModule*;
    //Getter: WHGame.dll+0x19a4750
    get : EntityModule    : class wh::entitymodule::C_EntityModule*;
    //Getter: WHGame.dll+0x19a11c0
    get : GUIModule       : class wh::guimodule::C_GUIModule*;
    //Getter: WHGame.dll+0x19a66f0
    get : MusicModule     : class wh::musicmodule::C_MusicModule*;
    //Getter: WHGame.dll+0x19a59b0
    get : RPGModule       : class wh::rpgmodule::C_RPGModule*;
    //Getter: WHGame.dll+0x19a27b0
    get : PlayerModule    : class wh::playermodule::C_PlayerModule*;
    //Getter: WHGame.dll+0x19a2380
    get : XGenAIModule    : class wh::xgenaimodule::C_XGenAIModule*;
    //Getter: WHGame.dll+0x19a6700
    get : XBehaviorModule : class wh::xbehaviormodule::C_XBehaviorModule*;
    //Getter: WHGame.dll+0x19a66d0
    get : concept         : class wh::conceptmodule::C_ConceptModule*;
    //Getter: WHGame.dll+0x19a59a0
    get : db              : class wh::databasemodule::I_DatabaseModule*;
    //Getter: WHGame.dll+0x19a66e0
    get : dialog          : class wh::dialogmodule::C_DialogModule*;
    //Getter: WHGame.dll+0x19a4750
    get : ent             : class wh::entitymodule::C_EntityModule*;
    //Getter: WHGame.dll+0x19a11c0
    get : gui             : class wh::guimodule::C_GUIModule*;
    //Getter: WHGame.dll+0x19a66f0
    get : Music           : class wh::musicmodule::C_MusicModule*;
    //Getter: WHGame.dll+0x19a59b0
    get : rpg             : class wh::rpgmodule::C_RPGModule*;
    //Getter: WHGame.dll+0x19a27b0
    get : player          : class wh::playermodule::C_PlayerModule*;
    //Getter: WHGame.dll+0x19a2380
    get : xgen            : class wh::xgenaimodule::C_XGenAIModule*;
    //Getter: WHGame.dll+0x19a6700
    get : behavior        : class wh::xbehaviormodule::C_XBehaviorModule*;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VezniNaTroOrdersHoldership : int {
    None             = 0,
    InStash          = 1,
    AcquiredByPlayer = 2,
    AcquiredByBohuta = 3,
    QuestFinished    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RadzigSword : int {
    None                      = 0,
    RadzigSword_Henry         = 1,
    RadzigSwordReforged_Henry = 2,
    HenrySword                = 3,
    HenrySwordReforged        = 4,
    Radzig                    = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulPropertyTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
class CAttachmentVCLOTH* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIMenuPage {
    0x8  : Id              : enum wh::guimodule::E_MenuPage::Type;
    0x10 : Head            : class wh::framework::C_LocalizedString;
    0x20 : ContainerX      : int;
    0x24 : ContainerY      : int;
    0x28 : MaxButtons      : int;
    0x2c : ButtonHalfWidth : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemLetterToTestHenry : int {
    None     = 0,
    JIndrich = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_RemoveScheduleActivity* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a4b258
enum enum wh::dialogmodule::E_AnimationOverride::Type : int {
    UserControlled               = 0,
    DialogControlled             = 1,
    NoOverride                   = 2,
    DialogControlledItemsAllowed = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FleeOnHorse : int {
    None                    = 0,
    Started                 = 1,
    UpdatedStablesInfo      = 2,
    DoneWithSam             = 3,
    DoneWithoutSam          = 4,
    DoneDontKnowAboutSam    = 5,
    DoneWithoutSamWithClues = 6,
    DoneWithoutSamWithSeen  = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c4b2a0
enum enum wh::xgenaimodule::E_SmartBehaviorState::Type : unsigned char {
    Enabled           = 0,
    NoRequests        = 1,
    Disabled          = 2,
    RequestsByHolders = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ConceptModule* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::I_TagPoint {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FighterTournamentPreset : int {
    None           = 0,
    Waiting        = 1,
    GoingForStity  = 2,
    EquipedStity   = 3,
    GoingForMece   = 4,
    EquipedMece    = 5,
    GoingForVolna  = 6,
    EquipedVolna   = 7,
    GoingForDisarm = 8,
    Disarmed       = 9,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::guimodule::C_BlockUINotifications : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Type         : class wh::conceptmodule::C_TypedPortRef<enum wh::guimodule::E_BlockUINotificationType::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ModuleBase> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CaponThroughSecretPassage : int {
    None                        = 0,
    CaponPickedUp               = 1,
    BarkedAfterCaponPickedUp    = 2,
    CaponDroppedDown            = 3,
    InSecretPassage             = 4,
    EscapedThroughSecretPassage = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatToDeath : int {
    None               = 0,
    SoldiersAreEnemy   = 1,
    AlchemystsAreEnemy = 2,
    EveryoneIsEnemy    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionButchering* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Availability : int {
    None              = 0,
    Available         = 1,
    AvailableWithStar = 2,
    NotAvailable      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PockejNaVecer : int {
    None          = 0,
    PockejNaVecer = 1,
    PoDialogu     = 2,
    Aborted       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChatSwitch : int {
    firstChat  = 0,
    secondChat = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_MetaRoleOperator<struct wh::rpgmodule::storm::operation::Remove>* {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::framework::C_PolymorphicSharedPointers {
    0x8  : SharedPtr                    : class std::shared_ptr<struct wh::framework::S_BaseExampleNode>;
    0x18 : SharedPtrEmpty               : class std::shared_ptr<struct wh::framework::S_BaseExampleNode>;
    0x28 : SharedPtrWithDerivedInstance : class std::shared_ptr<struct wh::framework::S_BaseExampleNode>;
    0x38 : SharedPtrVector              : class std::reference_wrapper<class std::vector<class std::shared_ptr<struct wh::framework::S_BaseExampleNode>,class std::allocator<class std::shared_ptr<struct wh::framework::S_BaseExampleNode> > > >;
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::dialogmodule::S_LookAtOffset {
    0x0 : Name   : class CryStringT<char>;
    0x8 : Offset : struct Vec3_tpl<float>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff0b0
enum enum wh::entitymodule::E_StanceOn::Type : unsigned char {
    none   = 0,
    ground = 1,
    bench  = 2,
    table  = 3,
    bed    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xbehaviormodule::C_XBehaviorModule* {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::rpgmodule::S_SkirmishStatistics {
    0x8  : Friends        : int;
    0xc  : HumanFriends   : int;
    0x10 : Enemies        : int;
    0x14 : HumanEnemies   : int;
    0x18 : HistoryFriends : int;
    0x1c : HistoryEnemies : int;
    0x20 : Predominance   : float;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3993228
enum enum E_TriggerEffectMode::Type : unsigned char {
    Off                       = 0,
    Feedback                  = 1,
    Weapon                    = 2,
    Vibration                 = 3,
    MultiplePositionFeedback  = 4,
    SlopeFeedback             = 5,
    MultiplePositionVibration = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GertaFrenczlovaStreaming : int {
    StreamedInitial                       = 0,
    UnstreamedPosledniPomazani            = 1,
    StreamedPosledniPomazani              = 2,
    UnstreamedOblehaniSuchdoleBeginning   = 3,
    StreamedOblehaniSuchdole              = 4,
    UnstreamedOblehaniSuchdoleNightAttack = 5,
    StreamedRutinaAVypad                  = 6,
    UnstreamedHladAZmar                   = 7,
    StreamedHladAZmar                     = 8,
    UnstreamedStealthMiseZaJindru         = 9,
    StreamedZoufalaObranaZaBohutu         = 10,
    UnstreamedZoufalaObranaZaBohutu       = 11,
    StreamedFinale                        = 12,
    UnstreamedEndgame                     = 13,
    StreamedDebug                         = 14,
    UnstreamedDebug                       = 15,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashListPerk : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : Icon     : class CryStringT<char>;
    0x20 : State    : unsigned int;
    0x24 : MinLevel : unsigned int;
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::framework::C_Framework {
    //Getter: WHGame.dll+0x19a4760
    get : GameplayManager : class wh::framework::C_GameplayManager*;
};

//size in bytes: 0x200
//pointer dimension: 0
class wh::combatmodule::C_BattleTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : SmartObject  : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartObject *>*;
    0xf8  : EventType    : class wh::conceptmodule::C_TypedPortRef<enum wh::combatmodule::E_BattleEvent::Type>*;
    0x138 : OnEvent      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : EventSoul    : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x1b8 : Situation    : class wh::conceptmodule::C_TypedPortRef<struct wh::combatmodule::S_BattleSituation *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::shopmodule::C_Shop *,class std::allocator<class wh::shopmodule::C_Shop *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_LayerProfile {
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_RandomEventOption* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_RelationScriptContext> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DanceWithBadDancer : int {
    None                     = 0,
    MotherAsked              = 1,
    DanceAfterRefusal        = 2,
    BeforeSpeakingWithMother = 3,
    Lied                     = 4,
    ToldTruth                = 5,
    Canceled                 = 6,
    Aborted                  = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SkirmishButcher : int {
    None                 = 0,
    SkirmishWithKomar    = 1,
    SkirmishWithoutKomar = 2,
    Done                 = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
void* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PolylogChatHledaniSklep : int {
    None              = 0,
    Polylog           = 1,
    Chat              = 2,
    Hledani           = 3,
    PtacekCekaNaHrace = 4,
    PtacekNasel       = 5,
    Done              = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AttributeOperator<struct wh::rpgmodule::storm::operation::Set>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetWithVajda : int {
    None                          = 0,
    LearnAboutBetting             = 1,
    OfferBetToVajda               = 2,
    BetPlannedButNeedsSafeConduct = 3,
    BetHasBeenArranged            = 4,
    Failed                        = 5,
    Aborted                       = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_AddSlotDefaultItem* {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipeDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyRecipe,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_AlchemyRecipe,class std::allocator<class wh::playermodule::C_AlchemyRecipe> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithHuntsman : int {
    None                  = 0,
    WeddingStarted        = 1,
    SpokeWithHuntsmansSon = 2,
    SpokeWithHimInTime    = 3,
    FoundHimDruk          = 4,
    WorriedWife           = 5,
    Aborted               = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afede0
enum enum wh::playermodule::E_GenericRandomEventType::Type : unsigned char {
    Frisk    = 0,
    Arrest   = 1,
    SelfHelp = 2,
    Combat   = 3,
    Enemy    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_DisableHorseInventory* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActionIdleQueryData* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateBase<class rttr::variant> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hostinaProChudeOnboarding : int {
    None          = 0,
    TipsterActive = 1,
    Started       = 2,
    Indecisive    = 3,
    Done          = 4,
    Canceled      = 5,
};

//size in bytes: 0x78
//pointer dimension: 0
struct wh::entitymodule::S_HitReactionQueryData : struct wh::entitymodule::S_ActionQueryData {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::BehaviorTree::S_ActionCantBeInterrupteEvent* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum roomRenting_accommodation : int {
    none     = 0,
    oneNight = 1,
    infinite = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_MinigameType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowOnBackyardWithMan : int {
    None          = 0,
    Wait          = 1,
    GoToBackyard  = 2,
    Talk          = 3,
    AssaultVictim = 4,
    AfterAssault  = 5,
    AssaultPlayer = 6,
    Finished      = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
struct Vec2_tpl<float> {
    0x0 : X : float;
    0x4 : Y : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PilgrimageSpotKutnohorsko : int {
    None                       = 0,
    KamennaBaba                = 1,
    SmiriciKamenDobesovice     = 2,
    SedlackyHrbitov            = 3,
    TajemnyKrizSukov           = 4,
    PlaveckyKrizLabe           = 5,
    PramenSvatehoVojtecha      = 6,
    VysatovLom                 = 7,
    PerunovPramen              = 8,
    KaplickaJanaVysoka         = 9,
    SmiriciKrizStaraLhota      = 10,
    SmiriciKrizMiskoviceHorany = 11,
    KrizCimburk                = 12,
    SmiriciKamenSuchdolRatbor  = 13,
    KaplickaMarieBohunice      = 14,
};

//size in bytes: 0x2b8
//pointer dimension: 0
class wh::rpgmodule::C_AreaLabelTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : Label        : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x140 : OnAllEnter   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : OnEnter      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c0 : OnAllLeave   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x200 : OnLeave      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x240 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_UIApseView::Type>* {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_AssetInterfacePort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort, class wh::conceptmodule::C_InterfaceDataPort {
    0x28 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value     : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type      : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x30 : Direction : enum wh::conceptmodule::E_PortDirection;
    //Getter: WHGame.dll+0x256f54c
    get  : Alias     : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WinFight : int {
    None    = 0,
    Started = 1,
    Won     = 2,
    Lost    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekDuel : int {
    None                = 0,
    InProgress          = 1,
    Won                 = 2,
    LostSurrender       = 3,
    LostUnconsciousness = 4,
    LostPlayerFlee      = 5,
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::entitymodule::C_ActorActionCarried : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefectorsHealing : int {
    None       = 0,
    MakePotion = 1,
    Heal       = 2,
    Completed  = 3,
    Failed     = 4,
    Abort      = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_IngameCutscene* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithMarikaAfterLostContest : int {
    None                             = 0,
    TellMarikaAboutLostContest       = 1,
    TalkedWithMarikaAfterLostContest = 2,
    Failed                           = 3,
    Aborted                          = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemManipulationAnim* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::S_DeltaMovementComputerParams {
    0x0 : DeltaMovementDirectionThreshold     : float;
    0x4 : MoveTargetSmoothingThreshold        : float;
    0x8 : StartMoveTargetSmoothingThreshold2D : float;
    0xc : MinDistanceToPathEnd                : float;
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::playermodule::C_GameOverTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8 : Reason       : class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_GameOverId>*;
    0xf8 : OnGameOver   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
const int* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MarksCompetition : int {
    None        = 0,
    Active      = 1,
    Done        = 2,
    Failed      = 3,
    Failed_Lose = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_FocusMode::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_CarryItemPileGeom* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::playermodule::C_BlacksmithTemperature>,class std::vector> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_Input : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_MatchContext {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeHandContentEffectBase* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_CustomTextLayout {
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::conceptmodule::C_Module>* {
};

//size in bytes: 0x150
//pointer dimension: 0
class wh::entitymodule::C_SniffableItem : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Areas        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > >*;
    0xd0  : TargetPoints : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::I_TagPoint *,class std::allocator<class wh::entitymodule::I_TagPoint *> > >*;
    0x110 : ItemClass    : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x150
//pointer dimension: 0
struct wh::entitymodule::S_MeleeWeaponItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_WeaponEquipItemClass, struct wh::entitymodule::S_WeaponItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    0xf0  : Class                          : int;
    0xf4  : SubClass                       : int;
    0x110 : Defense                        : float;
    0x114 : MaxStatus                      : int;
    0x118 : StrReq                         : unsigned int;
    0x11c : AgiReq                         : unsigned int;
    0x120 : IsBreakable                    : bool;
    0xf8  : BrokenItemClassId              : struct CryGUID;
    0x128 : HolsterModel                   : class CryStringT<char>;
    0x130 : HolsterMaterial                : class CryStringT<char>;
    0x138 : Attack                         : float;
    //Getter: WHGame.dll+0x19a2860
    get   : AttackModStab                  : float;
    //Getter: WHGame.dll+0x19c4bc0
    get   : AttackModSlash                 : float;
    //Getter: WHGame.dll+0x19c4bd0
    get   : AttackModSmash                 : float;
    0x148 : SharpeningAnimSuffix           : class CryStringT<char>;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_ItemOnGroundAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name           : class CryStringT<char>;
    0x10 : Target         : class CryStringT<char>;
    //Getter: WHGame.dll+0x262b7d8
    get  : ItemClassGuids : class CryStringT<char>;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::I_Port : class wh::conceptmodule::C_SharedResource {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_BloodMaskOverride> {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::entitymodule::I_ActorAction> : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> >, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > > {
};

//size in bytes: 0x150
//pointer dimension: 0
struct wh::engine3d::S_HLodStats {
    0x8   : StateCount                : class std::array<int,7>;
    0x28  : ByType                    : class std::array<struct wh::engine3d::S_HLodStatsByType,6>;
    0x148 : InstStreamTasksInProgress : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AddFactionRelationBetweenArrays* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3ca8
enum enum wh::rpgmodule::C_AddSoulDefaultItem::E_Purpose::Type : unsigned char {
    Inventory           = 0,
    EquipPreset         = 1,
    EquipPresetPriority = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum names : int {
    Name1 = 0,
    Name2 = 1,
    Name3 = 2,
    Name4 = 3,
    Name5 = 4,
    Name6 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NebakovPruzkum_CrossCountry_ComingToFinish : int {
    None                    = 0,
    WatchDistanceFromFinish = 1,
    WatchFinishLineArea     = 2,
    Done                    = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::I_ItemDescriptor> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3af6f90
enum enum wh::entitymodule::E_StanceCategory::Type : int {
    undefined = 0,
    standing  = 1,
    lying     = 2,
    sitting   = 3,
    kneel     = 4,
    horse     = 5,
    crouch    = 6,
    cart      = 7,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::playermodule::C_BlacksmithSong>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FollowPtacekToCamp : int {
    None                                        = 0,
    Started                                     = 1,
    Completed                                   = 2,
    FailedPlayerAttackedCampBeforeTourCompleted = 3,
    AbortedPlayerCompletedZikmundCamp           = 4,
    FailedPlayerDidntFollowPtacek               = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_PointAtCommand* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasScheduleItemCount : class wh::rpgmodule::storm::I_Selector, class wh::rpgmodule::storm::I_ValueComparatorSelector {
    0x8 : min   : int;
    0xc : max   : int;
    //Getter: WHGame.dll+0x19a0f90
    get : value : int;
};

//size in bytes: 0x138
//pointer dimension: 0
class wh::xgenaimodule::C_SetEntityContext : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_EntityScriptContext> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Context      : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContext>*;
    0xe0 : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingStatesSamuel : int {
    UnstreamedInitial             = 0,
    StreamedHledaniLichtaStart    = 1,
    StreamedRatbor2Start          = 2,
    UnstreamedRatbor2BattleBegins = 3,
    StreamedRatbor2BattleEnds     = 4,
    UnstreamedPogromEnd           = 5,
    StreamedDelayed_AfterPogrom   = 6,
    UnstreamedStealthMiseEnd      = 7,
    StreamedRutina                = 8,
    UnstreamedRutina              = 9,
    StreamedFinale                = 10,
    UnstreamedFinale              = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerHasWeapon : int {
    None  = 0,
    True  = 1,
    False = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetCaponToHorses : int {
    None              = 0,
    StartedSturm      = 1,
    StartedReconFirst = 2,
    UpdatedSignal     = 3,
    Completed         = 4,
    Abort             = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PromluvSMenhartem : int {
    None                       = 0,
    PromluvSMenhartemVKkut     = 1,
    PromluvSMenhartemMimoKkkut = 2,
    QuestOdmitnutVKkut         = 3,
    QuestOdmitnutMimoKkut      = 4,
    QuestPrijmutVKkut          = 5,
    QuestPrijmutMimoKkut       = 6,
    Cancel                     = 7,
};

//size in bytes: 0x138
//pointer dimension: 0
class wh::entitymodule::clothing::C_Hair : class wh::entitymodule::clothing::C_Component {
    0x8   : Name                          : class CryStringT<char>;
    0x10  : Race                          : class std::optional<enum wh::entitymodule::E_Race::Type>;
    0x18  : Gender                        : class std::optional<enum wh::entitymodule::E_ActorGender>;
    0x20  : FilePath                      : class CryStringT<char>;
    //Getter: WHGame.dll+0x2830820
    get   : HidingGroups                  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50  : Elements                      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase> > > >;
    0x68  : Features                      : class std::reference_wrapper<class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> > >;
    //Getter: WHGame.dll+0x2830920
    get   : Morphs                        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x80  : DerivedComponents             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    0x98  : RepresentativeUberlodClothing : class CryStringT<char>;
    //Getter: WHGame.dll+0x19bc240
    get   : SourceForUberlodPart          : class CryStringT<char>;
    0xd8  : DistributionWeight            : float;
    //Getter: WHGame.dll+0x2830964
    get   : Paleness                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830a24
    get   : Roughness                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x283051c
    get   : Age                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x120 : Diffuse                       : class std::optional<struct Color_tpl<float> >;
};

//size in bytes: 0x8
//pointer dimension: 1
struct IConsole* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ed65b0
enum enum wh::playermodule::E_BlacksmithState::Type : unsigned char {
    None                  = 0,
    RecipeSelection       = 1,
    RecipeSelected        = 2,
    RecipeNotSelected     = 3,
    GrabWorkpiece         = 4,
    TransitionToForge     = 5,
    TransitionToAnvil     = 6,
    TransitionToHardening = 7,
    ForgeIdle             = 8,
    ForgeInspection       = 9,
    StopForgeInspection   = 10,
    AnvilIdle             = 11,
    FlippingWorkpiece     = 12,
    FlippingWorkpieceBack = 13,
    StrokeStart           = 14,
    StrokeHit             = 15,
    StrokeFinish          = 16,
    PerfectStroke         = 17,
    BrokenWorkpiece       = 18,
    FinishedReturnHammer  = 19,
    FinishedIdle          = 20,
    Finished              = 21,
    Ended                 = 22,
};

//size in bytes: 0x4
//pointer dimension: 0
class wh::databasemodule::T_TableDataType<float> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuPage,class std::vector> {
};

//size in bytes: 0x140
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimDrawRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimDrawRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimDrawRequest> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_LockpickingResultTrigger> {
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionFullBodyAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_NervousnessFlagDefinitionID {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UnfinishedRozaBook : int {
    None              = 0,
    InMalesov         = 1,
    InPlayerInventory = 2,
    WithRoza          = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class CMatMan* {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_DeltaMovementPartialSurroundingRequirements {
    0x0  : CoveredSectorCount              : unsigned __int64;
    0x8  : SlowDownThresholdLogicalSpeedId : int;
    0x10 : SpeedRequirements               : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingRequirements,class std::allocator<struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingRequirements> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StealthMiseAulitzLife : int {
    Alive          = 0,
    MercifulDeath  = 1,
    MercilessDeath = 2,
    OpenWorldDeath = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DiceGameState : int {
    Inactive   = 0,
    Queued     = 1,
    Starting   = 2,
    InProgress = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum feast3Wines : int {
    None    = 0,
    01Timer = 1,
    01      = 2,
    02Timer = 3,
    02      = 4,
    03Timer = 5,
    03      = 6,
    Done    = 7,
};

//size in bytes: 0x88
//pointer dimension: 0
struct wh::playermodule::S_RandomEventOption {
    0x0  : Name          : class CryStringT<char>;
    0x8  : ChanceFormula : enum wh::rpgmodule::E_RandomEventOption::Type;
    0x10 : TagPoint      : class CryStringT<char>;
    0x18 : Label         : class wh::framework::C_LocalizedString;
    0x28 : SuccessAction : struct wh::playermodule::S_RandomEventOptionResultAction;
    0x58 : FailAction    : struct wh::playermodule::S_RandomEventOptionResultAction;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum maidSex : int {
    None          = 0,
    WalkToBarn    = 1,
    WaitForPlayer = 2,
    AfterSex      = 3,
    Done          = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_GameScriptContext> > {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_LockTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KatherineLuresGuard : int {
    None          = 0,
    WalkToGuard   = 1,
    WalkToBath    = 2,
    Done          = 3,
    GuardNotFound = 4,
    Aborted       = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatusSiegeNPCs : int {
    StreamedInitial  = 0,
    UnstreamedDebug  = 1,
    UnstreamedBattle = 2,
    StreamedEnd      = 3,
    ProfileStreamed  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_offence : int {
    drawnWeapon = 0,
    noTorch     = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailablePradlo : int {
    None                  = 0,
    Active                = 1,
    Done                  = 2,
    CanceledSheepFinished = 3,
    CanceledOther         = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::clothing::C_BloodMaskDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_BloodMask>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_BloodMask>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_BloodMask> > > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_LoadWeaponAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HenryFakeName : int {
    JanPtacekPirkstejn = 0,
    JanPtacekKutnaHora = 1,
    JanPtacekRitka     = 2,
    ZdenekBrno         = 3,
    BukvardBukovany    = 4,
    VaclavBoleslav     = 5,
    None               = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskForCumanCampGenericAndSpecificObjective : int {
    None               = 0,
    AskAtPlace         = 1,
    AskImportantPeople = 2,
    Done               = 3,
    Aborted            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_PopupTutorial* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::rpgmodule::C_SoulPoolBase>,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_StopUsingHorseAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_RiderActionOut* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::entitymodule::clothing::C_JointElementBase : class wh::entitymodule::clothing::C_ElementBase {
    0x8 : Name           : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : AttachmentName : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeResetSamplingCounter<struct wh::rpgmodule::T_GameTimePolicy>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BergovDebriefPlaces : int {
    None      = 0,
    LowerRoom = 1,
    UpperRoom = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GuardingChestsStatus : int {
    None     = 0,
    UTruhel  = 1,
    UOhradky = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MichalAndDavidAreDead : int {
    None = 0,
    Dead = 1,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::playermodule::C_BlacksmithRecipeIngredient {
    0x8  : ItemClassId : struct CryGUID;
    0x18 : Amount      : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 0
class CLodValue {
    //Getter: WHGame.dll+0x19a6710
    get : LodA         : int;
    //Getter: WHGame.dll+0x19a6720
    get : LodB         : int;
    //Getter: WHGame.dll+0x19a66a0
    get : DissolveRefA : unsigned int;
    //Getter: WHGame.dll+0x19a66b0
    get : DissolveRefB : unsigned int;
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::animationmodule::JointPoseMorphData::S_Pose {
    //Getter: WHGame.dll+0x19a0470
    get : Name        : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x8 : JointDeltas : class std::reference_wrapper<class std::vector<struct wh::animationmodule::JointPoseMorphData::S_JointDelta,class std::allocator<struct wh::animationmodule::JointPoseMorphData::S_JointDelta> > >;

    //non-vtable method: WHGame.dll+0x9b7560
    OnAfterDeserialization( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaAndPlayerOnHorse : int {
    None           = 0,
    KubenkaOnHorse = 1,
    PlayerOnHorse  = 2,
    Done           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekJednaniNebakov : int {
    None    = 0,
    Started = 1,
    Updated = 2,
    Done    = 3,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::framework::C_PolymorphicRawPointers {
    0x8  : RawPtr                    : struct wh::framework::S_BaseExampleNode*;
    0x10 : RawPtrNull                : struct wh::framework::S_BaseExampleNode*;
    0x18 : RawPtrWithDerivedInstance : struct wh::framework::S_BaseExampleNode*;
    0x20 : RawPtrVector              : class std::reference_wrapper<class std::vector<struct wh::framework::S_BaseExampleNode *,class std::allocator<struct wh::framework::S_BaseExampleNode *> > >;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulUnconsciousTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadpoolLov : int {
    None    = 0,
    Rychtar = 1,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::dialogmodule::S_LookAtOffset,class std::vector> {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_CompositeSelector : class wh::rpgmodule::storm::I_Selector {
    0x8 : selectors : class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemSetAsideElement* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_TriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_AddInterruptConceptNode> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DisguisePhases : int {
    None                = 0,
    InvestigateTailor   = 1,
    GetTheDisguise      = 2,
    GetTheWholeDisguise = 3,
    Done                = 4,
    NoLongerQuestItem   = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ChangeItemSetAsideEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LumberjackBehavior : int {
    WaitingForPlayer       = 0,
    BarkingForHelp         = 1,
    BarkingOnLeavingPlayer = 2,
    Teaching               = 3,
    Done                   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoorToPtacek : int {
    Enabled            = 0,
    DisabledWithKey    = 1,
    DisabledWithoutKey = 2,
    Done               = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TipState : int {
    None                          = 0,
    TipAvailable                  = 1,
    TipAvailableButEveryGiverDead = 2,
    TipGiven                      = 3,
    QuestStartedOrUnavailable     = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_FactionDefinitionID>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CommanderCommands : int {
    None              = 0,
    InitialCommands   = 1,
    DepoltCommands    = 2,
    KarlFranzCommands = 3,
    VilikCommands     = 4,
    Done              = 5,
    Failed            = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_InputDataPort> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_MinigameHandContentCondition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::definition::I_PortDefinition* {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > > : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::framework::C_ParamAction<struct wh::entitymodule::S_InteractiveSceneActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> >, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIFlashListQuest : class wh::guimodule::C_UIFlashObject {
    0x8  : Id             : class CryStringT<char>;
    0x10 : Name           : class CryStringT<char>;
    0x18 : Type           : int;
    0x1c : State          : int;
    0x20 : LastUpdateTime : int;
    0x24 : TrackingId     : int;
    0x28 : LevelId        : int;
    0x30 : LevelName      : class CryStringT<char>;
    0x38 : IsPlayerValid  : bool;
    0x40 : PlayerName     : class CryStringT<char>;
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_MemberFunction> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase, class wh::conceptmodule::C_MemberFunction {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum injuredJanDialogState : int {
    None       = 0,
    ShouldBark = 1,
    ShouldChat = 2,
    Done       = 3,
    Canceled   = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_SharedResource> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ba3750
enum enum wh::rpgmodule::E_SkillCheck::Type : unsigned int {
    persuade               = 0,
    impress                = 1,
    dread                  = 2,
    coerce                 = 3,
    dominate               = 4,
    might                  = 5,
    stealth                = 6,
    horse_riding           = 7,
    fencing                = 8,
    bard                   = 9,
    thievery               = 10,
    pickpocketing_obsolete = 11,
    alchemy                = 12,
    cooking                = 13,
    craftsmanship          = 14,
    smithing_obsolete      = 15,
    fishing                = 16,
    mining                 = 17,
    first_aid              = 18,
    drinking               = 19,
    survival               = 20,
    defense                = 21,
    weapon_sword           = 22,
    heavy_weapons          = 23,
    weapon_bow_obsolete    = 24,
    marksmanship           = 25,
    weapon_shield          = 26,
    weapon_mace_obsolete   = 27,
    weapon_dagger          = 28,
    weapon_large           = 29,
    weapon_unarmed         = 30,
    herbalism_obsolete     = 31,
    scholarship            = 32,
    tailoring              = 33,
    armourer               = 34,
    weaponsmithing         = 35,
    shoemaking             = 36,
    gunsmithing            = 37,
    bowyery                = 38,
    gambling               = 39,
    houndmaster            = 40,
    strength               = 41,
    agility                = 42,
    vitality               = 43,
    speech                 = 44,
    vision                 = 45,
    hearing                = 46,
    barter                 = 47,
    courage                = 48,
    storyProgress          = 49,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bb0bc8
enum enum wh::entitymodule::E_ActorState::Type : unsigned char {
    idle                 = 0,
    jump                 = 1,
    ledge                = 2,
    ladder               = 3,
    minigame             = 4,
    itemInteraction      = 5,
    dogInteraction       = 6,
    shooting             = 7,
    ragdoll              = 8,
    unconscious          = 9,
    hit                  = 10,
    carryCorpse          = 11,
    carried              = 12,
    carryItem            = 13,
    stoneThrowing        = 14,
    battleArcheryPlayer  = 15,
    battleArcheryNpc     = 16,
    blacksmithing        = 17,
    fall                 = 18,
    land                 = 19,
    standingUp           = 20,
    dying                = 21,
    dead                 = 22,
    trackview            = 23,
    holdingDecoy         = 24,
    combat               = 25,
    follow               = 26,
    cart                 = 27,
    sprinting            = 28,
    inAir                = 29,
    interactiveScene     = 30,
    dialogue             = 31,
    skipTime             = 32,
    fastTravel           = 33,
    cutscene             = 34,
    tenseCircumstance    = 35,
    crouch               = 36,
    horse                = 37,
    onBed                = 38,
    actorAnim            = 39,
    butchering           = 40,
    reading              = 41,
    readingFromInventory = 42,
    rear                 = 43,
    none                 = 44,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::guimodule::E_BlockUINotificationType::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PubTrespass : int {
    None           = 0,
    PlayerIsInPub  = 1,
    PlayIsNotInPub = 2,
    PlayerWasSeen  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetEquipDirectives* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum keyToSecretMintStash : int {
    None         = 0,
    Bures        = 1,
    BuresSoldier = 2,
    Player       = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AddScriptContextElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AutoTriggerPort* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_SkillLessonLevel {
    0x0 : Level : int;
    0x4 : Price : float;
};

//size in bytes: 0x8
//pointer dimension: 1
bool* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_projectileType : int {
    unknown = 0,
    arrow   = 1,
    pebble  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PunishmentType : int {
    Unknown   = 0,
    Pillory   = 1,
    Beating   = 2,
    Branding  = 3,
    Execution = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CookOnCourt : int {
    None         = 0,
    GoToCook     = 1,
    GoToCourt    = 2,
    IngameDialog = 3,
    Trialog      = 4,
    Bark         = 5,
    AfterTrialog = 6,
    LeaveCourt   = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::E_HibernateMode {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_AlchemyTable *,class std::allocator<class wh::entitymodule::C_AlchemyTable *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_AlchemyTable *,class std::allocator<class wh::entitymodule::C_AlchemyTable *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RecordingStationWest : int {
    None            = 0,
    WaitForStreamed = 1,
    WeaponSetup     = 2,
    Recording       = 3,
    Done            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartEntityTemplate::S_UnstanceResourceRecord* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::musicmodule::C_SkaldBoxProbe> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RozaStreaming : int {
    None                      = 0,
    StreamedKralovskeStribro  = 1,
    UnstreamedSetkaniVRatbori = 2,
    StreamedUtokNaMalesov     = 3,
    UnstreamErik              = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BuryGejza_BringBody : int {
    None               = 0,
    PickUpBody_Started = 1,
    PickUpBody_Updated = 2,
    BringBodyToGlade   = 3,
    PutBodyInPlace     = 4,
    BodyIsInPlace      = 5,
    Failed             = 6,
    Aborted            = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingAndSchedule : int {
    None      = 0,
    Streaming = 1,
    Schedule  = 2,
    Done      = 3,
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::xgenaimodule::C_SmartEntity : class wh::xgenaimodule::C_LinkableObject {
    //Getter: WHGame.dll+0x3377ed0
    get : Position : struct Vec3_tpl<float>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_InfiniteHoldInteractionTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RozaBehaviorChain : int {
    None             = 0,
    Entrance         = 1,
    PreBats          = 2,
    Bats             = 3,
    PreWater         = 4,
    WaitingForDialog = 5,
    WaitingForUber   = 6,
    BeCarried        = 7,
    PostWater        = 8,
    ReactToNoise     = 9,
    ToRuthardka      = 10,
    WaitingAtDoor    = 11,
    WaitingAtWindow  = 12,
    ChatAtWindow     = 13,
    WaitPlayer       = 14,
    Done             = 15,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab3de8
enum enum wh::rpgmodule::E_RelationType : int {
    friend  = 0,
    neutral = 1,
    enemy   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_NoUnstanceCondition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_ApseViewTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum beggarBarboraAliveness : int {
    Alive = 0,
    Dead  = 1,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::entitymodule::clothing::C_SkinElement : class wh::entitymodule::clothing::C_ElementBase {
    //Getter: WHGame.dll+0x573d54
    get  : EquipmentPart : class CryStringT<char>;
    0xc  : BodyLayerId   : class tiny::optional<int,-2147483648,0>;
    0x18 : Model         : class std::optional<class CryStringT<char> >;
    0x28 : Material      : class std::optional<class CryStringT<char> >;
    0x10 : IsFinalLayer  : class tiny::optional<bool,0,0>;
    0x11 : KeepBodyLayer : class tiny::optional<bool,0,0>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoldierState : int {
    None            = 0,
    SoldierReady    = 1,
    SoldierNotReady = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zachranaPtacka_prisonersMovementMode : int {
    Sneak = 0,
    Run   = 1,
    Wait  = 2,
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::framework::C_SaveGameDescription {
    0x44 : FormatVersion                     : int;
    0x8  : SaveType                          : enum wh::framework::E_SaveGameType::Type;
    0xc  : SaveId                            : int;
    0x18 : SaveTime                          : __int64;
    0x20 : LevelName                         : class CryStringT<char>;
    0x28 : PlayerId                          : int;
    0x40 : IsCorrupted                       : bool;
    0x10 : NestedSaveId                      : int;
    0x38 : UIDescription                     : class CryStringT<char>;
    0x30 : QuestNameOverride                 : class CryStringT<char>;
    0x48 : BuildInfo                         : class CryStringT<char>;
    0x50 : AssemblyDate                      : class CryStringT<char>;
    0x58 : GameReleaseVersion                : int;
    0x5c : NewGameReleaseVersion             : int;
    0x60 : RequiresStreamingInstallCompleted : bool;
    0x80 : GameMode                          : enum wh::game::E_GameMode::Type;
    0x68 : DLCs                              : class std::vector<class wh::framework::C_SaveGameDescription::C_DLCDescription,class std::allocator<class wh::framework::C_SaveGameDescription::C_DLCDescription> >;
    0x90 : UsedMods                          : class std::vector<struct wh::S_ModInfo,class std::allocator<struct wh::S_ModInfo> >;
    0xa8 : Locations                         : class std::vector<struct wh::rpgmodule::S_LocationId,class std::allocator<struct wh::rpgmodule::S_LocationId> >;
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_EntityScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_TypedItemClass {
    0x8 : Type    : int;
    0xc : SubType : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a154c8
enum enum wh::playermodule::E_BlacksmithRecipeCategory : int {
    ShortSword = 0,
    LongSword  = 1,
    Axe        = 2,
    Other      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct ISystem* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a708
enum enum wh::rpgmodule::E_CompanionType::Type : unsigned char {
    Horse = 0,
    Dog   = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_CharacterComponentTagRoughness {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartObject *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dogCompanionPriority : int {
    impossible     = 0,
    lowest         = 1,
    doable         = 2,
    bestFun        = 3,
    duty           = 4,
    follow         = 5,
    attack         = 6,
    executingOrder = 7,
    hit            = 8,
    gettingOrder   = 9,
    runAway        = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_AddStashDefaultItem* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_UIApseView {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZbranePanaSemina_QuestCancelledBecauseOfWedding : int {
    None           = 0,
    WeddingStarted = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::NPCState::S_UnstanceTransitionData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SacrificalItemHoldership : int {
    None       = 0,
    WithPlayer = 1,
    Sacrificed = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionRequiresOtherHandEmpty* {
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::playermodule::C_SaveGame : class wh::conceptmodule::C_Node, class wh::conceptmodule::C_SharedResource, class wh::playermodule::C_SaveGameBase {
    0x10 : Name                  : class CryStringT<char>;
    0x18 : RuntimeState          : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports                 : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView             : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x0  : EnqueueSave           : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x40 : Type                  : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_AutoSaveType::Type>*;
    0x80 : Objective             : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_ObjectiveName>*;
    0xc0 : ObjectiveNameOverride : class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SmartAreaAsset* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemsToReturnElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ambusherTalker : int {
    None                = 0,
    TalkingSlowly       = 1,
    WantPlayerAttention = 2,
    TalkingAggressively = 3,
    Done                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekNebakovACesta : int {
    None              = 0,
    CestaKeStajim     = 1,
    CekaniNaHenryho   = 2,
    NedockalSeOdchazi = 3,
    UtekKTroskam      = 4,
    JsemNaTroskach    = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AttacksAroundDuel : int {
    None                         = 0,
    BystanderTargetedOutsideDuel = 1,
    BystanderTargetedInsideDuel  = 2,
    NoblemanTargetedOutsideDuel  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CombatAutomationsElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hracVidenStatus : int {
    Neviden              = 0,
    VidenLektvar         = 1,
    VidenLekvarIMalovani = 2,
    VidenMalovani        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum naTroskachProgress : int {
    prison          = 0,
    outerCourtyard  = 1,
    insideCourtyard = 2,
    questDone       = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class XmlNodeRef {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_EnableAllowedWeaponsInQAM* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PubSkirmishSide : int {
    None          = 0,
    WithCumans    = 1,
    WithVillagers = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemHolder *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RatborBattleControl : int {
    None                       = 0,
    FirstWaveActive            = 1,
    SecondWaveRunTowardsPlayer = 2,
    SecondWaveActive           = 3,
    Done                       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RozdeleniQuestu : int {
    None               = 0,
    PoDialoguSCenkem   = 1,
    PoDialoguSVazounem = 2,
    FailQuestu         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VazounProfile : int {
    LevelStart = 0,
    Unstream   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_CustomOperator* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetReincarnationParams : class wh::rpgmodule::storm::I_Operator {
    0x8 : varyInventory   : class boost::optional<bool>;
    0xc : combatLevelCoef : class boost::optional<float>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab4748
enum enum wh::conceptmodule::E_PortVisibility : int {
    Interface = 0,
    Internal  = 1,
    External  = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::framework::S_TimeOfDay {
    0x0 : Value : __int64;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zabyFailZacatekS23 : int {
    None              = 0,
    NotAvailable      = 1,
    FailingInProgress = 2,
    Failed            = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::conceptmodule::E_ConceptTypeMetadata {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::musicmodule::S_WorldStateToggleId>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Klukovina : int {
    None                = 0,
    Active              = 1,
    Done                = 2,
    Failed              = 3,
    Failed_somebodyDied = 4,
    Abadonded           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LearnMoreAboutFights : int {
    None                               = 0,
    Started                            = 1,
    SpeakToZdeslavWhenBailiffNotAround = 2,
    Completed                          = 3,
    Aborted                            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
const unsigned long* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::C_DialogModule* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorCarryItemTrigger* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::guimodule::C_UIFlashMapQuestMarker : class wh::guimodule::C_UIFlashObject {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x20 : Type            : class CryStringT<char>;
    0x28 : LevelId         : int;
    0x2c : TrackingId      : int;
    0x30 : ObjectiveNumber : int;
    0x34 : XPos            : float;
    0x38 : YPos            : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ActiveTriggerPort* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerAddContext : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role       : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fc1c
    get  : Context    : class CryStringT<char>;
    0x20 : Invert     : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CartActionOut* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KrystofFocusCam : int {
    None      = 0,
    CamActive = 1,
    CamDone   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_SkirmishStatistics *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportToBailiff : int {
    None            = 0,
    ReportToBailiff = 1,
    Reported        = 2,
    Failed          = 3,
    Aborted         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum jobResult : int {
    None    = 0,
    Bad     = 1,
    Good    = 2,
    Perfect = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
struct ICharacterManager {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::combatmodule::C_CombatAnimationStepDatabase : class wh::combatmodule::C_CombatTreeKeyIndexedDatabase<class wh::combatmodule::C_CombatAnimationStepData>, class wh::databasemodule::C_ObjectDatabase<class wh::combatmodule::C_CombatAnimationStepData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::combatmodule::C_CombatAnimationStepData,class std::allocator<class wh::combatmodule::C_CombatAnimationStepData> > const >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_ProxyCounter<int>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIBook* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::NPCState::S_UnstanceData::S_Phase* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::storm::C_AttributeOperator<struct wh::rpgmodule::storm::operation::Set> : class wh::rpgmodule::storm::I_Operator {
    0x8  : skill     : enum wh::rpgmodule::E_SoulProperty::Type;
    0x8  : stat      : enum wh::rpgmodule::E_SoulProperty::Type;
    0xc  : value     : class boost::optional<float>;
    0x14 : minValue  : class boost::optional<float>;
    0x1c : maxValue  : class boost::optional<float>;
    0x24 : scaleWith : class boost::optional<enum wh::rpgmodule::E_SoulProperty::Type>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum petrLeaveLevel : int {
    None         = 0,
    TimerRunning = 1,
    LeavingLevel = 2,
    LeftLevel    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SecretPassageHole : int {
    Undiggable         = 0,
    WaitingForDiggable = 1,
    Diggable           = 2,
    DuggedWithDirt     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_DisableAlchemyTable* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7ab18
enum enum E_ClothCollisionMode::Type : unsigned char {
    IterativeShortest  = 0,
    AlongSkinnedNormal = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stealthClothing : int {
    None      = 0,
    Started   = 1,
    Updated   = 2,
    Completed = 3,
    Aborted   = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::combatmodule::C_CombatAnimationStepData {
    0x8  : Name : class CryStringT<char>;
    0x10 : Step : int;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::entitymodule::S_ArmorSurfaceName {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LootFromHangman : int {
    None          = 0,
    LootMaHangman = 1,
    LootMaLooter  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WagonPush : int {
    None               = 0,
    GettingReadyToPush = 1,
    Pushing            = 2,
    WagonInPlace       = 3,
    Done               = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_MinigameHandContentCondition : class wh::xgenaimodule::NPCState::I_Condition {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Doubleprogress : int {
    None    = 0,
    Started = 1,
    Done    = 2,
    Done2   = 3,
    Aborted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KaterinaPraying : int {
    None    = 0,
    Active  = 1,
    Leaving = 2,
    Done    = 3,
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::conceptmodule::C_ElementAtBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Value        : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_Item *,class std::allocator<class wh::entitymodule::C_Item *> > >* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_InstantPropCommand* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindWolfPackProgress : int {
    None    = 0,
    Active  = 1,
    Updated = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3afefc0
enum enum wh::questmodule::E_QuestType : int {
    Main     = 0,
    Side     = 1,
    Activity = 2,
    Event    = 3,
    Micro    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetReward : int {
    None      = 0,
    GetReward = 1,
    Done      = 2,
    Canceled  = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerEnableRoleOnHub : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get : TargetGuid  : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get : Role        : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fca0
    get : EnabledRole : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Brawl : int {
    None                    = 0,
    RandomStart             = 1,
    AfterCutscene           = 2,
    KnockedOutAfterCutscene = 3,
    EnduredAfterCtuscene    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertStreaming : int {
    None                          = 0,
    StreamedPosledniPomazani      = 1,
    UnstreamedPosledniPomazani    = 2,
    StreamedSedmStatecnych        = 3,
    StreamedSetkaniVRatbori1      = 4,
    StreamedSetkaniVRatbori2      = 5,
    UnstreamedHladAZmar           = 6,
    StreamedHladAZmar             = 7,
    UnstreamedStealthMiseZaJindru = 8,
    StreamedZoufalaObranaZaBohutu = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MalesovDrawbridge : int {
    None                = 0,
    AnimatedWithBarrier = 1,
    Animated            = 2,
    DrawbridgeDestroyed = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::entitymodule::S_DogActionQueryData : struct wh::entitymodule::S_ActionQueryData, struct wh::entitymodule::S_ActionIdleQueryData {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_AddScheduleItemOperator : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x2c83bcc
    get  : start    : class CryStringT<char>;
    //Getter: WHGame.dll+0x2c83a40
    get  : scatter  : class CryStringT<char>;
    0x10 : activity : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::C_SelectedHorseDecision* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_BlacksmithRecipeId> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RunThroughForrest : int {
    None                       = 0,
    Teleport                   = 1,
    RunToFirstCrossroad        = 2,
    AnimationAtFirstCrossroad  = 3,
    RunToSecondCrossroad       = 4,
    AnimationAtSecondCrossroad = 5,
    RunToTreeTrunk             = 6,
    WaitForShoot               = 7,
    RunToEndOfForrestPath      = 8,
    OnEndOfForrestPath         = 9,
    BeforeFallenTree           = 10,
    Done                       = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarlikSouboj : int {
    None            = 0,
    PredSoubojem    = 1,
    SoubojSKarlikem = 2,
    SoubojSeVsemi   = 3,
    HracUtekl       = 4,
    HracVyhral      = 5,
    KonecSouboje    = 6,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Function> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase, class wh::conceptmodule::C_Function {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_VariableRequirementType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum drunkenCzechLuringKozinaOut : int {
    None                     = 0,
    LureKozinaOut            = 1,
    CaughtKozinaDuringAmbush = 2,
    Failed                   = 3,
    Canceled                 = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum perfumeState : int {
    None   = 0,
    Stash  = 1,
    Player = 2,
    Beta   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RewardFromLaszlo : int {
    None              = 0,
    TalkToLaszlo      = 1,
    TalkedAboutReward = 2,
    LaszloDied        = 3,
};

//size in bytes: 0x27f0
//pointer dimension: 0
class wh::guimodule::C_UIApse : class wh::guimodule::C_UIBase, class wh::framework::I_UIApse {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3992e68
enum enum wh::engine3d::E_HLodState::Type : unsigned char {
    Hidden         = 0,
    Far            = 1,
    LoadingNear    = 2,
    DissolveToNear = 3,
    Near           = 4,
    LoadingFar     = 5,
    DissolveToFar  = 6,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_AIConceptSignal,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VavaksKeyItemState : int {
    None               = 0,
    InSlot             = 1,
    OnPlayerQuest      = 2,
    OnPlayerAfterQuest = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WeaponDrawn : int {
    Holstered = 0,
    Drawn     = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MalesovScheduleState : int {
    CalmBeforeCapon    = 0,
    AlarmedBeforeCapon = 1,
    CalmAfterCapon     = 2,
    AlarmedAfterCapon  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavodVysledky : int {
    None                   = 0,
    NaposledyJindraVyhral  = 1,
    NaposledyJindraProhral = 2,
    NaposledyJindraNedojel = 3,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeCrouchAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrepareToGoToItalianCourt : int {
    None              = 0,
    SpokeWithZizka    = 1,
    PutOnItalianRobes = 2,
    ToldGodwinToGo    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InfiltrationCimburk : int {
    None           = 0,
    Active         = 1,
    PlayerDetected = 2,
    PlayerLeft     = 3,
    MiroslavSaved  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KatherineClothing : int {
    Default                 = 0,
    OtherDress              = 1,
    OtherDress_WithPinafore = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KrystofOderinMigration : int {
    InRatbor  = 0,
    InSuchdol = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ConsumableItemClass* {
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::xgenaimodule::C_AreaUnion : class wh::xgenaimodule::C_LinkableObject, class wh::xgenaimodule::I_Area {
    //Getter: WHGame.dll+0x3377ed0
    get : Position : struct Vec3_tpl<float>;

    //vtable offset: 0x10
    GetName( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantHorseEquip : int {
    NoOverride                   = 0,
    ZachranaPtackaEscapeOverride = 1,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::entitymodule::C_AlchemyTable {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterSlotItem : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : IconId   : class CryStringT<char>;
    0x20 : Stolen   : unsigned int;
    0x24 : Dirt     : float;
    0x28 : Blood    : float;
    0x2c : BuffIcon : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_EntityScriptContext> > {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_ItemClassGUID {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum test_zachrana_synchroWalk : int {
    None    = 0,
    Start   = 1,
    Success = 2,
    Fail    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestAvailability : int {
    None      = 0,
    Available = 1,
    Done      = 2,
    Aborted   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_SaveGameWithNotification* {
};

//size in bytes: 0x8
//pointer dimension: 1
enum wh::shared::E_DLC::Type* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WeaponHandling : int {
    None                       = 0,
    EquippingHalberd           = 1,
    EquippingHalberdAfterPlay  = 2,
    InArenaWithHalberd         = 3,
    GoingToTentForShortSword   = 4,
    GoingToArenaWithShortSword = 5,
    InArenaWithShortSword      = 6,
    GoingToTentForLongSword    = 7,
    GoingToArenaWithLongSword  = 8,
    InArenaWithLongSword       = 9,
    AfterLastDuel              = 10,
    Done                       = 11,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ForEach* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_BuffTagTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZiskaniKone : int {
    None              = 0,
    PromluvSPodkonnim = 1,
    ProhlizeniKone    = 2,
    KunPrevzat        = 3,
    KunNecham         = 4,
    FailPacholekZabit = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_SkillTeacher* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionCarried* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DayOfTheWeek : int {
    Monday    = 0,
    Tuesday   = 1,
    Wednesday = 2,
    Thursday  = 3,
    Friday    = 4,
    Saturday  = 5,
    Sunday    = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_OintmentItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_PlayerId>* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::BehaviorTree::S_ActionCantBeInterrupteEvent : struct wh::xgenaimodule::BehaviorTree::S_Event {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OriginalSwordHoldership : int {
    DefaultInCumansStash          = 0,
    ManipulatedByHenry            = 1,
    ReturnedOriginalToCumansStash = 2,
    ReturnedCopyToCumansStash     = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::animationmodule::C_FragmentIdleStateDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::animationmodule::S_FragmentIdleStateData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::animationmodule::S_FragmentIdleStateData,class std::allocator<struct wh::animationmodule::S_FragmentIdleStateData> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StraznyUVezeni : int {
    None             = 0,
    StrazHlida       = 1,
    StrazJdeKZizkovi = 2,
    StrazJeNasrana   = 3,
    Aborted          = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GrozavStepanDeathWatch : int {
    BothAlive  = 0,
    GrozavDead = 1,
    StepanDead = 2,
    BothDead   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeEquipmentElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_resolutionKind : int {
    fine             = 0,
    leaveUnconscious = 1,
    punishment       = 2,
    questPunishment  = 3,
    skillCheck       = 4,
    fight            = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleSouthFight : int {
    None      = 0,
    Middle    = 1,
    Door      = 2,
    Archers   = 3,
    Tower     = 4,
    Pallisade = 5,
    Done      = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetBody* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_EntityScriptContextPreset {
};

//size in bytes: 0x58
//pointer dimension: 0
struct wh::entitymodule::S_ActorActionTransitionToCombatQueryData : struct wh::entitymodule::S_ActionQueryData {
};

//size in bytes: 0x80
//pointer dimension: 0
struct SimulationParams {
    0x74 : ClampType             : enum SimulationParams::ClampType;
    0x7a : ActivateSimulation    : bool;
    0x7b : Redirect              : bool;
    0x7c : SimFPS                : unsigned char;
    0x20 : MaxAngle              : float;
    0x24 : Radius                : float;
    0x28 : SphereScale           : struct Vec2_tpl<float>;
    0x30 : DiskRotation          : struct Vec2_tpl<float>;
    0x38 : Mass                  : float;
    0x3c : Gravity               : float;
    0x40 : Damping               : float;
    0x44 : Stiffness             : float;
    0x48 : PivotOffset           : struct Vec3_tpl<float>;
    0x54 : SimulationAxis        : struct Vec3_tpl<float>;
    0x60 : StiffnessTarget       : struct Vec3_tpl<float>;
    0x6c : Capsule               : struct Vec2_tpl<float>;
    0x18 : ProjectionType        : int;
    0x0  : DirTransJoint         : class CCryName;
    0x78 : DebugSetup            : bool;
    0x79 : DebugText             : bool;
    //Getter: WHGame.dll+0x2513494
    get  : ProxyNames            : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x10 : BlendControlJointName : class CCryName;
    0x1c : BlendControlAxis      : enum EAttachmentBlendControlJointAxisToUse;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff290
enum enum wh::conceptmodule::E_HibernateMode::Type : unsigned char {
    None       = 0,
    Auto       = 1,
    Script     = 2,
    EventPlace = 3,
    DLC        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PromluvSMenhartemPoTurnaji : int {
    None                          = 0,
    PromluvSiSMenhartem           = 1,
    PockejAzNemciPreberouSermirnu = 2,
    PromluvSiZasSMenhartem        = 3,
    HenrySiSMenhartemPromluvil    = 4,
    Fail                          = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Studna : int {
    None   = 0,
    Dialog = 1,
    Done   = 2,
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_ScriptContextPresetDatabaseNode* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartPosition {
};

//size in bytes: 0x4
//pointer dimension: 0
unsigned long {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GuardAtGate : int {
    None  = 0,
    Sleep = 1,
    Watch = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_EnableRoleOnHubElement* {
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_PickUpFromSetAsideAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction, class wh::xgenaimodule::NPCState::C_PickUpAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Migrations : int {
    Certovka            = 0,
    SpyingMalesovStart  = 1,
    SpyingMalesovEnd    = 2,
    InSuchdol           = 3,
    InRuthardka         = 4,
    InSuchdolAfterLegat = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefeatLaszloFarkas : int {
    None             = 0,
    FightInProgress  = 1,
    LaszloIsDefeated = 2,
    JanWasKilled     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DonesOdpusteni : int {
    None                      = 0,
    DonesVdoveOdpusteni       = 1,
    DonesVdoveOdpusteniMec    = 2,
    DonesVdoveOdpusteniKonrad = 3,
    Done                      = 4,
    Fail                      = 5,
    Abort                     = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Function> {
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::guimodule::C_ShowMapMarker : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : MarkerObject : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0xd8 : MarkerType   : class wh::conceptmodule::C_TypedPortRef<enum wh::guimodule::E_ConceptMarkerType::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::I_Area* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeStanceEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8  : DataSource                        : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : TargetStance                      : enum wh::entitymodule::E_StanceCategory::Type;
    0x14 : RequiresExplicitActionRuntimeInit : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FoodForDog : int {
    None    = 0,
    GetFood = 1,
    FeedDog = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_InteractorOverride> {
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::entitymodule::S_EquippableItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : Visibility                     : float;
    0xb4 : Conspicuousness                : float;
    0xb8 : Charisma                       : float;
    0xbc : RPGBuffWeight                  : float;
    0xc0 : SocialClassId                  : int;
    0xc4 : WealthLevel                    : int;
    0xe0 : MaxQuality                     : unsigned int;
    0xc8 : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get  : Clothing                       : class CryStringT<char>;
};

//size in bytes: 0x90
//pointer dimension: 0
struct SVClothParams {
    0x89 : ForceSkinning                         : bool;
    0x0  : ForceSkinningTranslateThreshold       : float;
    0x8a : CheckAnimationRewind                  : bool;
    0x4  : DisableSimulationTimeRange            : float;
    0x8  : TimeStep                              : float;
    0xc  : TimeStepsMax                          : int;
    0x10 : NumIterations                         : int;
    0x14 : CollideEveryNthStep                   : int;
    0x88 : CollisionMode                         : enum E_ClothCollisionMode::Type;
    0x18 : GravityFactor                         : float;
    0x1c : AirResistance                         : float;
    0x20 : StretchStiffness                      : float;
    0x24 : ShearStiffness                        : float;
    0x28 : BendStiffness                         : float;
    0x2c : BendStiffnessByTrianglesAngle         : float;
    0x30 : PullStiffness                         : float;
    0x34 : Friction                              : float;
    0x38 : RigidDamping                          : float;
    0x3c : SpringDamping                         : float;
    0x8c : SpringDampingPerSubstep               : bool;
    0x40 : CollisionDampingTangential            : float;
    0x8b : UseNearestNeighborDistanceConstraints : bool;
    0x44 : NndcAllowedExtension                  : float;
    0x48 : NndcMaximumShiftFactor                : float;
    0x4c : NndcShiftCollisionFactor              : float;
    0x50 : ResetDampingRange                     : int;
    0x54 : ResetDampingFactor                    : float;
    0x58 : MaxAnimDistance                       : float;
    0x5c : FilterLaplace                         : float;
    0x78 : BlendControlJointName                 : class CCryName;
    0x84 : BlendControlAxis                      : enum EAttachmentBlendControlJointAxisToUse;
    0x68 : SimBinding                            : class CryStringT<char>;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_SaveLockEffectReason::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_CartActionBase* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_Stash* {
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CartActionIn : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_CartActionBase {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x4
//pointer dimension: 0
enum rttr::E_MethodMetadata {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::environmentmodule::S_WeatherProfileData::S_TimeOfDayInterval* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3afef70
enum enum wh::questmodule::E_LogType : int {
    None      = 0,
    Started   = 1,
    Updated   = 2,
    Completed = 3,
    Canceled  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Klic : int {
    None       = 0,
    NpcMaKlic  = 1,
    HracMaKlic = 2,
    NemaKlic   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamLooting : int {
    None      = 0,
    Praghaus  = 1,
    Smitny1   = 2,
    Smitny2   = 3,
    Zbrojnice = 4,
    Knihovna  = 5,
    Done      = 6,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceCondition : class wh::xgenaimodule::NPCState::I_Condition, class wh::xgenaimodule::NPCState::C_UnstanceConditionBase {
    0x8 : RequiredUnstance : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OptionalTalkToRadmil : int {
    None                 = 0,
    Started              = 1,
    Completed            = 2,
    AbortedTalkedToGerda = 3,
    AbortedQuestFail     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3bdf7c0
enum enum wh::playermodule::E_AlchemyItemType : int {
    E_AIT_BOWL         = 0,
    E_AIT_SANDGLASS    = 1,
    E_AIT_MORTAR       = 2,
    E_AIT_PESTLE       = 3,
    E_AIT_RETORT       = 4,
    E_AIT_POTION_FLASK = 5,
    E_AIT_POT          = 6,
    E_AIT_HERBS1       = 7,
    E_AIT_HERBS2       = 8,
    E_AIT_HERBS3       = 9,
    E_AIT_SPECIAL1     = 10,
    E_AIT_SPECIAL2     = 11,
    E_AIT_SPECIAL3     = 12,
    E_AIT_GLASS1       = 13,
    E_AIT_GLASS2       = 14,
    E_AIT_GLASS3       = 15,
    E_AIT_GLASS4       = 16,
    E_AIT_FLASK_FAKE   = 17,
    E_AIT_BELLOWS      = 18,
    E_AIT_BOOK         = 19,
    E_AIT_POT_HALTER   = 20,
    E_AIT_LAST         = 21,
};

//size in bytes: 0x8
//pointer dimension: 1
wchar_t* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_ClothingMaterial* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_AddLinkElement* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIFlashListItemSelection : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashListItem {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : ClassId         : int;
    0x20 : Category        : class CryStringT<char>;
    0x28 : IconId          : class CryStringT<char>;
    0x30 : Amount          : float;
    0x34 : MainStat        : float;
    0x38 : Health          : float;
    0x3c : Quality         : unsigned int;
    0x40 : ItemHealthState : unsigned int;
    0x44 : Weight          : float;
    0x48 : Price           : float;
    0x4c : IsEnable        : bool;
    0x50 : OutfitPresence  : unsigned int;
    0x54 : IsQuestItem     : bool;
    0x58 : Stolen          : unsigned int;
    0x5c : Dirt            : float;
    0x60 : Blood           : float;
    0x64 : BuffIcon        : unsigned int;
    0x68 : BuffDefId       : class CryStringT<char>;
    0x70 : IsSelected      : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
const class rttr::type* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerTournamentPreset : int {
    None           = 0,
    SwordAndShield = 1,
    LongSword      = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekJourneyToCamp : int {
    None                         = 0,
    TourToWoods                  = 1,
    PtacekDismountsInWoods       = 2,
    PtacekBeforeNoticingPoachers = 3,
    PtacekNoticedPoachers        = 4,
    JourneyFinished              = 5,
    JourneyAborted               = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_ButtonId {
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::playermodule::C_GenericRandomEventVariant>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ConcubineAtTheWedding : int {
    None              = 0,
    Started           = 1,
    UpdatedAtWedding  = 2,
    CompletedAtTrosky = 3,
    Failed            = 4,
    Aborted           = 5,
};

//size in bytes: 0x10
//pointer dimension: 0
struct Vec4_tpl<float> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::E_NodeQueryQuantificator {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PaintedBullPlayerPresence : int {
    None          = 0,
    PlayerSeen    = 1,
    PlayerNotSeen = 2,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::C_MinigameDecision : class wh::xgenaimodule::I_StoredDecision {
};

//size in bytes: 0x1c8
//pointer dimension: 0
class wh::entitymodule::C_CarryItemTarget : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_Effect> {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98  : CIPiles         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > >*;
    0xf0  : DepositTracker  : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;
    0x180 : OnItemDeposited : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnFilled        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_BodyPart {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Library> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChurchStJamesStreamingStates : int {
    CryptPassageClosed = 0,
    CryptPassageOpened = 1,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_AverageCounter<float> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::conceptmodule::C_Level>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DiceMinigameResult : int {
    None            = 0,
    PlayerWon       = 1,
    PlayerLost      = 2,
    PlayerLeft      = 3,
    GameInterrupted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanOnCimburk : int {
    None         = 0,
    Cimburk      = 1,
    OutOfCimburk = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_InputTriggerPort* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_AssetPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort, class wh::conceptmodule::C_OutputDataPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;
    //Getter: WHGame.dll+0x24db8e0
    get  : Alias : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >* {
};

//size in bytes: 0x8
//pointer dimension: 1
unsigned int* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindMika : int {
    None    = 0,
    Started = 1,
    Done    = 2,
    Aborted = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::framework::C_SaveGameDescription* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AddSoulDefaultItem* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AssetStreamed : int {
    IsStreamed  = 0,
    IsUntreamed = 1,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_Item *,class std::allocator<class wh::entitymodule::C_Item *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemClassPhase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kubaParaluInfiltrace : int {
    None                  = 0,
    InfiltrujDum          = 1,
    MuzeDalAlePriselPozde = 2,
    HracVDome             = 3,
    HracoviDochaziCas     = 4,
    HracUzMusiJit         = 5,
    NaselVlasy            = 6,
    HracPokazilInfiltraci = 7,
    Fail                  = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dealWithDog : int {
    None           = 0,
    GoNearDog      = 1,
    FindMissingDog = 2,
    DealWithDog    = 3,
    Done           = 4,
    Canceled       = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_weaponSet : int {
    oversized = 0,
    primary   = 1,
    secondary = 2,
    none      = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_BlacksmithWorkpieceDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_BlacksmithWorkpiece,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_BlacksmithWorkpiece,class std::allocator<class wh::playermodule::C_BlacksmithWorkpiece> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::C_AddSoulDefaultItem::E_Purpose {
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::entitymodule::S_ActionAnimRequest : struct wh::entitymodule::S_ActionRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdate : int {
    None     = 0,
    Active   = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NalezeniZnacekBezVepre : int {
    None      = 0,
    Active    = 1,
    FindMarks = 2,
    Completed = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_SoulArchetype* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Item *>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StaticInstancePlaceholder* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_animalAbuseKind : int {
    none    = 0,
    assault = 1,
    murder  = 2,
    theft   = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::S_VariableInfo {
    0x0  : name            : class CryStringT<char>;
    0x8  : type            : class CryStringT<char>;
    0x10 : form            : enum wh::xgenaimodule::E_VariableForm::Type;
    0x18 : values          : class CryStringT<char>;
    0x20 : isPersistent    : bool;
    0x22 : isOptional      : bool;
    //Getter: WHGame.dll+0x3397238
    get  : requirementType : class boost::optional<enum wh::xgenaimodule::E_VariableRequirementType::Type>;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::game::C_ContentFilterSubstitution {
    0x8  : OriginalObjectPath    : class CryStringT<char>;
    0x10 : Filter                : enum wh::framework::E_ContentFilter::Type;
    0x18 : SubstitutedObjectPath : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZjistiVoditkaPisar : int {
    None                            = 0,
    PisarNoWeddingWithMiller        = 1,
    PisarAfterMillersWedding        = 2,
    KnihuMaNikvardWeddingWithMiller = 3,
    KnihuMaNikvardNoWedding         = 4,
    Abort                           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CumanFoodHoldership : int {
    None                  = 0,
    InTroskoviceKitchen   = 1,
    OnPlayer              = 2,
    DeliveredToCumanTable = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressCerti : int {
    None   = 0,
    Active = 1,
    Update = 2,
    Done   = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::environmentmodule::S_WeatherProfileData::S_Condition {
    0x0 : Min : float;
    0x4 : Max : float;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_SmartEntityTemplate,class std::list> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum bathhouse_serviceType : int {
    None          = 0,
    Clean         = 1,
    CureClean     = 2,
    CleanHorse    = 3,
    Love          = 4,
    Love_censored = 5,
    BarberHaircut = 6,
    BarberBeard   = 7,
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_DieItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
    //Getter: WHGame.dll+0x295fdec
    get  : SideWeights                    : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x295fdc8
    get  : SideValues                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<unsigned int>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HenryActivatingPubScene : int {
    BeforeTracking      = 0,
    LeaveLargeAreaFirst = 1,
    OutsideLargeArea    = 2,
    OutsideSmallArea    = 3,
    TrackingFinished    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanHome : int {
    Bylansko = 0,
    Cimburk  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Party : int {
    None    = 0,
    Dialog1 = 1,
    Dialog2 = 2,
    Done    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TutorialTrainerState : int {
    InDayCycle                          = 0,
    InDayCycleAfterPlayerLeftHimWaiting = 1,
    OnTheWay                            = 2,
    AtTrainingGround                    = 3,
    Training                            = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BlamingInnocents : int {
    None       = 0,
    Started    = 1,
    Eliminated = 2,
    ColdFeet   = 3,
    Failed     = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff100
enum enum wh::entitymodule::E_StanceBy::Type : unsigned char {
    none    = 0,
    table   = 1,
    chest   = 2,
    tent    = 3,
    shelter = 4,
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ExplicitFragmentAnimAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Fragment             : class CryStringT<char>;
    0x1a8 : Tags                 : class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > >;
    0x1c0 : EventReference       : enum wh::xgenaimodule::NPCState::E_ExplicitFragmentEventReference::Type;
    0x1c4 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::C_ConceptDefinitionsSerializationRoot {
    //Getter: WHGame.dll+0x2656a74
    get : Types : class std::vector<class std::shared_ptr<class wh::conceptmodule::definition::C_TypeDefinition>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::definition::C_TypeDefinition> > >;
    //Getter: WHGame.dll+0x2656874
    get : Nodes : class std::vector<class std::shared_ptr<class wh::conceptmodule::definition::I_NodeDefinition>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::definition::I_NodeDefinition> > >;
};

//size in bytes: 0x8
//pointer dimension: 0
unsigned __int64 {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InspectingCross : int {
    None              = 0,
    StartAreaMarker   = 1,
    StartPlaceMarker  = 2,
    UpdatePlaceMarker = 3,
    Done              = 4,
    Aborted           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseDelivery : int {
    None            = 0,
    PlayerMounted   = 1,
    PlayerUnmounted = 2,
    HorseDelivered  = 3,
    HorseDead       = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::I_ValueComparatorSelector : class wh::rpgmodule::storm::I_Selector {
    0x8 : min   : int;
    0xc : max   : int;
    //Getter: WHGame.dll+0x19a0f90
    get : value : int;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_FTDisableRandomEvents {
};

//size in bytes: 0x1d
//pointer dimension: 0
struct S_TriggerEffectCommand {
    0x0 : Mode                     : enum E_TriggerEffectMode::Type;
    0x1 : TriggerEffectCommandData : struct S_TriggerEffectCommandData;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_SkaldBoxProbe* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zradaNemcu : int {
    None                        = 0,
    HenryMuzeZradit             = 1,
    HenrySeMaDomluvitSJimramem  = 2,
    HenrySiNepromluvilSJimramem = 3,
    HenrySeDohodlSJimramem      = 4,
    TurnajVyhlasen              = 5,
    KutnohorstiVyhrali          = 6,
    KutnohorstiProhrali         = 7,
    Fail                        = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DonjonFriendsFight : int {
    None    = 0,
    Wait    = 1,
    Prepare = 2,
    Fight   = 3,
    Done    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JanekJaroslavStreamState : int {
    None                     = 0,
    StreamedDebug            = 1,
    UnstreamedDebug          = 2,
    StreamedOblehaniSuchdole = 3,
    UnstreamedStealthMise    = 4,
    StreamedFinale           = 5,
    UnstreamedAfterMainQuest = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_RandomEventOptionResult {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DivadylkoState : int {
    None           = 0,
    DefaultWait    = 1,
    EventBehav     = 2,
    WaitAfterEvent = 3,
    Done           = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AnimalsDistance : int {
    None                = 0,
    NotInteractedYet    = 1,
    PlayerNear          = 2,
    WaitForIntermission = 3,
    Done                = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AddFactionRelationWithinArray* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BergovStreamingKutnohorsko : int {
    None                  = 0,
    StreamedUtokNaMalesov = 1,
    UnstreamedErik        = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab47e8
enum enum EAttachmentBlendControlJointAxisToUse : int {
    BlendControlJointAxisToUse_X = 0,
    BlendControlJointAxisToUse_Y = 1,
    BlendControlJointAxisToUse_Z = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Migration : int {
    Certovka  = 0,
    Suchdol   = 1,
    Ruthardka = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_GameReleaseVersion {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_BlockUINotifications* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af7080
enum enum wh::dialogmodule::data::E_SequenceChatPosition : unsigned char {
    First           = 0,
    Second          = 1,
    Third           = 2,
    Fourth          = 3,
    Refusal         = 4,
    RefusalTimeout  = 5,
    RefusalDistance = 6,
    Any             = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::entitymodule::C_EquipmentManager::E_EquipPolicy {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum whiteDeerHideDelivery : int {
    None                         = 0,
    Active                       = 1,
    Done                         = 2,
    DoneBeforeQuest              = 3,
    DeliveryOutsideQuestPossible = 4,
    Failed                       = 5,
    Aborted                      = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingRequirements* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionLadder* {
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::entitymodule::S_DocumentContent {
    0x18 : Images : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_DocumentContentImage,class std::allocator<struct wh::entitymodule::S_DocumentContentImage> > >;
    //Getter: WHGame.dll+0x2999f1c
    get  : Parts  : class boost::optional<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >;
};

//size in bytes: 0x10
//pointer dimension: 0
class boost::optional<class CryStringT<char> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::BehaviorTree::C_EventData* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_RemoveScheduleActivity : class wh::rpgmodule::storm::I_Operator {
    0x8 : activity : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::conceptmodule::C_GameStart : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Node> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x68 : OnStart      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xa8 : IsDebug      : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StaticDataPort> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CooldownObjective : int {
    None     = 0,
    Active   = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefectorsCampSearch : int {
    None              = 0,
    Started           = 1,
    AfterMusa         = 2,
    AfterHealing      = 3,
    AfterGettingClose = 4,
    Completed         = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::shared::C_WeakPtrId<class _smart_ptr<class wh::conceptmodule::I_Port>,unsigned int,class wh::conceptmodule::C_ConceptResourceResolver<class _smart_ptr<class wh::conceptmodule::C_SharedResource>,unsigned int> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum playerFightParticipation : int {
    None      = 0,
    NoHit     = 1,
    Hit       = 2,
    DeadlyHit = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrotherUrging : int {
    None         = 0,
    Urging       = 1,
    StopedUrging = 2,
};

//size in bytes: 0x1f8
//pointer dimension: 0
class wh::playermodule::C_GenericRandomEvent : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase, class wh::playermodule::C_RandomEventBase {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode    : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace   : class boost::optional<bool>;
    0x60  : Types            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC      : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x128 : Profile          : class std::optional<class CryStringT<char> >;
    0x138 : Cooldown         : class std::optional<struct wh::framework::S_TimeSpan>;
    0xa8  : OnSpawn          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe8  : OnDespawn        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1f0 : GenericEventType : enum wh::playermodule::E_GenericRandomEventType::Type;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashListMapLegendItem : class wh::guimodule::C_UIFlashObject {
    0x8  : Id         : class CryStringT<char>;
    0x10 : Name       : class CryStringT<char>;
    0x18 : Type       : unsigned int;
    0x1c : Order      : int;
    0x20 : Visibility : bool;
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::entitymodule::C_ActorActionLadder : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_AnimDoor *>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4068
enum enum wh::xgenaimodule::NPCState::E_ValidationMode::Type : unsigned char {
    ApplyNPCState   = 0,
    ApplyActorModel = 1,
    Validate        = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::questmodule::C_Quest> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MoveNPC : int {
    None       = 0,
    StartMove  = 1,
    FinishMove = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_StaticSoulPool* {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::guimodule::C_UIFlashContentRecipeHerb : class wh::guimodule::C_UIFlashObject {
    0x8  : Id        : class CryStringT<char>;
    0x10 : Name      : class CryStringT<char>;
    0x18 : LatinName : class CryStringT<char>;
    0x20 : Desc      : class CryStringT<char>;
    0x28 : Effect    : class CryStringT<char>;
    0x30 : Occur     : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct Vec3_tpl<float> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum lostTournament : int {
    None = 0,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Assert> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_WeaponKind {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ForgetSetAsideAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::xgenaimodule::C_SchedulerLinkActivation : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : LinkTag      : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ModuleVersionState> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a618
enum enum wh::rpgmodule::E_BuffExclusivityOperation::Type : unsigned char {
    RemovePrevious = 0,
    RemoveNew      = 1,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::C_ClothingPresetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_ClothingPreset,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ClothingPreset,class std::allocator<struct wh::entitymodule::S_ClothingPreset> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0xc
//pointer dimension: 0
struct Ang3_tpl<float> {
    0x0 : X : float;
    0x4 : Y : float;
    0x8 : Z : float;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_EquippableItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_IfFunction* {
};

//size in bytes: 0xb0
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimActionQueryData : struct wh::entitymodule::S_ActionQueryData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JewishPopulationStreaming : int {
    InitStreamed          = 0,
    StartPogrom           = 1,
    PogromRunToSynagogue  = 2,
    PogromBattle          = 3,
    PogromGoodbyes        = 4,
    UnstreamedAfterPogrom = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_MusicMatrix* {
};

//size in bytes: 0x198
//pointer dimension: 0
class wh::soundmodule::C_AudioRtpc : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : AtlRtpcName    : class wh::conceptmodule::C_TypedPortRef<struct wh::soundmodule::S_SkaldAtlRtpcId>*;
    0xd0  : LinkableObject : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x110 : ValueActive    : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x150 : ValueInactive  : class wh::conceptmodule::C_TypedPortRef<float>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VykaslaniStav : int {
    None                          = 0,
    HracVeSkupinePredTroskovicemi = 1,
    HracVeSkupinePoTroskovicich   = 2,
    HracMimo_SaSodstream          = 3,
    HracMimo_SaSpokracuji         = 4,
    HracMimo_SaSzpet              = 5,
    DoneObjectiveKovar            = 6,
    ZacalaSvatba                  = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DoorAnimData* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::BehaviorTree::I_SwitchableNode* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::rpgmodule::C_SoulStateEffectContextData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StrelnyPrach : int {
    None            = 0,
    PrachJeNaVoze   = 1,
    PrachJeUHrace   = 2,
    PrachNeniUHrace = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_DisableRandomEvent> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum debug_CheatScore : int {
    None          = 0,
    WorkedWell    = 1,
    WorkedAwesome = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::rpgmodule::S_BuffDefinitionAITag,class std::allocator<struct wh::rpgmodule::S_BuffDefinitionAITag> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<struct wh::rpgmodule::S_BuffDefinitionAITag,class std::allocator<struct wh::rpgmodule::S_BuffDefinitionAITag> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HoldDoor : int {
    HoldingDoor = 0,
    Releasing   = 1,
    Done        = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasRandomValue : class wh::rpgmodule::storm::I_Selector {
    0x8  : min : double;
    0x10 : max : double;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LiftableMalesovDrawbridge : int {
    None    = 0,
    Lifting = 1,
    Lifted  = 2,
    Done    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GraveSearching : int {
    None         = 0,
    ActiveFirst  = 1,
    ActiveSecond = 2,
    Done         = 3,
    Canceled     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BonzakBlahaState : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dfdf : int {
    dfdf = 0,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::rpgmodule::C_Counter* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LastSeenBy : int {
    None       = 0,
    Gorilla_1  = 1,
    Gorilla_2  = 2,
    NotAnymore = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatControl : int {
    None                            = 0,
    ComabtInProgress                = 1,
    CombatInProgress_playerBetrayed = 2,
    VillagersWon                    = 3,
    SoldiersWon                     = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasVoice : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x2cc218c
    get : name : class CryStringT<char>;
    0x8 : ID   : int;
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::rpgmodule::C_SoulPresetOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul> {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Souls         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xe8 : PriorityEquip : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIPickpocketing* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_StashTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MikusState : int {
    None      = 0,
    Healed    = 1,
    NotHealed = 2,
    Dying     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_RenownFlagDefinitionID {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::activitysystem::E_DogCompanionPriority {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum realThunderStoneHolder : int {
    None           = 0,
    Mlada          = 1,
    PlayerLegally  = 2,
    PlayerIlegally = 3,
    Confiscated    = 4,
    Kona           = 5,
    Thomlin        = 6,
    ParlerU41      = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BuryGejza_GetInfo : int {
    None                  = 0,
    VajdaAskedToBuryGejza = 1,
    AskTiborAboutGejza    = 2,
    LearnedEverything     = 3,
    Failed                = 4,
    Aborted               = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AfterBattleActivities : int {
    None      = 0,
    AfterPlay = 1,
    Finished  = 2,
    Done      = 3,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_TagPointAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ListovniTajemstvi_trespassHandler : int {
    None    = 0,
    Check   = 1,
    Outside = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SackCarrying : int {
    None                     = 0,
    ZvedniPytelZeZdrojeStart = 1,
    ZvedniPytelZeZdroje      = 2,
    ZvedniPytleZeZeme        = 3,
    DonesPytel               = 4,
    Done                     = 5,
    Reseted                  = 6,
    Aborted                  = 7,
    Canceled                 = 8,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_PhaseItemEventData : struct wh::xgenaimodule::I_EventData {
    0x8 : Slot : struct wh::framework::WUID;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SecretEntranceToCatacombs : int {
    ClosedEntrance             = 0,
    ClearEntrance              = 1,
    MessWithBarricadedEntrance = 2,
    BarricadedEntrance         = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_SaveGameWithNotificationState {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CampStreamingState : int {
    Default = 0,
    Looted  = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionOutGeneric* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_CombatFragmentMetaData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dvojityAgent_jan_duringAmbush : int {
    None              = 0,
    HidingDuringFight = 1,
    RunningAway       = 2,
    Unconcious        = 3,
    LyingInTheWood    = 4,
    HealedAfterAmbush = 5,
    Done              = 6,
    Canceled          = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KunzlinStreaming : int {
    None                 = 0,
    Ruthardka            = 1,
    Cestuje              = 2,
    Ratbor               = 3,
    Unesen               = 4,
    OsvobozenVlasskyDvur = 5,
    OdeselVlasskyDvur    = 6,
    Suchdol              = 7,
    OpustilHru           = 8,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class wh::xgenaimodule::C_LinkableObject *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *> {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HallFight_setkaniVRatbori2 : int {
    None                       = 0,
    ActiveHallFirst            = 1,
    ActiveHallSecondBeforeDoor = 2,
    ActiveHallSecondAfterDoor  = 3,
    DoneHallFirst              = 4,
    DoneHallSecond             = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectDrink* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KeepSnithing : int {
    None                       = 0,
    WaitForSomethingToSnitch   = 1,
    HenryHaveSomethingToSnitch = 2,
    JourneymanDone             = 3,
    Canceled                   = 4,
    abort                      = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
struct Color_tpl<unsigned char> {
    0x0 : R : unsigned char;
    0x1 : G : unsigned char;
    0x2 : B : unsigned char;
    0x3 : A : unsigned char;
};

//size in bytes: 0x4
//pointer dimension: 0
float {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::I_InteractionTrigger *,class std::allocator<class wh::entitymodule::I_InteractionTrigger *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetGameContext> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_RelationScriptContext {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RewardFromJan : int {
    None              = 0,
    TalkToJan         = 1,
    TalkedAboutReward = 2,
    JanDied           = 3,
    Failed            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContext>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kovar_ukol : int {
    none         = 0,
    JdiNaPrevet1 = 1,
    JdiNaPrevet2 = 2,
    JdiNaPrevet3 = 3,
    Nalezen1     = 4,
    Nalezen2     = 5,
    Nalezen3     = 6,
};

//size in bytes: 0x30
//pointer dimension: 0
struct CDefaultSkinningReferences {
    0x0  : RefByInstances       : class std::reference_wrapper<class std::vector<class CAttachmentSKIN *,class std::allocator<class CAttachmentSKIN *> > const >;
    0x18 : RefByInstancesVCloth : class std::reference_wrapper<class std::vector<class CAttachmentVCLOTH *,class std::allocator<class CAttachmentVCLOTH *> > const >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChatAlongTheWay : int {
    None       = 0,
    FirstChat  = 1,
    Timer      = 2,
    Distance   = 3,
    SecondChat = 4,
    Done       = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionDead* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_AngrinessValue {
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::playermodule::C_RandomEvent>* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::guimodule::C_UIFlashListCodexRecord : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : Page     : unsigned int;
    0x20 : IconId   : class CryStringT<char>;
    0x28 : IsReaded : bool;
    0x30 : children : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashListCodexRecord>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashListCodexRecord> > >;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::I_Operator {

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_RandomEventOptionResult::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::C_LinkableObject* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StalkerSearching_obsolete : int {
    None              = 0,
    LookingForShoe    = 1,
    FoundShoe         = 2,
    StalkerIdentified = 3,
    Aborted           = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CrossCountryState : int {
    NotStarted                     = 0,
    HeatUpPhaseAtStart             = 1,
    InProgress                     = 2,
    EveryoneFinishedOrTimerExpired = 3,
    PlayerBrokeTheRules            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_WeaponDrawTrigger* {
};

//size in bytes: 0xa8
//pointer dimension: 0
struct wh::entitymodule::S_NPCToolItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x8  : Type                           : int;
    0xc  : SubType                        : int;
    0xa4 : AllowUnstream                  : bool;
    0xa0 : ManipulationType               : int;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::C_ItemTagDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class CryStringT<char>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BlacksmithingMats : int {
    None                = 0,
    BlacksmihtingFailed = 1,
    HaveNewMats         = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VojaciProfile : int {
    None             = 0,
    VojaciPrichazeji = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefectorSwitch : int {
    None           = 0,
    FirstDefector  = 1,
    SecondDefector = 2,
    ThirdDefector  = 3,
    FourthDefector = 4,
    FifthDefector  = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AssaultInVillage : int {
    None           = 0,
    AssaultStarted = 1,
    Fight          = 2,
    Done           = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
struct wh::rpgmodule::S_SocialClass {
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZkoumaniKryptyRelikvie : int {
    None             = 0,
    ProzkoumejKryptu = 1,
    ProzkoumejHrob   = 2,
    ProzkoumejMalbu  = 3,
    Completed        = 4,
    Aborted          = 5,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_FaderSuspend {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartFollowerPart {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum prepadeniVlasskehoDvora_waitingState : int {
    None       = 0,
    WaitAll    = 1,
    WaitSecond = 2,
    Done       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Erik_ProgressFailableAbortable : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
    Aborted  = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_StatWrapper {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_RandomElement> {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<class _smart_ptr<class CMatInfo>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowRunnerBehavs : int {
    None            = 0,
    StartBark       = 1,
    Waiting         = 2,
    AnticipatingEnd = 3,
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorCrouchTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorIdleState::Type> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnCrouch     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnStand      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum henrysMinesStatus : int {
    None    = 0,
    Scholar = 1,
    Noble   = 2,
    Nephew  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zizkaDuringAmbush : int {
    None          = 0,
    RunToLadder   = 1,
    UseLadder     = 2,
    Guard1        = 3,
    RunToThePoint = 4,
    Dialog        = 5,
    Done          = 6,
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_RelationScriptContextPreset> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrainSon : int {
    None         = 0,
    WaitForSon   = 1,
    FightWithSon = 2,
    Won          = 3,
    Lost         = 4,
    Failed       = 5,
    Aborted      = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeEquipmentCondition* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetBackToRoza : int {
    None                   = 0,
    AllThugsGoneOrElse     = 1,
    CheckedOnRozaInHideout = 2,
    RomancedRoza           = 3,
    DidNotRomanceRoza      = 4,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::entitymodule::S_DoorAnimData {
    0x0  : ActorClassName : class CryStringT<char>;
    0x8  : IsStealth      : bool;
    0x10 : Anim           : class CryStringT<char>;
    0x18 : DirectionTag   : class CryStringT<char>;
    0x20 : PseudoSpeed    : float;
    0x24 : Distance       : float;
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::dialogmodule::data::C_HideActorCommand : class wh::dialogmodule::data::C_Command {
    0x8 : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get : Delay      : float;
    0xe : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Marketing : int {
    None             = 0,
    marketingCounter = 1,
    Done             = 2,
    Fail             = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::soundmodule::C_AudioRtpc* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarlikCapHoldership : int {
    None               = 0,
    KarlikOwner        = 1,
    PlayerOwner        = 2,
    CervenakOwner      = 3,
    PlayerWantToKeepIt = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_AnimationHeadCommand* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bacf40
enum enum wh::rpgmodule::E_CharacterComponentTagRoughness::Type : unsigned char {
    Rough    = 0,
    Ordinary = 1,
    Posh     = 2,
    Cleric   = 3,
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::playermodule::C_SaveGameWithNotification : class wh::conceptmodule::C_Node, class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_TemplatedNode, class wh::playermodule::C_SaveGameBase, class wh::conceptmodule::C_StateBase<enum wh::playermodule::E_SaveGameWithNotificationState::Type> {
    0x10  : Name                  : class CryStringT<char>;
    0x18  : RuntimeState          : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                 : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView             : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT                 : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x0   : EnqueueSave           : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x150 : ResetState            : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x40  : Type                  : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_AutoSaveType::Type>*;
    0x80  : Objective             : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_ObjectiveName>*;
    0xc0  : ObjectiveNameOverride : class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString>*;
    0x190 : OnDone                : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vzdavaniPomocnika : int {
    None             = 0,
    PomocnikSeVzdava = 1,
    HracUsetril      = 2,
    HracChceDorazit  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StoneThrowing : int {
    None    = 0,
    Active  = 1,
    Done    = 2,
    Failed  = 3,
    Aborted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GoToBergowCouncil : int {
    None                  = 0,
    FinishedMaleshovSiege = 1,
    StartCouncil          = 2,
    TooEarlyForCouncil    = 3,
    CouncilFinished       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatedAbortable : int {
    None      = 0,
    Started   = 1,
    Updated   = 2,
    Completed = 3,
    Aborted   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ConstantPort* {
};

//size in bytes: 0x118
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPickUpRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPickUpRequest {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_SoulAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name            : class CryStringT<char>;
    0x10 : Target          : class CryStringT<char>;
    //Getter: WHGame.dll+0x262b8b8
    get  : SharedSoulGuids : class CryStringT<char>;
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::musicmodule::C_WorldQuantitiesDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_WorldQuantity>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::musicmodule::C_WorldQuantity>,class std::allocator<class std::shared_ptr<class wh::musicmodule::C_WorldQuantity> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x28
//pointer dimension: 0
class boost::optional<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::questmodule::S_Tracker {
    0x8 : Current : int;
    0xc : Total   : int;

    //non-vtable method: WHGame.dll+0x2a1e0bc
    ToString( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetEntityContext* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DiggersFleeAndWait : int {
    None        = 0,
    FleeAndWait = 1,
    Done        = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_InventoryOperator* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetInventory : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_InventoryOperator {
    0x8 : preset : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EscapeFromDanemark : int {
    None                 = 0,
    MillerClimbingDown   = 1,
    WifeClimbingDown     = 2,
    DaughterClimbingDown = 3,
    EveryoneFleeing      = 4,
    EveryoneWalking      = 5,
    ReachedMalesov       = 6,
    Canceled             = 7,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::dialogmodule::C_LookAtOffsetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::dialogmodule::S_LookAtOffset,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::dialogmodule::S_LookAtOffset,class std::allocator<struct wh::dialogmodule::S_LookAtOffset> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum finalDialog : int {
    None                            = 0,
    LostSomething                   = 1,
    Started                         = 2,
    PavelUnexposed                  = 3,
    PavelExposedButAcceptedMoney    = 4,
    PavelExposedButWillAcceptMoney  = 5,
    PavelExposedButGotStolenThings  = 6,
    PavelExposedButReportedCrime    = 7,
    PavelExposedButNotReportedCrime = 8,
    Aborted                         = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum talkToNPCelsewhere : int {
    None          = 0,
    GoingToSpot   = 1,
    WaitingAtSpot = 2,
    LeftTheSpot   = 3,
    Done          = 4,
    Aborted       = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightStatus : int {
    Inactive = 0,
    Active   = 1,
};

//size in bytes: 0x380
//pointer dimension: 0
class wh::conceptmodule::C_ConceptManager {
    0x48 : Roots     : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Project>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Project> > > >;
    //Getter: WHGame.dll+0x2547800
    get  : RootsView : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Project>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Project> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<int>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_handContentElementMode : int {
    all    = 0,
    leader = 1,
    none   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum handover_chosenSide : int {
    None            = 0,
    SidedWithJan    = 1,
    SidedWithLaszlo = 2,
};

//size in bytes: 0x88
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_PathFindingRequestDesignerPath : struct wh::xgenaimodule::navigation::S_PathFindingRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NewSpaAdminStreaming : int {
    Unstreamed_Initial         = 0,
    Streamed_BetaLeftBathhouse = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LetRadmilWinInDuel : int {
    None                    = 0,
    Started                 = 1,
    CompletedWhenPlayerLost = 2,
    FailedWhenPlayerWon     = 3,
    FailedWhenQuestFailed   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum horseHandler_operation : int {
    Unknown               = 0,
    ValidHorseAdded       = 1,
    ValidHorseRemoved     = 2,
    PlayerHorseAdded      = 3,
    PlayerHorseRemoved    = 4,
    ResetValidHorsesCount = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PresetOverrides : int {
    CivilDefault               = 0,
    BattleDefault              = 1,
    OblehaniSuchdolePlusCivil  = 2,
    OblehaniSuchdolePlusBattle = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum svatavaReactsToDeadDaughter : int {
    None               = 0,
    MourningNextToBody = 1,
    MourningPrefab     = 2,
    Done               = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EndTourneyDisarmed : int {
    Nobody        = 0,
    FirstFighter  = 1,
    SecondFighter = 2,
    ThirdFighter  = 3,
    FourthFighter = 4,
    FifthFighter  = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ziskejKamen : int {
    None                 = 0,
    Zadano               = 1,
    KamenMaMlada         = 2,
    MladaMrtva           = 3,
    KamenUkraden         = 4,
    KamenZiskanLecbou    = 5,
    KamenZiskanZhorsenim = 6,
    KamenZiskanBezLecby  = 7,
    KamenZiskanSmrt      = 8,
    KamenZiskanFake      = 9,
    ZiskejZnovuFake      = 10,
    ZiskejZnovuKamen     = 11,
    KamenMaParlerU41     = 12,
    FakeMaParlerU41      = 13,
    Cancelled            = 14,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LuteCrusherSetUp : int {
    None                       = 0,
    QuestStartsWithLuteCrusher = 1,
    QuestStartsWithLute        = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum butchersWife : int {
    Alive = 0,
    Dead  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindingSaintAnthonyBanner : int {
    None            = 0,
    BannerNotFound  = 1,
    BannerAreaFound = 2,
    BannerFound     = 3,
    Completed       = 4,
    Failed          = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourToLipold : int {
    None               = 0,
    Tour               = 1,
    KatherineAtLipolds = 2,
    PolylogueStarted   = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::rpgmodule::S_BuffAITag {
    0x0 : buff_ai_tag_id   : int;
    0x8 : buff_ai_tag_name : class CryStringT<char>;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::clothing::S_ClothingMorph,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_ManualRandomEvent* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum playerWeaponState : int {
    Holstered = 0,
    Drawing   = 1,
    Drawn     = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeUnstanceEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::game::C_LevelData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum reportToProcekFuck : int {
    None         = 0,
    active       = 1,
    bykZabit     = 2,
    chycenBonz   = 3,
    chycenNeBonz = 4,
    Aborted      = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum chakanStalkingState : int {
    None                = 0,
    Stalking            = 1,
    EndStalkingForToday = 2,
    Done                = 3,
    Aborted             = 4,
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::guimodule::C_GUIModule {
    0x40 : UIElements       : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::guimodule::C_UIBase>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIBase> > > >;
    //Getter: WHGame.dll+0x2ab98ec
    get  : UIElementsByName : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class wh::guimodule::C_UIBase>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class wh::guimodule::C_UIBase> > > >;
    0x58 : FaderController  : class std::shared_ptr<class wh::guimodule::C_FaderController>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a668
enum enum wh::rpgmodule::E_TimeOfDayState::Type : unsigned char {
    Finished = 0,
    Running  = 1,
};

//size in bytes: 0x1e0
//pointer dimension: 0
class wh::rpgmodule::C_AreInSameSkirmish : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Soul1           : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x100 : Soul2           : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x140 : SkirmishStarted : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : SkirmishEnded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_AddInterruptConceptNode* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DogAmbush : int {
    None            = 0,
    Barking         = 1,
    Growling        = 2,
    NepritelMikese  = 3,
    NepritelKozlika = 4,
    NepritelHledacu = 5,
    Done            = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum degustace : int {
    none    = 0,
    success = 1,
    fail    = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Project> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PohrbivaniZachrana : int {
    None                 = 0,
    Updatable            = 1,
    ZvedniLopatu         = 2,
    ZvedniMrtvoluStart   = 3,
    ZvedniMrtvoluUpdated = 4,
    DonesMrtvoluNaMisto  = 5,
    VykopejHrob          = 6,
    PolozMrtvoluDoHrobu  = 7,
    ZakopejMrtvolu       = 8,
    ZakopanoDoHrobu      = 9,
    Aborted              = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeEquipmentAction* {
};

//size in bytes: 0x268
//pointer dimension: 0
class wh::rpgmodule::C_BuffTagTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xf8  : BuffTags     : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::rpgmodule::S_BuffDefinitionAITag,class std::allocator<struct wh::rpgmodule::S_BuffDefinitionAITag> > >*;
    0x138 : OnAdded      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : OnRemoved    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1b8 : Soul         : class wh::conceptmodule::C_TypedArrayPortRef<class wh::rpgmodule::I_Soul *>*;
    0x1f8 : BuffTag      : class wh::conceptmodule::C_TypedArrayPortRef<struct wh::rpgmodule::S_BuffDefinitionAITag>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIMenuButton* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum morningTalk : int {
    None                 = 0,
    HagTalking           = 1,
    PtacekBarking        = 2,
    PtacekThankingDialog = 3,
    BozenaPavlenaDialog  = 4,
    Done                 = 5,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::playermodule::S_BlacksmithRecipeId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportMurderer : int {
    None                     = 0,
    Started                  = 1,
    Completed_ReportedStepan = 2,
    Completed_ReportedGrozav = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZacniSouboje : int {
    None                      = 0,
    UcastniSeTurnajeAVyhraj   = 1,
    UcastniSeTurnajeAProhraj  = 2,
    HenrySePrihlasilDoTurnaje = 3,
    Canceled                  = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Node> > {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorMountState::Type> > {
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::entitymodule::C_StashManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MillersSon : int {
    Present    = 0,
    NotPresent = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_CombatHitInfo* {
};

//size in bytes: 0x200
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeEquipmentAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_StashManipulationAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartObjectAnimation* {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartObjectAnimations {
    0x0 : EntityGuid : unsigned __int64;
    0x8 : Hash       : unsigned __int64;
    //Getter: WHGame.dll+0xc68b80
    get : Animations : class boost::container::flat_map<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationResultKey,struct wh::xgenaimodule::S_SmartObjectAnimation,struct std::less<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationResultKey>,void>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FollowDicePlayers : int {
    None                 = 0,
    SpokeWithDicePlayers = 1,
    Paid                 = 2,
    Fight                = 3,
    TalkedWayOut         = 4,
    FindArcher           = 5,
    FoundArcherMyself    = 6,
    DicePlayersAreDead   = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RPGStatInterval : int {
    None          = 0,
    AtLeastLow    = 1,
    AtLeastMedium = 2,
    AtLeastHigh   = 3,
    AtMostLow     = 4,
    AtMostMedium  = 5,
    AtMostHigh    = 6,
    LowToMedium   = 7,
    MediumToHigh  = 8,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_InteractionType> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VavakAccusation : int {
    None          = 0,
    Active        = 1,
    DoneWithFight = 2,
    DoneNoFight   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RuthardkaNpcsState : int {
    None                         = 0,
    IntactRuthard                = 1,
    IntactRuthardAfterVavakFight = 2,
    IntactBergov                 = 3,
    Ransacked                    = 4,
    Repopulated                  = 5,
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::xgenaimodule::C_DistanceTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Origin       : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0xd0  : Target       : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x110 : Operator     : class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_Operator>*;
    0x150 : Distance     : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : OnMatch      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1d0 : OnUnmatch    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::definition::I_PortDefinition {
    //Getter: WHGame.dll+0x1eddb50
    get : Name                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : Visibility                  : enum wh::conceptmodule::E_PortVisibility;
    //Getter: WHGame.dll+0x1ede048
    get : Direction                   : enum wh::conceptmodule::E_PortDirection;
    //Getter: WHGame.dll+0x1ede050
    get : ConnectionType              : enum wh::conceptmodule::E_PortConnectionType;
    //Getter: WHGame.dll+0x1ede058
    get : Type                        : class rttr::type;
    //Getter: WHGame.dll+0x1ede060
    get : Template                    : enum wh::conceptmodule::E_TemplateTypename;
    //Getter: WHGame.dll+0x1eddb78
    get : IsHidden                    : bool;
    //Getter: WHGame.dll+0x1eddb80
    get : IsVariadic                  : bool;
    //Getter: WHGame.dll+0x1eddb88
    get : IsSequential                : bool;
    //Getter: WHGame.dll+0x1eddb90
    get : IsOptional                  : bool;
    //Getter: WHGame.dll+0x1eddb98
    get : IsInternal                  : bool;
    //Getter: WHGame.dll+0x1eddba0
    get : IsAutoTriggerable           : bool;
    //Getter: WHGame.dll+0x1ede068
    get : IsTriggerableWhenHibernated : bool;
    //Getter: WHGame.dll+0x25476a0
    get : LinkedTriggerPorts          : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x1eddb70
    get : DefaultValue                : class rttr::variant;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeSamplingCounter<struct wh::rpgmodule::T_GameTimePolicy>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GettingTheAxe : int {
    None                 = 0,
    Active               = 1,
    DoneWithObjective    = 2,
    DoneWithoutObjective = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afeed0
enum enum wh::rpgmodule::E_CharacterComponentTagAge::Type : unsigned char {
    NotSet     = 0,
    YoungAdult = 1,
    MiddleAged = 2,
    Old        = 3,
    Ancient    = 4,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerHandContent : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role       : class CryStringT<char>;
    0x18 : InitMode   : enum wh::xgenaimodule::scheduler::E_InitializationMode::Type;
    0x1c : UsedHand   : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OpatSedleckyStreaming : int {
    Unstream       = 0,
    DrakStream     = 1,
    DrakUnstream   = 2,
    VlasakStream   = 3,
    VlasakUnstream = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_TriggerAreaAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab28b8
enum enum wh::conceptmodule::E_NodeWakeReason : int {
    GameStart        = 0,
    RandomEventStart = 1,
    ScriptRequest    = 2,
    Debug            = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_selfhelpChatResult : int {
    accept = 0,
    reject = 1,
    evade  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_nextPhaseTrigger : int {
    both            = 0,
    tagpointReached = 1,
    dialogFinished  = 2,
    none            = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LookingForHensl : int {
    None                  = 0,
    HuntBegins            = 1,
    TrackingStarted       = 2,
    DoneHenslNotInspected = 3,
    DoneHenslInspected    = 4,
    Failed                = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RideToRatbor : int {
    None                         = 0,
    Beginning                    = 1,
    InitialChat                  = 2,
    NarrowRoad                   = 3,
    NoSprintToMezholezy          = 4,
    SpurHorsesToMezholezy        = 5,
    ArrivingToMezholezy          = 6,
    MezholezyIngameDialog        = 7,
    MezholezyChat                = 8,
    SpurHorsesToFinalDestination = 9,
    Done                         = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetGameContextPreset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetWeapon : int {
    None              = 0,
    GetSword          = 1,
    GetAxe            = 2,
    GetSabre          = 3,
    GetHuntingSword   = 4,
    InvisibleComplete = 5,
    Complete          = 6,
    Fail              = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoorControl : int {
    None             = 0,
    InteractorActive = 1,
    BeforeFirstOpen  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionJump* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Vykradac : int {
    None           = 0,
    Okradani       = 1,
    ReagujeNaHrace = 2,
    LootnuAJdu     = 3,
    Odchazi        = 4,
    Utika          = 5,
    Death          = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KostkyWager : int {
    None    = 0,
    Deset   = 1,
    Dvacet  = 2,
    Padesat = 3,
    Mrkev   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_DistinctCounter<struct CryGUID>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourToMucirna : int {
    None                       = 0,
    MovingOutsideBergovChamber = 1,
    MovingInsideCastle         = 2,
    MovingTowardsTortureRoom   = 3,
    Done                       = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_DecisionPriority {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ConceptManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ContractItemHoldership : int {
    None             = 0,
    InStash          = 1,
    AcquiredByPlayer = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UICredits* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c65520
enum enum E_TriggerEffectType::Type : unsigned char {
    Attack = 1,
    Basic  = 0,
    Block  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_SniffableItem* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadbodiesControl : int {
    None               = 0,
    DuringBohutaBattle = 1,
    DuringHenryBattle  = 2,
    AfterBattle        = 3,
    Done               = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VranaAccusation : int {
    None         = 0,
    Started      = 1,
    FightStarted = 2,
    Consipracy   = 3,
    Aborted      = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorCarryItemTrigger> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::rpgmodule::C_Faction>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LeceniOtce : int {
    None             = 0,
    Active           = 1,
    SpokeWithMother  = 2,
    ExaminedBadly    = 3,
    ExaminedWell     = 4,
    ExaminedVeryWell = 5,
    TreatedBadly     = 6,
    TreatedWell      = 7,
    TreatedVeryWell  = 8,
    FatherDied       = 9,
    Failed           = 10,
    Aborted          = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SettlingStatus_BergovHorse : int {
    MalesovAfterLevelStart = 0,
    CampUkradenyKun        = 1,
    MalesovUkradenyKun     = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_AnimDoor *,class std::allocator<class wh::entitymodule::C_AnimDoor *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_AnimDoor *,class std::allocator<class wh::entitymodule::C_AnimDoor *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SceneFinishedWaiter* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChallengeFailable : int {
    None       = 0,
    InProgress = 1,
    Won        = 2,
    Lost       = 3,
    Canceled   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_PutItemInInventoryAction* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_FocusMode::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoSomethingReactions : int {
    None     = 0,
    Timer    = 1,
    Active   = 2,
    Cooldown = 3,
    Aborted  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatus : int {
    StreamedDebug               = 0,
    UnstreamedDebug             = 1,
    StreamedInitial             = 2,
    UnstreamedZikmnuduvTaborEnd = 3,
    UnstreamedMalesovEnd        = 4,
    UnstreamedSuchdolEnd        = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum infiltraceVDome : int {
    None                      = 0,
    promluvSiSeSluhou         = 1,
    hracMuzeDalAlePriselPozde = 2,
    hracVDome                 = 3,
    hracBudeMusetOdejit       = 4,
    hracMusiOdejit            = 5,
    naselVlasy                = 6,
    hracPodezrely             = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class wh::xgenaimodule::C_LinkableObject *>* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct TElementCountsBase<float> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_FactionLabelDefinitionID {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::I_Node {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorStanceGroupData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum komarClothingPreset : int {
    SedmStatecnych2     = 0,
    UtokNaMalesovBattle = 1,
    UtokNaMalesovEnd    = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AnnouncerState : int {
    None       = 0,
    Announce   = 1,
    OnCooldown = 2,
    Leave      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringHorseshoes : int {
    None    = 0,
    Active  = 1,
    Updated = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_AddSlotDefaultItem> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_DistinctCounter<unsigned int>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AsiDoVeziTalismanHoldership : int {
    None   = 0,
    InSlot = 1,
    Player = 2,
    Nobody = 3,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::entitymodule::S_Unstance {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectSoil* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ProfileAsset* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_PerceptionTrigger* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::dialogmodule::data::S_Port {
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_ItemSlot> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::definition::C_TypeDefinition {
    0x10 : TypeName      : class CryStringT<char>;
    0x18 : TypeClass     : enum wh::conceptmodule::definition::E_TypeClass;
    //Getter: WHGame.dll+0x2547820
    get  : TemplateTypes : class std::vector<struct wh::conceptmodule::definition::C_TypeDefinition::S_TemplateType,class std::allocator<struct wh::conceptmodule::definition::C_TypeDefinition::S_TemplateType> >;
    0x50 : Enums         : class std::vector<struct wh::conceptmodule::definition::S_Enumeration,class std::allocator<struct wh::conceptmodule::definition::S_Enumeration> >;
    0x1c : IsEditable    : bool;
    0x20 : Constraints   : class std::vector<struct wh::conceptmodule::S_TypeConstraint,class std::allocator<struct wh::conceptmodule::S_TypeConstraint> >;
    0x38 : Conversions   : class std::vector<struct wh::conceptmodule::S_TypeConversion,class std::allocator<struct wh::conceptmodule::S_TypeConversion> >;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3e38
enum enum wh::rpgmodule::E_AngrinessValue::Type : unsigned char {
    Violence = 0,
    Material = 1,
    Average  = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::rpgmodule::S_ScriptPerkId {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_MaxCounter<double> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HraOMrkev : int {
    Nevyhral = 0,
    Vyhral   = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestFail : int {
    None               = 0,
    JourneymenBetrayed = 1,
    TraderDied         = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_Operator>* {
};

//size in bytes: 0xbb0
//pointer dimension: 0
class CObjManager {
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_PoisonItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass, struct wh::entitymodule::S_ConsumableItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
    0xc8 : BuffDefinitionId               : struct CryGUID;
    0xd8 : UiSound                        : class CryStringT<char>;
    0xe8 : WeaponBuffDefinitionId         : struct CryGUID;
    0xe0 : WeaponChargeCount              : unsigned int;
    0xe4 : AmmoApplyCount                 : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateVariable> {
};

//size in bytes: 0x1d8
//pointer dimension: 0
class wh::entitymodule::C_ActorCarryCorpseTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnCarry      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnDrop       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x190 : Corpse       : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x318
//pointer dimension: 0
class wh::xgenaimodule::C_StanceTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name                 : class CryStringT<char>;
    0x18  : RuntimeState         : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView            : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive             : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Souls                : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xf8  : Stance               : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_StanceCategory::Type>*;
    0x138 : Objects              : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > >*;
    0x178 : OnStanceMatched      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1b8 : OnStanceUnmatched    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1f8 : OnAllStanceMatched   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x238 : OnAllStanceUnmatched : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x278 : Soul                 : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x2b8 : Object               : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartObject *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LearnItalianFromBrabant : int {
    None                  = 0,
    GotToldToLearnItalian = 1,
    LearnedFromBrabant    = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_RelationScriptContextPreset {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TipsterStav : int {
    TipsterAktivni   = 0,
    TipsterNeaktivni = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum petrZPiskuMIgration : int {
    SuchdolAnotherRoom = 0,
    SuchdolOwnRoom     = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ChangeLeftHandContentEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlesnivecMaceHoldership : int {
    None            = 0,
    PlesnivecOwner  = 1,
    PlayerOwner     = 2,
    CervenakOwner   = 3,
    PlayerCanKeepIt = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_BaseAsset* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_EffectBase : class wh::xgenaimodule::NPCState::I_Effect {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HandContentElementDrawData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum afterDialogSetup : int {
    None           = 0,
    SetFocusCamera = 1,
    Done           = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::I_Condition* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<unsigned int> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DistanceToDialog : int {
    Stop  = 0,
    Close = 1,
    Far   = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3affc50
enum enum wh::dialogmodule::data::E_ClashPriority::Type : unsigned char {
    Flavor                    = 0,
    OpenWorld                 = 1,
    BumpHitReaction           = 2,
    Quest                     = 3,
    CrimeLow                  = 4,
    Crime                     = 5,
    CrimeHigh                 = 6,
    Combat                    = 7,
    HitReaction               = 8,
    CombatChat                = 9,
    CombatChatOverride        = 10,
    CombatInstructions        = 11,
    NonFaderDialogAfterCombat = 12,
    DeathLow                  = 13,
    Death                     = 14,
    Technical                 = 15,
    Max                       = 16,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MusaDitrichChat : int {
    None           = 0,
    FirstDialogue  = 1,
    SecondDialogue = 2,
    Done           = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul>* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_Urgency {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::rpgmodule::C_FactionManager : class wh::rpgmodule::I_FactionManager {

    //vtable offset: 0x60
    GetFaction( string );
    //non-vtable method: WHGame.dll+0x7d263c
    GetRelation( string const &, string const & );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashListCombo : class wh::guimodule::C_UIFlashObject {
    0x8  : Id     : class CryStringT<char>;
    0x10 : Name   : class CryStringT<char>;
    0x18 : IconId : class CryStringT<char>;
    0x20 : Order  : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SearchMarikasTent : int {
    None       = 0,
    SearchTent = 1,
    Done       = 2,
    Aborted    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KaterinaStreaming : int {
    Streamed         = 0,
    Unstreamed       = 1,
    Unstreamed_Legat = 2,
    Streamed_Legat   = 3,
    StreamedDebug    = 4,
    UnstreamedDebug  = 5,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasGender : class wh::rpgmodule::storm::I_Selector {
    0x8 : name : enum wh::entitymodule::E_ActorGender;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetToViktorkaHouse : int {
    None                     = 0,
    Started                  = 1,
    HouseEntered             = 2,
    PlayerFoundViktorkaEarly = 3,
    Aborted                  = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
const long double* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum krystofDuelState : int {
    None          = 0,
    Active        = 1,
    VyhralBohuta  = 2,
    VyhralKrystof = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<bool> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<bool> {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SeznamSeSKapitanem : int {
    None              = 0,
    ObchuzkaKapitana  = 1,
    PromluvSKapitanem = 2,
    Promluveno        = 3,
    Canceled          = 4,
    Aborted           = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_TemplatedNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::C_DebugReputationLog::S_LogEntry* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_SmartHub* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportingToBailiff : int {
    None                                               = 0,
    Reporting                                          = 1,
    BailiffGiveRewardNow                               = 2,
    BailiffDoesntBeliveInfoAboutBlackmailing           = 3,
    BailiffGiveRewardAfterArresting                    = 4,
    BailiffGiveRewardAfterCheckedInfoAboutBlackmailing = 5,
    HenryGoToJail                                      = 6,
    BailiffDied                                        = 7,
    Aborted                                            = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::combatmodule::S_CombatHitSubInfo* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_DialogInitiator {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KunstatBasicSitting : int {
    Pub          = 0,
    BasicSitting = 1,
    BackToPub    = 2,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::conceptmodule::C_ConceptResourceResolver<class _smart_ptr<class wh::conceptmodule::C_SharedResource>,unsigned int> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CombatAutomationsCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorSkipTimeTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PunishmentSeverity : int {
    Weak   = 0,
    Medium = 1,
    Strong = 2,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsItemClass : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
    0x18 : ItemClass  : struct CryGUID;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_AlchemyPotBoilingState {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::framework::I_Action {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinishedRozaBook : int {
    None                    = 0,
    RemarriedWidower        = 1,
    HuntsmanAndBeauty       = 2,
    GirlWithGoldenHair      = 3,
    EloquentLady            = 4,
    OneLeggedHeron          = 5,
    ClumsySeamstress        = 6,
    CleverPastor            = 7,
    MiserlyTownsman         = 8,
    MiserWhoRoseFromTheDead = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NumberOfMan : int {
    None = 0,
    2    = 1,
    3    = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
class tiny::optional<float,0,0> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_MonologByAliasEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation, class wh::xgenaimodule::C_MonologEventImplementation {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum guardingBejkProgress3spots : int {
    None       = 0,
    FirstSpot  = 1,
    SecondSpot = 2,
    ThirdSpot  = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_WeaponSolverMode {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UnconsciousBalsan : int {
    None             = 0,
    CheckUnconscious = 1,
    SetUnconscious   = 2,
    Heal             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetKey : int {
    None                 = 0,
    SpokeWithZizka       = 1,
    SpokeWithKristianMen = 2,
    GotClue              = 3,
    ReadClue             = 4,
    FoundKey             = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::dialogmodule::data::C_ForcedDialogueNode>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum stanceCategory : int {
    undefined = 0,
    standing  = 1,
    lying     = 2,
    sitting   = 3,
    kneel     = 4,
    horse     = 5,
    crouch    = 6,
    cart      = 7,
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::conceptmodule::C_Length : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Length       : class wh::conceptmodule::C_TypedPortRef<int>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::playermodule::C_TutorialManager {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_MetaRoleOperator<struct wh::rpgmodule::storm::operation::Add>* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::entitymodule::C_CutsceneHolder {
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeLeftHandContentEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase, class wh::xgenaimodule::NPCState::C_ChangeHandContentEffectBase {
    0x8  : DataSource                    : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : LeavesEmpty                   : bool;
    0x11 : ValidationMode                : enum wh::xgenaimodule::NPCState::E_ValidationMode::Type;
    0x18 : LinkRuntimeInitSource         : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x38 : ExpectedItemClass             : struct CryGUID;
    0x48 : ExpectedItemClassEventSource  : struct wh::xgenaimodule::NPCState::S_EffectObjectEventSource;
    0x80 : AllowLightSourceForValidation : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ClearScheduleItems* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hostageSituation_femaleHoldsFemale : int {
    None                     = 0,
    HoldHostage              = 1,
    KidnapperReleasesHostage = 2,
    KidnapperKillsHostage    = 3,
    SituationFinished        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_InteractionTriggerNode* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::TypeDescriptors::S_Enum,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MalesovTowerBehaviors : int {
    None                   = 0,
    CheeringPlayerUp       = 1,
    BergovBark             = 2,
    BarkingDone            = 3,
    ShootingBeforeFight    = 4,
    DefendingPrimaryArea   = 5,
    DefendingSecondaryArea = 6,
    JustShooting           = 7,
    FightWon               = 8,
    Done                   = 9,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::engine3d::C_HLodStreaming : class wh::I_HLod {
    0x24 : DataOffset                   : int;
    0x28 : DataSize                     : int;
    0x30 : ProxyIndex                   : int;
    0x2c : UpdateStreamingPrioriryFrame : int;
    0x80 : StreamingStatus              : enum EFileStreamingStatus;
    0x38 : Objects                      : class std::vector<struct IRenderNode *,class std::allocator<struct IRenderNode *> >;
    0x68 : ProxyMesh                    : struct IRenderNode*;
    //Getter: WHGame.dll+0x33f7af0
    get  : ProxyMeshMemoryUsage         : int;
    //Getter: WHGame.dll+0x33f7b5c
    get  : ProxyTextureMemoryUsage      : int;
    //Getter: WHGame.dll+0x33f7b2c
    get  : ProxyMeshStreamingStatus     : enum EFileStreamingStatus;
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimPutItemInHandRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterWeaponStatSub : class wh::guimodule::C_UIFlashObject {
    0x8  : Id    : class CryStringT<char>;
    0x10 : Name  : class CryStringT<char>;
    0x18 : Stab  : float;
    0x1c : Slash : float;
    0x20 : Smash : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::playermodule::S_AlchemyRecipeName {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShellShock : int {
    None       = 0,
    ShellShock = 1,
    Done       = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::BehaviorTree::S_TreeEventSet* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dvafaily : int {
    None      = 0,
    Started   = 1,
    Done      = 2,
    FailDeath = 3,
    FailQuest = 4,
    Aborted   = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_BlacksmithState {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_InterfaceTriggerPort> {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIMenuButton {
    0x8  : Id        : enum wh::guimodule::E_ButtonId::Type;
    0x10 : Text      : class wh::framework::C_LocalizedString;
    0x20 : Tooltip   : class wh::framework::C_LocalizedString;
    0x30 : Container : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectClean* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b20ab8
enum enum wh::playermodule::E_RandomEventOptionAdditionalAction::Type : unsigned char {
    DismountHorse = 0,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::dialogmodule::data::C_AnimationPropCommand : class wh::dialogmodule::data::C_Command, class wh::dialogmodule::data::C_PropCommand {
    0x8  : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay      : float;
    0xe  : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : Prop       : class CryStringT<char>;
    0x18 : GUID       : struct CryGUID;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_LinkEffectNoData* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimeOfDayState::Type> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Vymluva : int {
    None    = 0,
    Nic     = 1,
    Umeni   = 2,
    Dcera   = 3,
    Pes     = 4,
    Pomluva = 5,
    Dluh    = 6,
    Podvod  = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TaktickyUstupZKumanskehoTabora : int {
    None               = 0,
    ZdrhlBezRelikviare = 1,
    ZdrhlSRelikviarem  = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7aa28
enum enum wh::xgenaimodule::scheduler::E_InitializationMode::Type : unsigned char {
    Required = 0,
    Optional = 1,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::dialogmodule::S_DialogueDubbing,class std::vector> {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_ItemHealthProvider {
    0x8  : Quality            : unsigned int;
    0xc  : Health             : float;
    0x10 : HealthVariation    : float;
    0x14 : Condition          : float;
    0x18 : ConditionVariation : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StealthTakedown : int {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SiegeRecruiting : int {
    NotRecruited = 0,
    Recruited    = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Select> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BlackmailVavak : int {
    None              = 0,
    SpokeWithZizka    = 1,
    GoToVavakHouse    = 2,
    GetIntoTheHouse   = 3,
    SpokeWithKristian = 4,
    KilledKristian    = 5,
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::guimodule::C_IngameCutscene : class wh::guimodule::I_Cutscene, class wh::guimodule::C_TrackViewBase {
    0x8   : Name                      : class CryStringT<char>;
    0x11  : InterruptsIngameMusic     : bool;
    0x12  : ForcesAsapSilence         : bool;
    0x18  : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14  : PreemptedMusicDuration    : float;
    0x30  : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10  : SkipReadinessWait         : bool;
    //Getter: WHGame.dll+0x2a5d0ec
    get   : Checkpoints               : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x90  : CopySoulVisual            : class boost::optional<bool>;
    0xc0  : Time                      : class boost::optional<struct wh::framework::S_TimeOfDay>;
    0xd0  : StartWeather              : class boost::optional<class CryStringT<char> >;
    0xe0  : StartBlendDuration        : class boost::optional<struct wh::framework::S_TimeSpan>;
    0xf0  : EndWeather                : class boost::optional<class CryStringT<char> >;
    0x100 : EndBlendDuration          : class boost::optional<struct wh::framework::S_TimeSpan>;
    0x110 : DisposeOfCorpses          : bool;
    0x111 : StopWorldTime             : bool;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a22930
enum enum wh::playermodule::E_BlacksmithingTutorialFeature::Type : unsigned char {
    InspectActionDisabled        = 0,
    InspectActionInvisible       = 1,
    MoveToAnvilActionDisabled    = 2,
    MoveToAnvilActionInvisible   = 3,
    MoveToForgeActionDisabled    = 4,
    MoveToForgeActionInvisible   = 5,
    ForgebagActionDisabled       = 6,
    ForgebagActionInvisible      = 7,
    ExitActionDisabled           = 8,
    ExitActionInvisible          = 9,
    FlipWorkpieceActionDisabled  = 10,
    FlipWorkpieceActionInvisible = 11,
    HeatLossDisabled             = 12,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DiscussionAboutCourt : int {
    None                  = 0,
    Active                = 1,
    TalkedWIthTeamBarbora = 2,
    TalkedWIthTeamSedlec  = 3,
    CanGoForFinalWord     = 4,
    Done                  = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stealingBookNikvard : int {
    None              = 0,
    Started           = 1,
    UpdatedOnAllClues = 2,
    Done              = 3,
    Aborted           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UISubtitles* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<float>* {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::conceptmodule::C_MakeArray : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Value        : class wh::conceptmodule::C_PortRef*;
    0x88 : Array        : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleStatusSouth : int {
    None           = 0,
    DuringCutscene = 1,
    KickingDoors   = 2,
    Palisade       = 3,
    Done           = 4,
};

//size in bytes: 0x530
//pointer dimension: 0
class wh::guimodule::C_UIMenu : class wh::guimodule::C_UIBase, class wh::I_UIMenu {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_AddressKeyword* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Project* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MalesovVillage : int {
    DefaultVillage          = 0,
    BurningVillageWithSmoke = 1,
    BurningVillage          = 2,
    BurnedVillageWithSmoke  = 3,
    BurnedVillage           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_MusicMatrixRow* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SneakThroughtTunnels : int {
    None               = 0,
    GoToTunnels        = 1,
    Animation          = 2,
    PolylogInTunnel    = 3,
    GoToCrossRoad      = 4,
    PolylogOnCrossRoad = 5,
    Finished           = 6,
};

//size in bytes: 0x150
//pointer dimension: 0
class wh::rpgmodule::C_BodyPartOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xd0  : BodyPart     : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_BodyPart::Type>*;
    0x110 : Component    : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::clothing::S_CharacterComponentName>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::shopmodule::S_ShopItemFilter* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemHolderRing : int {
    None    = 0,
    Player  = 1,
    Marketa = 2,
    Removed = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertovkaQuestItemHoldership : int {
    None              = 0,
    PukavecIsOwner    = 1,
    AcquiredByPlayer  = 2,
    HandedToHospodsky = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ScenesAtMikasCamp : int {
    Mika_BeingStreamed        = 0,
    Mika_BeingInterrogated    = 1,
    Mika_LeftTied_SoldierLeft = 2,
    Mika_FreedByPlayer        = 3,
    Soldiers_DialogAboveCamp  = 4,
    Soldiers_SearchingApolena = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CarrySamuelIngameDialog : int {
    WaitForPick = 0,
    Picked      = 1,
    Done        = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::S_DeltaMovementSpeedParams* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_CombatHistoryTrigger* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_ItemTransferDirection {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekStuffState : int {
    None           = 0,
    Zavis          = 1,
    PlayerQuest    = 2,
    PlayerNonQuest = 3,
    Confiscated    = 4,
    Jezek          = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::playermodule::C_BlacksmithTempo {
    0x8  : Range1 : int;
    0xc  : Range2 : int;
    0x10 : Event  : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CikanKampObjeven : int {
    Neobjeven = 0,
    Objeven   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_RelationScriptContext>* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_DecisionLabel {
    0x0 : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::I_SkirmishManager {
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::xgenaimodule::C_AIConceptSignalTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name             : class CryStringT<char>;
    0x18 : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8 : OnNotification   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xf8 : NotificationName : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a22a20
enum enum wh::entitymodule::E_RiderState::Type : unsigned char {
    none          = 0,
    mount         = 1,
    mounted       = 2,
    dismount      = 3,
    idle2move     = 4,
    move2idle     = 5,
    fastStop      = 6,
    rear          = 7,
    forcedRear    = 8,
    jump          = 9,
    land          = 10,
    bondingSaddle = 11,
    bondingGround = 12,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GuardHuntsman : int {
    None                     = 0,
    StartedDuringFirstPhase  = 1,
    StartedDuringSecondPhase = 2,
    NewPhase                 = 3,
    Check                    = 4,
    SoberHuntsman            = 5,
    DrunkenHuntsman          = 6,
    Aborted                  = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3ed8
enum enum wh::playermodule::E_SaveLockEffectReason::Type : unsigned char {
    Script   = 0,
    Minigame = 1,
    Combat   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressDisqLastTournament : int {
    None                  = 0,
    Diskvalifikovan       = 1,
    DiskvalifikovanMinule = 2,
    Nediskvalifikovan     = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StaticTriggerPort> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateVariable* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StrazeHradby : int {
    None      = 0,
    Zneskodni = 1,
    Dialog    = 2,
    Done      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrutalityControl : int {
    None              = 0,
    EnableForAttacker = 1,
    EnableForBoth     = 2,
    Done              = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<int>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindThePerfume : int {
    None                = 0,
    Find                = 1,
    Found               = 2,
    BeenAtWeedingAnyway = 3,
    Aborted             = 4,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::rpgmodule::storm::C_Source {
    0x8  : customSelectors  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::C_CustomSelector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::C_CustomSelector> > > >;
    0x20 : customOperations : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::C_CustomOperator>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::C_CustomOperator> > > >;
    0x38 : path             : class CryStringT<char>;
    0x40 : rules            : class std::reference_wrapper<class std::vector<class wh::rpgmodule::storm::C_Rule,class std::allocator<class wh::rpgmodule::storm::C_Rule> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressVeSkalach : int {
    None         = 0,
    TourKVozu    = 1,
    TourDoSkal   = 2,
    Upozorneno   = 3,
    Plizeni      = 4,
    Done         = 5,
    DoneBezHrace = 6,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::musicmodule::C_MusicMatrixDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_MusicMatrixRow>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::musicmodule::C_MusicMatrixRow>,class std::allocator<class std::shared_ptr<class wh::musicmodule::C_MusicMatrixRow> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatableFailableAbortable : int {
    none      = 0,
    started   = 1,
    updated1  = 2,
    updated2  = 3,
    completed = 4,
    failed    = 5,
    aborted   = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hostageSituation_maleHoldsTiedFemale : int {
    None                                           = 0,
    HoldHostage_Tense                              = 1,
    HoldHostage_Calm                               = 2,
    KidnapperReleasesHostage_HostageKillsKidnapper = 3,
    KidnapperKillsHostage_KidnapperToCombat        = 4,
    KidnapperGetsHit_KidnapperDies_HostageToGround = 5,
    HostageGetsHit_HostageDies_KidnapperToCombat   = 6,
    SituationFinished                              = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarelNaCesteEvent : int {
    None         = 0,
    Spawn        = 1,
    Despawn      = 2,
    DespawnLater = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_IsPublicEnemy* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_InformationMessageStatus {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoubleStarted : int {
    None     = 0,
    Started  = 1,
    Started2 = 2,
    Done     = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_WorldQuantity>,class std::vector> {
};

//size in bytes: 0x270
//pointer dimension: 0
class wh::playermodule::C_ManualRandomEvent : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase, class wh::playermodule::C_RandomEventBase {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace : class boost::optional<bool>;
    0x60  : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x128 : Profile        : class std::optional<class CryStringT<char> >;
    0x138 : Cooldown       : class std::optional<struct wh::framework::S_TimeSpan>;
    0xa8  : OnSpawn        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe8  : OnDespawn      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1f0 : Spawn          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x230 : Despawn        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasAttribute* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_LedgeObject *,class std::allocator<class wh::entitymodule::C_LedgeObject *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsFromWorldInventory : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithHorseman : int {
    None                    = 0,
    Active                  = 1,
    Done                    = 2,
    HorsemanNotHelping      = 3,
    PassageAlreadyDuggedOut = 4,
    PlayerGotToMalesovFirst = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CurrentSouboj : int {
    start    = 0,
    volna1   = 1,
    volna2   = 2,
    volna3   = 3,
    stity1   = 4,
    stity2   = 5,
    stity3   = 6,
    mece1    = 7,
    mece2    = 8,
    mece3    = 9,
    finished = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoudekZabavilyStraze : int {
    None             = 0,
    ZiskejSoudekZpet = 1,
    SoudekZiskanZpet = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::playermodule::E_SkipTime::Value {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_ShowMapMarker> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_AnimDoor *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyFeedback* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_TimeOfDayState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SymbolsState : int {
    StashQuestItem        = 0,
    StashNonQuestItem     = 1,
    PlayerBeforeQuest     = 2,
    PlayerDuringQuest     = 3,
    PlayerBeforeQuestRead = 4,
    PlayerDuringQuestRead = 5,
    PlayerAferQuest       = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_RiderState {
};

//size in bytes: 0x18
//pointer dimension: 0
class boost::container::flat_set<class wh::entitymodule::clothing::C_Component const *,struct std::less<class wh::entitymodule::clothing::C_Component const *>,void> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct IEntitySystem* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::environmentmodule::S_WeatherProfileData::S_TimeOfDayInterval {
    0x0 : From : struct wh::framework::S_TimeOfDay;
    0x8 : To   : struct wh::framework::S_TimeOfDay;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum carryAlternative : int {
    none                 = 0,
    completeCivilization = 1,
    completeHome         = 2,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AnyElementPresetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_AnyElementPreset,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::NPCState::S_AnyElementPreset,class std::allocator<struct wh::xgenaimodule::NPCState::S_AnyElementPreset> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x238
//pointer dimension: 0
class wh::conceptmodule::C_ForEach : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_TemplatedNode> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x70  : Begin        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xb0  : Break        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xf0  : Array        : class wh::conceptmodule::C_PortRef*;
    0x130 : OnValue      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x170 : OnEnd        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1b0 : Value        : class wh::conceptmodule::C_PortRef*;
    0x1f0 : Index        : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_PlaceSetAsideAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction, class wh::xgenaimodule::NPCState::C_PlaceAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum luteHoldership : int {
    None             = 0,
    LuteInSlot       = 1,
    LuteAcquired     = 2,
    AcquireLuteAgain = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum certiObjective : int {
    h = 0,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingMarketa : int {
    Unstreamed = 0,
    Streamed   = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamStatesKutnohorskyRabin : int {
    InitUnStreamed                      = 0,
    DebugStreamed                       = 1,
    DebugUnstreamed                     = 2,
    StreamedRatbor1GodwinGameplayStarts = 3,
    StreamedRatbor2Begins               = 4,
    UntreamedRatbor2BattleBegins        = 5,
    StreamedRatbor2BattleEnds           = 6,
    Unstreamed                          = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_RelationContextTrigger* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::storm::C_CustomOperator : class wh::rpgmodule::storm::I_Operator {
    0x20 : name       : class CryStringT<char>;
    0x8  : operations : class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Operator>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Operator> > >;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x1f0
//pointer dimension: 0
class wh::rpgmodule::C_TimeOfDayWatch : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimeOfDayState::Type> {
    0x10  : Name                     : class CryStringT<char>;
    0x18  : RuntimeState             : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                    : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView                : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT                    : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50  : State                    : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_TimeOfDayState::Type>*;
    0x90  : TimeOfDayStart           : class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeOfDay>*;
    0xd0  : TimeOfDayEnd             : class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeOfDay>*;
    0x110 : DaysToStart              : class wh::conceptmodule::C_TypedPortRef<int>*;
    0x150 : DaysToInterrupt          : class wh::conceptmodule::C_TypedPortRef<int>*;
    0x190 : OnTimeOfDay              : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1e8 : RemainingDaysToInterrupt : int;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xd8
//pointer dimension: 0
struct wh::entitymodule::S_CraftingMaterialItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
    0x8  : Type                           : int;
    0xc  : SubType                        : int;
};

//size in bytes: 0x198
//pointer dimension: 0
class wh::xgenaimodule::C_LinkEffectNoData : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_LinkEffectBase {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98  : From         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >*;
    0xd8  : To           : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >*;
    0x158 : Tag          : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::I_Selector {
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::engine3d::S_HLodStatsByType {
    0x8  : StateCount                  : class std::array<int,7>;
    0x24 : StreamedInInstanceCount     : int;
    0x28 : VisibleProxyMeshMemoryUsage : int;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_TimeOfDayState {
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<class std::shared_ptr<struct wh::dialogmodule::data::S_FastForwardRequest>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_TreeLocation* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_AIConceptSignalTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_TimeType::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dinner : int {
    None          = 0,
    Started       = 1,
    Completed     = 2,
    herb          = 3,
    wine          = 4,
    meat          = 5,
    vegetable     = 6,
    farewell      = 7,
    drunkenMiller = 8,
    drunkenHenry  = 9,
    nightWithAnna = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::NPCState::S_UnstanceData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BonesForOpat : int {
    None             = 0,
    BringBonesToOpat = 1,
    HenryKeepsBones  = 2,
    Done             = 3,
    Canleced         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp2_ReportToHuntsman : int {
    None             = 0,
    ReportToHuntsman = 1,
    Completed        = 2,
    Failed           = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<struct wh::dialogmodule::data::S_IncludedDecisionAlias,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::S_DeltaMovementSpeedParamsSubRange* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartEntity *>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_Sequence* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dogWithoutBonka : int {
    None                = 0,
    BeforeStartInKennel = 1,
    Started             = 2,
    inKennel            = 3,
    dogLives            = 4,
    dogDies             = 5,
    Canceled            = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum minersShift1 : int {
    None           = 0,
    TalkToShift1   = 1,
    GetBeer        = 2,
    DeliverBeer    = 3,
    GotInformation = 4,
    Canceled       = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum minersShift2 : int {
    None          = 0,
    TalkToShift2  = 1,
    FindPavel     = 2,
    PrayWithPavel = 3,
    TalkToPavel   = 4,
    Completed     = 5,
    Canceled      = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum minersShift3 : int {
    None           = 0,
    TalkToShift3   = 1,
    PlayDice       = 2,
    ReturnToGame   = 3,
    AskAgain       = 4,
    GotInformation = 5,
    Canceled       = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::TypeDescriptors::S_Member* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BeardType : int {
    None = 0,
    1    = 1,
    2    = 2,
    3    = 3,
    4    = 4,
    5    = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_InterfaceDataPort* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::playermodule::C_BlacksmithRecipeProduct {
    0x8  : ItemClassId    : struct CryGUID;
    0x18 : MinimalQuality : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KlaraProchazka : int {
    None           = 0,
    ProchazkaStart = 1,
    DoslaNaMisto   = 2,
    Aborted        = 3,
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::playermodule::C_FilterInput : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Filters      : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum owIntroProgress : int {
    None    = 0,
    Active  = 1,
    Done    = 2,
    Aborted = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithRecipeProduct* {
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::entitymodule::S_MeleeWeaponClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BeforeFight : int {
    None              = 0,
    EnableAreaTrigger = 1,
    RunIngameTrialog  = 2,
    Done              = 3,
    Canceled          = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum promluvSJenikem : int {
    None       = 0,
    Zadano     = 1,
    Promluveno = 2,
    Fail       = 3,
    Aborted    = 4,
    Canceled   = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a988
enum enum wh::xgenaimodule::NPCState::E_ExplicitFragmentEventReference::Type : unsigned char {
    SetAsideSlot = 0,
    StanceObject = 1,
};

//size in bytes: 0x178
//pointer dimension: 0
class wh::playermodule::C_DisableActionEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : ActionMap     : class wh::conceptmodule::C_TypedArrayPortRef<class CryStringT<char> >*;
    0xd0  : Action        : class wh::conceptmodule::C_TypedArrayPortRef<class CryStringT<char> >*;
    0x110 : DisableReason : class wh::conceptmodule::C_TypedArrayPortRef<class wh::framework::C_LocalizedString>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::shopmodule::C_ShopsDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::shopmodule::S_ShopDBData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::shopmodule::S_ShopDBData,class std::allocator<struct wh::shopmodule::S_ShopDBData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VillageCombatSetup : int {
    Unintialized       = 0,
    HenryWithSoldiers  = 1,
    HenryWithVillagers = 2,
    BetrayedSoldiers   = 3,
    BetrayedVillagers  = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_PlayerItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DieItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleGroupsRegistration : int {
    None                = 0,
    OuterCourtyardFight = 1,
    InnerCourtyardFight = 2,
    TowerFight          = 3,
    Done                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CarryRozaAcrossWater : int {
    None               = 0,
    PickedUpRoza       = 1,
    CarriedRozaAcross  = 2,
    DroppedRozaInWater = 3,
    PutRozaOnGround    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LokaceRelikviare : int {
    None   = 0,
    Truhla = 1,
    Hrac   = 2,
    Done   = 3,
    Failed = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelClothingPreset : int {
    None          = 0,
    Default       = 1,
    Siege         = 2,
    Captured      = 3,
    SiegeNoHelmet = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hostageSituation_maleHoldsLooseFemale : int {
    None                                             = 0,
    HoldHostage                                      = 1,
    KidnapperReleasesHostage_BothToIdle              = 2,
    KidnapperReleasesHostage_KidnapperToCombat       = 3,
    KidnapperKillsHostage_KidnapperToIdle            = 4,
    KidnapperKillsHostage_KidnapperToCombat          = 5,
    KidnapperGetsHit_KidnapperToCombat_HostageToIdle = 6,
    KidnapperGetsHit_KidnapperDies_HostageToIdle     = 7,
    HostageGetsHit_HostageToIdle_KidnapperToCombat   = 8,
    HostageGetsHit_HostageDies_KidnapperToCombat     = 9,
    SituationFinished                                = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_RandomEventPlace* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SpawnItemEventImplementation* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_FactionBaseAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LadderPushingProgress : int {
    None          = 0,
    PlayerPushing = 1,
    EnemyIsHigh   = 2,
    LadderClear   = 3,
    Pushed        = 4,
    PushingFailed = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_StanceTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vineyardJob : int {
    None         = 0,
    Refused      = 1,
    WorkTommorow = 2,
    Hired        = 3,
    Done         = 4,
    Fail         = 5,
    Aborted      = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::conceptmodule::C_Library>* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::C_StaticSoulPool::S_Element {
    0x0 : SoulName : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_DialogueNode* {
};

//size in bytes: 0x8
//pointer dimension: 0
class CryStringT<char> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_SaveGame> {
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::rpgmodule::C_AddFactionRelationBetweenArrays : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::rpgmodule::C_FactionRelationBase {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : RelationValue : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x108 : SoulArray0    : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x148 : SoulArray1    : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalksAfterBattle_setkaniVRatbori2 : int {
    None                  = 0,
    Started               = 1,
    SpokeWithGodwin       = 2,
    SpokeWithLichtenstein = 3,
    SpokeWithSamuel       = 4,
    LeftForKH             = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MillerLine : int {
    None                  = 0,
    Started               = 1,
    KnowAbouFirstQuest    = 2,
    FirstQuest            = 3,
    KnowAboutSecondQuest  = 4,
    SecondQuest           = 5,
    KnowAboutThirdQuest   = 6,
    ThirdQuest            = 7,
    CanGoToWedding        = 8,
    WentToWedding         = 9,
    WentToWeddingOtherWay = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartResource* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::C_NodeManager {
};

//size in bytes: 0x8
//pointer dimension: 0
class boost::optional<int> {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::BehaviorTree::S_CallbackEventDefinition {
    0x10 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x308e8a4
    get  : Signature : class CryStringT<char>;
    0x18 : Atomic    : bool;
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::entitymodule::S_ActionQueryData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gatherHerbs : int {
    None             = 0,
    pickUpHerbs      = 1,
    pickUpHerbsAgain = 2,
    Done             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFight : int {
    None       = 0,
    Prefight   = 1,
    InProgress = 2,
    Soul1won   = 3,
    Soul2won   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum caponPlan : int {
    None    = 0,
    Started = 1,
    Done    = 2,
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::rpgmodule::S_SkillTeacher {
    0x0  : SharedSoulGuid : struct CryGUID;
    0x10 : DefaultActive  : bool;
    0x18 : Lessons        : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::S_SkillTeacherLesson,class std::allocator<struct wh::rpgmodule::S_SkillTeacherLesson> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_GroupCombinationNavMeshId {
    //Getter: WHGame.dll+0x334eadc
    get : GroupId : class std::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x334ea60
    get : Index   : class std::optional<unsigned short>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MovingSoldiers : int {
    None                   = 0,
    SoldierToOilRoom       = 1,
    SoldierAcrossCourtyard = 2,
    SoldierToSideWall      = 3,
    Done                   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekRomance : int {
    None             = 0,
    RomanceStarted   = 1,
    RomanceConfirmed = 2,
    RomanceFinished  = 3,
    RomanceAbandoned = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionRider* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum fightclub_proposingFights : int {
    Disabled                                    = 0,
    Active_WavingAtPlayerWithForcedInRangeAlias = 1,
    Active_WavingAtPlayer                       = 2,
    Active_WaitingAndTurningTowardsPlayer       = 3,
    Inactive_PlayerIsFarAway                    = 4,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoReputation : class wh::guimodule::C_UIFlashObject {
    0x8  : Id           : class CryStringT<char>;
    0x10 : Name         : class CryStringT<char>;
    0x18 : IconId       : class CryStringT<char>;
    0x20 : Value        : float;
    0x24 : IconValue    : int;
    0x28 : IsDiscovered : bool;
    0x30 : Desc         : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::I_InteractionTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
const unsigned short* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff060
enum enum wh::entitymodule::E_CartMoveBlocker::Type : unsigned char {
    noDriver = 0,
    event    = 1,
    obstacle = 2,
    stash    = 3,
    player   = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventMemberFunction> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::conceptmodule::definition::C_CompileTimePortDefinition : class wh::conceptmodule::definition::I_PortDefinition {
    //Getter: WHGame.dll+0x1eddb50
    get : Name                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : Visibility                  : enum wh::conceptmodule::E_PortVisibility;
    //Getter: WHGame.dll+0x1ede048
    get : Direction                   : enum wh::conceptmodule::E_PortDirection;
    //Getter: WHGame.dll+0x1ede050
    get : ConnectionType              : enum wh::conceptmodule::E_PortConnectionType;
    //Getter: WHGame.dll+0x1ede058
    get : Type                        : class rttr::type;
    //Getter: WHGame.dll+0x1ede060
    get : Template                    : enum wh::conceptmodule::E_TemplateTypename;
    //Getter: WHGame.dll+0x1eddb78
    get : IsHidden                    : bool;
    //Getter: WHGame.dll+0x1eddb80
    get : IsVariadic                  : bool;
    //Getter: WHGame.dll+0x1eddb88
    get : IsSequential                : bool;
    //Getter: WHGame.dll+0x1eddb90
    get : IsOptional                  : bool;
    //Getter: WHGame.dll+0x1eddb98
    get : IsInternal                  : bool;
    //Getter: WHGame.dll+0x1eddba0
    get : IsAutoTriggerable           : bool;
    //Getter: WHGame.dll+0x1ede068
    get : IsTriggerableWhenHibernated : bool;
    //Getter: WHGame.dll+0x25476a0
    get : LinkedTriggerPorts          : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x1eddb70
    get : DefaultValue                : class rttr::variant;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum getTheDress : int {
    None      = 0,
    Started   = 1,
    Deliver   = 2,
    Delivered = 3,
    Aborted   = 4,
};

//size in bytes: 0x2
//pointer dimension: 0
struct wh::rpgmodule::S_RoleId {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::rpgmodule::C_SkirmishEventTypeData,class std::vector> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_DogPointType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Councilman : int {
    None           = 0,
    Accept         = 1,
    ResolveCombat  = 2,
    ResolveTalk    = 3,
    Complete       = 4,
    Fail           = 5,
    CouncilmanDead = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AreaDialog : int {
    None           = 0,
    CekaniNaDialog = 1,
    Dialog         = 2,
    Done           = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_POITypeWrapper>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Module> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIMenuConfirmation* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_WorldStateToggle>,class std::vector> {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::C_ActorActionDead : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction, class wh::entitymodule::I_DisableRagdollEffect {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum investigationTroskovice : int {
    none     = 0,
    active   = 1,
    done     = 2,
    canceled = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_DataPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CleaningBones : int {
    StreamedBones              = 0,
    StreamedBonesCleaningReady = 1,
    UnstreamedBones            = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_RelationContextTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OutOrInKkut : int {
    None = 0,
    Kkut = 1,
    Out  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_SkipTimeCutscene* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemsToReturnEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum prepadeni_throughForrest : int {
    None                      = 0,
    ToTheFirstCrossroad       = 1,
    CrouchToTheFirstCrossroad = 2,
    AroundBoulder             = 3,
    ToTheEndOfBoulders        = 4,
    ToTheFallenTree           = 5,
    OverTheFallenTree         = 6,
    ToTheRockPath             = 7,
    ThroughTheRockPath        = 8,
    ToTheMaze                 = 9,
    AtEntranceToMaze          = 10,
    AtTheMazeGuarding         = 11,
    TemporaryPlace            = 12,
    BeforeEndOfMaze           = 13,
    AtTheEndOfMaze            = 14,
    ToTheEndOfRoad            = 15,
    Slide                     = 16,
    Done                      = 17,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AreaUnionAsset* {
};

//size in bytes: 0xf0
//pointer dimension: 0
class wh::rpgmodule::C_SkillTeacherSoulComponent {

    //non-vtable method: WHGame.dll+0x2c5a33c
    StudyLesson( wh::rpgmodule::SoulSkill );
    //non-vtable method: WHGame.dll+0x2c5a248
    VisitSkillTeacher( bool );
    //non-vtable method: WHGame.dll+0x2c598e0
    OpenLesson( wh::rpgmodule::SoulSkill );
    //non-vtable method: WHGame.dll+0x2c58634
    GetLessonPrice( wh::rpgmodule::SoulSkill );
    //non-vtable method: WHGame.dll+0x2c5838c
    GetOpenLessonLevel( wh::rpgmodule::SoulSkill );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ForgingProgress : int {
    None                  = 0,
    ReturnToBlacksmith    = 1,
    GetMaterialsFromChest = 2,
    GetMaterials          = 3,
    StartMinigame         = 4,
    CompleteTutorial      = 5,
    Done                  = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::I_UIHudMask* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AreaTriggerAnonymous> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7ac58
enum enum wh::entitymodule::E_CartChange::Type : unsigned char {
    targetReached    = 0,
    targetNotReached = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SymbolSermirnyBrokenSword : int {
    Jimram              = 0,
    PlayerInventory     = 1,
    UsedInBlacksmithing = 2,
    Finish              = 3,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_Action {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadsoulReplacementProgress : int {
    None        = 0,
    Replaced    = 1,
    NotReplaced = 2,
    TourneyDone = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::rpgmodule::C_SkillTeacherDatabase : class wh::databasemodule::C_ObjectDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<struct wh::rpgmodule::S_SkillTeacher,class std::vector>,class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<struct wh::rpgmodule::S_SkillTeacher> >, class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_SkillTeacher,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::S_SkillTeacher,class std::allocator<struct wh::rpgmodule::S_SkillTeacher> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AcquireArmorObjective : int {
    None               = 0,
    Started            = 1,
    UpdatedTourneyWon  = 2,
    UpdatedMustSteal   = 3,
    Done               = 4,
    DoneStolen         = 5,
    UpdatedConfiscated = 6,
    Failed             = 7,
    Aborted            = 8,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ItemDescriptorTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorCarryCorpseTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MikesKozlikMigrationKutnohorsko : int {
    InCertovka        = 0,
    InSuchdol         = 1,
    InCertovkaEndGame = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetGameContext* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectHeal : class wh::xgenaimodule::scheduler::C_SchedulerEffectBase {
    //Getter: WHGame.dll+0x330fd2c
    get : Role     : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fcc8
    get : HealRate : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemPropertyDescriptor* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::I_TagPoint *,class std::allocator<class wh::entitymodule::I_TagPoint *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::I_TagPoint *,class std::allocator<class wh::entitymodule::I_TagPoint *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_CompanionManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_onPlayerLeft_dialogProgression : int {
    waitForPlayerSkipDialog = 0,
    waitForPlayerStopDialog = 1,
    startDialog             = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HassleInLazaret : int {
    None          = 0,
    AreaTrigger   = 1,
    DiceInterrupt = 2,
    HassleStart   = 3,
    HassleDone    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PubSkirmish : int {
    None                 = 0,
    InProgress           = 1,
    FinishedWithoutHenry = 2,
    FinishedHenryWon     = 3,
    FinishedHenryLost    = 4,
};

//size in bytes: 0x98
//pointer dimension: 0
struct wh::entitymodule::S_MeleeWeaponClass : struct wh::entitymodule::S_WeaponClass {
    0x8  : id                          : int;
    0x10 : name                        : class CryStringT<char>;
    0x18 : skill                       : enum wh::rpgmodule::E_SoulSkill;
    0x1c : attachment_slot_id          : int;
    0x20 : equip_slot                  : enum wh::entitymodule::E_WeaponEquipSlot;
    0x25 : in_right_hand               : bool;
    0x28 : holster_slot_id             : int;
    0x24 : is_twohanded                : bool;
    0x2c : gender_id                   : unsigned char;
    0x30 : item_manipulation_type      : int;
    0x34 : primary_attack_type_id      : int;
    0x38 : secondary_attack_type_id    : int;
    0x3c : attack_distance             : float;
    0x40 : is_blocking                 : bool;
    0x44 : sync_guard_distance         : float;
    0x48 : sync_guard_priority         : int;
    0x4c : max_attack_distance         : float;
    0x50 : collision_mode              : int;
    0x54 : anim_collision_mode         : int;
    0x58 : combat_priority             : int;
    0x5c : horse_pull_down_distance    : float;
    0x60 : horse_pull_down_max_speed   : float;
    0x64 : horse_pull_down_z_tolerance : float;
    0x68 : hunt_attack_distance        : float;
    0x6c : zone_change_timeout_coef    : float;
    0x70 : draw_buff_id                : struct CryGUID;
    0x80 : alternative_draw_buff_id    : struct CryGUID;
    0x90 : sharpening_zone_count       : int;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_Crime* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitForBergov : int {
    None            = 0,
    AfterFastTravel = 1,
    FirstPhase      = 2,
    SecondPhase     = 3,
    ThirdPhase      = 4,
    FourthPhase     = 5,
    FifthPhase      = 6,
    FinalBrawl      = 7,
    RandomBrawl     = 8,
    Done            = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::I_ItemDescriptor> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::xgenaimodule::E_XGenDatabaseMetadata {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_JointElementBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RelationToRaidOnMalesov : int {
    None                                                    = 0,
    StartedAfterRaidOnMalesov                               = 1,
    StartedBeforeRaidOnMalesov                              = 2,
    HorseDeliveredAfterRaidOnMalesov_QuestStartedBeforeRaid = 3,
    HorseDeliveredAfterRaidOnMalesov_QuestStartedAfterRaid  = 4,
    HorseDeliveredBeforeRaidOnMalesov                       = 5,
    HorseDeliveredAfterRaidOnMalesov                        = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AllyBehaviorAfterHandover : int {
    None     = 0,
    Resting  = 1,
    Fighting = 2,
    Escaping = 3,
    Escaped  = 4,
    Aborted  = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum searchTheCellar : int {
    None           = 0,
    FoundTheCellar = 1,
    UnlockTheDoor  = 2,
    SearchInside   = 3,
    Failed         = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_DialogueProp* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkasAppearance : int {
    Initial_ScarCoveredNoHelmet            = 0,
    ScarVisibleInitialEquip_SedmStatecnych = 1,
    ScarVisibleBattleEquip_UtokNaMalesov   = 2,
    ScarVisibleNoWeapon_PapezskyLegat      = 3,
    PatchVisibleInitialEquip_EndGame       = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_InterfaceTriggerPort* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_Head* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_AlchemyTable *,class std::allocator<class wh::entitymodule::C_AlchemyTable *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ListOfPlayerMemberss : int {
    None               = 0,
    JanekOrJaroslav    = 1,
    Mikes              = 2,
    Kozlik             = 3,
    Dobros             = 4,
    Wolfram            = 5,
    AlternativeSoldier = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RefusalZizkaPetr : int {
    None          = 0,
    BeforePolylog = 1,
    AfterPolylog  = 2,
    Done          = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_DocumentContentImage {
    0x0 : Page  : unsigned int;
    0x8 : Image : class CryStringT<char>;
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_DialogueHolderAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_SkirmishEventRole {
    0x8  : Name           : enum wh::rpgmodule::E_SkirmishEventRole::Type;
    //Getter: WHGame.dll+0x5f0530
    get  : MetaroleName   : class CryStringT<char>;
    0x18 : BarkingWeight  : float;
    0x1c : MoraleChangeId : int;
    //Getter: WHGame.dll+0x2c262cc
    get  : Flags          : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_NavMeshSource {
    //Getter: WHGame.dll+0x334eb48
    get : IsBaseProfile      : class std::optional<bool>;
    //Getter: WHGame.dll+0x334ea80
    get : ProfileId          : class std::optional<class CryStringT<char> >;
    0x2 : GroupCombinationId : struct wh::xgenaimodule::navigation::S_GroupCombinationNavMeshId;
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::conceptmodule::C_StateBase<enum wh::playermodule::E_SaveGameWithNotificationState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum samsKnifeHoldership : int {
    None               = 0,
    AtSamBeforeCapture = 1,
    LostInAulitzsCamp  = 2,
    AcquiredByPlayer   = 3,
    HandedOutToSam     = 4,
    SamDied            = 5,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeHandContentEffectBase : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8  : DataSource                   : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : LeavesEmpty                  : bool;
    0x11 : ValidationMode               : enum wh::xgenaimodule::NPCState::E_ValidationMode::Type;
    0x18 : LinkRuntimeInitSource        : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x38 : ExpectedItemClass            : struct CryGUID;
    0x48 : ExpectedItemClassEventSource : struct wh::xgenaimodule::NPCState::S_EffectObjectEventSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FirstPackReport : int {
    None                   = 0,
    Active                 = 1,
    AdmittedFailure        = 2,
    ReportedSuccess        = 3,
    ReportNoLongerPossible = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventFunction* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_NPCToolItemClass* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyPotionBase,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavisEquipment : int {
    Default      = 0,
    WithoutPlate = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_VariableForm {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DialogAfterCouncil : int {
    None         = 0,
    FirstDialog  = 1,
    SecondDialog = 2,
    Done         = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::guimodule::E_ConceptMarkerType::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindWayToWedding : int {
    None        = 0,
    Started     = 1,
    FoundTheWay = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavisDrunkeness : int {
    None   = 0,
    Normal = 1,
    High   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DaycycleOblehani : int {
    None        = 0,
    Recruitment = 1,
    NightMode   = 2,
    NightAttack = 3,
    Done        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrainerState : int {
    InDayCycle       = 0,
    OnTheWay         = 1,
    AtTrainingGround = 2,
    Duel             = 3,
    Training         = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
struct SShaderItem {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_CombatSlotId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SilverCarrierStreaming : int {
    None           = 0,
    StreamLegat    = 1,
    UnstreamLegat  = 2,
    StreamVlasak   = 3,
    UnstreamVlasak = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::scheduler::S_SchedulerAlias* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceConditionBase* {
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::entitymodule::C_Inventory : class wh::entitymodule::C_ItemHolder {

    //non-vtable method: WHGame.dll+0x949620
    Items( );
    //non-vtable method: WHGame.dll+0x2939d34
    CreateItems( structwh::entitymodule::S_ItemClassGUID const &, int, bool, uint, float, float );
    //non-vtable method: WHGame.dll+0xffff82117d683601
    MoveItems( classstd::shared_ptr<classwh::entitymodule::I_ItemDescriptor>, wh::entitymodule::Inventory*, bool, bool, bool );
    //non-vtable method: WHGame.dll+0x94970c
    DeleteItems( classstd::shared_ptr<classwh::entitymodule::I_ItemDescriptor>, bool, bool );
    //non-vtable method: WHGame.dll+0x94890c
    GetMoney( );
    //non-vtable method: WHGame.dll+0x19a3860
    GetName( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetItemBack : int {
    None              = 0,
    ItemObtained      = 1,
    ItemLost          = 2,
    ItemObtainedAgain = 3,
    Aborted           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasLocation* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct IRenderer {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulCounter>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KlaraByliny : int {
    None              = 0,
    ZiskejByliny      = 1,
    PrinesKlareByliny = 2,
    Hotovo            = 3,
    Canceled          = 4,
    Aborted           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinalDialogRas : int {
    Unfinished = 0,
    Finished   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_AlchemyTable *,class std::allocator<class wh::entitymodule::C_AlchemyTable *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoubleSuccess : int {
    None          = 0,
    Started       = 1,
    MecOdevzdan   = 2,
    MecNeodevzdan = 3,
    fail          = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LadderCount : int {
    None             = 0,
    AllLaddersUp     = 1,
    OneLadderDown    = 2,
    TwoLaddersDown   = 3,
    ThreeLaddersDown = 4,
    AllLadersDown    = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7ae38
enum enum wh::conceptmodule::E_CallbackSceneState::Type : unsigned char {
    Finish    = 0,
    Interrupt = 1,
};

//size in bytes: 0x410
//pointer dimension: 0
class CParticleManager : struct IParticleManager {
    0x2f0 : CountsByName : class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct TParticleCounts<float>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct TParticleCounts<float> > > >;
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::S_DeltaMovementSpeedParams {
    0x0 : SubRanges : class std::reference_wrapper<class std::vector<struct wh::S_DeltaMovementSpeedParamsSubRange,class std::allocator<struct wh::S_DeltaMovementSpeedParamsSubRange> > >;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_EnumExample {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatTrenazerResult : int {
    None                                = 0,
    CvicnyHracUkoncil                   = 1,
    CvicnyHracMaMaloHP                  = 2,
    CvicnyTrenerMaMaloHP                = 3,
    CvicnyVyprselCas                    = 4,
    OstryHracUkoncil                    = 5,
    OstryHracMaMaloHP                   = 6,
    OstryTrenerMaMaloHP                 = 7,
    CvicnyHracUkoncilChatemViceNepratel = 8,
    CvicnyHracMaMaloHPViceNepratel      = 9,
    CvicnyTrenerMaMaloHPViceNepratel    = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StaryMistrZnacky : int {
    None         = 0,
    NajitZnacky  = 1,
    NaselJsem    = 2,
    OdevzdalJsem = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_ProxyCounter<double>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulUnconsciousTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BasanTomasDuelOutcome : int {
    None      = 0,
    TomasDied = 1,
    BasanDied = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_FactionRelationBase> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskKrejzlAboutFights : int {
    None                    = 0,
    BeforeSpeakingToKrejzl  = 1,
    AfterSpeakingWithKrejzl = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum posoubojzavis : int {
    None      = 0,
    Started   = 1,
    Aborted   = 2,
    Done_won  = 3,
    Done_lost = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class wh::rpgmodule::I_Soul *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *> {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MurderGuardScheduler : int {
    None                        = 0,
    DuringStabbingInvestigation = 1,
    AfterStabbing               = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PoacherQuestCampAlarm : int {
    AlarmNotFired = 0,
    AlarmFired    = 1,
    Finished      = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditsBehavior : int {
    None                     = 0,
    Perceive                 = 1,
    WaitingForPlayerReaction = 2,
    Finished                 = 3,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::entitymodule::C_EquipmentSlotDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::entitymodule::C_EquipmentSlot,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::entitymodule::C_EquipmentSlot,class std::allocator<class wh::entitymodule::C_EquipmentSlot> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::C_AddSoulDefaultItem::E_Purpose::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum formationType : int {
    Relaxed      = 0,
    KeepDistance = 1,
    MoveHistory  = 2,
    KeepShape    = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_AddInventory : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_InventoryOperator {
    0x8 : preset : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::playermodule::C_Battlement {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_DistinctCounter<class CryStringT<char> >* {
};

//size in bytes: 0x2e0
//pointer dimension: 0
class wh::guimodule::C_CutsceneHandler : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_RuntimeState {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : EnqueueCutscene : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x88  : PlayCutscene    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc8  : FinishCutscene  : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x108 : CutsceneHolder  : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_CutsceneHolder *>*;
    0x148 : AutoPlay        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x188 : AutoFinish      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x1c8 : OnQueued        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x208 : BeforePlay      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x248 : AfterPlay       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x288 : OnFinished      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Node> {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeHorseUsageEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8  : DataSource        : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : RemovesHorseUsage : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b50240
enum enum wh::combatmodule::E_CombatActorStateId::Type : int {
    Idle             = 1,
    Guard            = 2,
    ReadingToStrike  = 4,
    Striking         = 8,
    FailedAttack     = 16,
    Withdraw         = 32,
    Hit              = 64,
    PreparingToParry = 128,
    ParryInPlace     = 256,
    Dodge            = 512,
    Transition       = 1024,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightTemporaryImmortality : int {
    Immortality = 0,
    Disabled    = 1,
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::entitymodule::C_ItemSlot : class wh::entitymodule::C_ItemHolder {

    //non-vtable method: WHGame.dll+0x19c6510
    GetItemClass( );
    //non-vtable method: WHGame.dll+0x79dc08
    IsItemInSlot( );
};

//size in bytes: 0x8
//pointer dimension: 1
const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_IntersectionItemDescriptor : class wh::entitymodule::I_ItemDescriptor, class wh::entitymodule::C_HomogenousItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TryTutorials : int {
    None              = 0,
    Started           = 1,
    TakedownDone      = 2,
    PickpocketingDone = 3,
    Completed         = 4,
    Aborted           = 5,
    JanDied           = 6,
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::playermodule::C_Minigame : class wh::playermodule::I_Minigame {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum prepadeniVlasskehoDvora_attackGate : int {
    None   = 0,
    Move   = 1,
    Attack = 2,
    Done   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Output* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GateGuards : int {
    None           = 0,
    TrackingActive = 1,
    Active         = 2,
    Done           = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_BlockUINotificationType {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DiceBadgeItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MoneyDistribution : int {
    None                  = 0,
    AllToPlayer           = 1,
    BackToLacek           = 2,
    HalfToPlayer          = 3,
    QuarterToPlayer       = 4,
    BackToLacekFromPlayer = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_DataPort* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_CombatComboStep* {
};

//size in bytes: 0x8
//pointer dimension: 1
const char* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaGoToAssault : int {
    None              = 0,
    GoToHorse         = 1,
    WaitPlayerOnHorse = 2,
    GoToAssault       = 3,
    GoToWaitPoint     = 4,
    Done              = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::rpgmodule::S_SoulArchetype* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_AddressKeyword>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum improveTub_findManure : int {
    None       = 0,
    FindManure = 1,
    Completed  = 2,
    Fail       = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AssetPort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum spizovaciOddil_combatObjective : int {
    None                    = 0,
    WithSoldiers            = 1,
    WihVilliagers           = 2,
    PlayerAttackedVillagers = 3,
    PlayerAttackedSoldiers  = 4,
    WinWithSoldiers         = 5,
    WinWithVillagers        = 6,
    FailedWithSoldiers      = 7,
    FailedWithVillagers     = 8,
    TotalFail               = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::playermodule::C_Smithery *>* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::guimodule::E_ConceptMarkerType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitForFader : int {
    None          = 0,
    WaitForStream = 1,
    IdleBehavior  = 2,
    Done          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoldiersArea : int {
    Out  = 0,
    In   = 1,
    Dead = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VyhodnoceniZrady : int {
    None                  = 0,
    PromluvSJimramem      = 1,
    PromluvSMikulasem     = 2,
    HenryPrijatDoSermirny = 3,
    Fail                  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OnOffFocusCamControlEffect : int {
    FocusCamPromptOff       = 0,
    FocusCamPromptOn        = 1,
    FocusCamPromptOnLooking = 2,
    Finished                = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_PendulaRowElement* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyPotionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Meeting : int {
    none              = 0,
    Active            = 1,
    WaitForActivation = 2,
    Done              = 3,
    Canceled          = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_SkillLessonLevel* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_GUIModule* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_SpawnItemEventData : struct wh::xgenaimodule::I_EventData {
    0x8 : ItemClassId : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulState>* {
};

//size in bytes: 0x2a8
//pointer dimension: 0
class wh::xgenaimodule::C_EntityContextTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_EntityScriptContext> {
    0x10  : Name                : class CryStringT<char>;
    0x18  : RuntimeState        : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports               : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView           : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive            : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Context             : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContext>*;
    0x190 : Souls               : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : OnContextAdded      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnContextRemoved    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x250 : Soul                : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x1d0 : OnAllContextAdded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x210 : OnAllContextRemoved : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HenrySeZastal : int {
    None    = 0,
    Success = 1,
    Fail    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_FunctionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LazarBehavior : int {
    None   = 0,
    Sick   = 1,
    Dead   = 2,
    Healed = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PostEndquestDistanceLimit : int {
    None                  = 0,
    Active                = 1,
    PostEndquestAvailable = 2,
    LeavingLevel          = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_RightHandCondition : class wh::xgenaimodule::NPCState::I_Condition, class wh::xgenaimodule::NPCState::C_HandContentConditionBase {
    0x8  : DataSource                : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : RequiresEmpty             : bool;
    0xd  : InitializeItemFromRequest : bool;
    0x10 : SetAsideSlotSource        : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x30 : SetAsideSlotDataSource    : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VipStreamingStates_Markvart : int {
    UnstreamedInitial     = 0,
    StreamedDebug         = 1,
    UnstreamedDebug       = 2,
    RatborPresent         = 3,
    RatborNotPresent      = 4,
    StealthmisePresent    = 5,
    StealthmiseNotPresent = 6,
    FinalePresent         = 7,
    FinaleNotPresent      = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_NonInteractiveLedgeTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomocKutnohorskym : int {
    None               = 0,
    ZradaDohodnuta     = 1,
    TurnajZahajen      = 2,
    KutnohorstiVyhrali = 3,
    NemciVyhrali       = 4,
    Abort              = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIMenuPage* {
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_RelationScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_PlayerData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum feastMicroQuest : int {
    None     = 0,
    Ready    = 1,
    Find     = 2,
    Deliver  = 3,
    Done     = 4,
    Canceled = 5,
    Aborted  = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ListovniTajemstvi_hang : int {
    None   = 0,
    Stream = 1,
    Hang   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum guildSwordHoldership : int {
    Guild            = 0,
    Player           = 1,
    Townhall         = 2,
    GuildAfterQuest  = 3,
    PlayerAfterQuest = 4,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::guimodule::C_UIFlashListItem : class wh::guimodule::C_UIFlashObject {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : ClassId         : int;
    0x20 : Category        : class CryStringT<char>;
    0x28 : IconId          : class CryStringT<char>;
    0x30 : Amount          : float;
    0x34 : MainStat        : float;
    0x38 : Health          : float;
    0x3c : Quality         : unsigned int;
    0x40 : ItemHealthState : unsigned int;
    0x44 : Weight          : float;
    0x48 : Price           : float;
    0x4c : IsEnable        : bool;
    0x50 : OutfitPresence  : unsigned int;
    0x54 : IsQuestItem     : bool;
    0x58 : Stolen          : unsigned int;
    0x5c : Dirt            : float;
    0x60 : Blood           : float;
    0x64 : BuffIcon        : unsigned int;
    0x68 : BuffDefId       : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_HoleTrigger* {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_Stash> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowOnWall : int {
    None                = 0,
    Wait                = 1,
    AttackMan           = 2,
    AttackPlayerWithBow = 3,
    Flee                = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::BehaviorTree::S_TreeEventSet {
    0x18 : Name   : class CryStringT<char>;
    0x0  : Events : class std::vector<struct wh::xgenaimodule::BehaviorTree::S_CallbackEventDefinition,class std::allocator<struct wh::xgenaimodule::BehaviorTree::S_CallbackEventDefinition> >;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afed40
enum enum wh::framework::E_ContentFilter::Type : unsigned char {
    Nudity        = 0,
    Sex           = 1,
    Homosexuality = 2,
    Gore          = 3,
    Gamescom      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleGroupBashGate : int {
    None       = 0,
    FirstMove  = 1,
    Wait       = 2,
    SecondMove = 3,
    BashGate   = 4,
    Flee       = 5,
    Done       = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_ItemSlot *,class std::allocator<class wh::entitymodule::C_ItemSlot *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FriarsFactionControl : int {
    Default_FriarsLikePlayer_IgnoreKonrad = 0,
    Friars_LikePlayer_HateKonrad          = 1,
    Friars_HatePlayer_HateKonrad          = 2,
    KondradDead_FratersLikeKonrad         = 3,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::entitymodule::C_ItemPropertyDescriptor : class wh::entitymodule::I_ItemDescriptor, class wh::entitymodule::C_HomogenousItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_MakeArray* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp1_FindPoacher : int {
    None              = 0,
    PoacherPath       = 1,
    PoacherFound      = 2,
    TalkedWithPoacher = 3,
    Failed            = 4,
    Canceled          = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::clothing::C_ClothingAttachmentProxy::E_StreamingState {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ResolveTheIncident : int {
    None            = 0,
    Active          = 1,
    DoneKonradDead  = 2,
    DoneKonradSaves = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorSprintTrigger> {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::entitymodule::clothing::C_VClothElement : class wh::entitymodule::clothing::C_ElementBase, class wh::entitymodule::clothing::C_SkinElement {
    //Getter: WHGame.dll+0x573d54
    get  : EquipmentPart                      : class CryStringT<char>;
    0xc  : BodyLayerId                        : class tiny::optional<int,-2147483648,0>;
    0x18 : Model                              : class std::optional<class CryStringT<char> >;
    0x28 : Material                           : class std::optional<class CryStringT<char> >;
    0x10 : IsFinalLayer                       : class tiny::optional<bool,0,0>;
    0x11 : KeepBodyLayer                      : class tiny::optional<bool,0,0>;
    0x38 : SimBinding                         : class std::optional<class CryStringT<char> >;
    0x48 : ForceSkinning                      : class tiny::optional<bool,0,0>;
    0x4c : ForceSkinningTranslateThreshold    : class tiny::optional<float,0,0>;
    0x50 : CheckAnimationRewind               : class tiny::optional<bool,0,0>;
    0x54 : DisableSimulationTimeRange         : class tiny::optional<float,0,0>;
    0x58 : TimeStep                           : class tiny::optional<float,0,0>;
    0x5c : TimeStepMax                        : class tiny::optional<int,-2147483648,0>;
    0x60 : NumIterations                      : class tiny::optional<int,-2147483648,0>;
    0x64 : CollideEveryNthStep                : class tiny::optional<int,-2147483648,0>;
    0x68 : CollisionMode                      : class std::optional<enum E_ClothCollisionMode::Type>;
    0x6c : GravityFactor                      : class tiny::optional<float,0,0>;
    0x70 : AirResistance                      : class tiny::optional<float,0,0>;
    0x74 : StretchStiffness                   : class tiny::optional<float,0,0>;
    0x78 : ShearStiffness                     : class tiny::optional<float,0,0>;
    0x7c : BendStiffness                      : class tiny::optional<float,0,0>;
    0x80 : BendStiffnessByTrianglesAngle      : class tiny::optional<float,0,0>;
    0x84 : PullStiffness                      : class tiny::optional<float,0,0>;
    0x88 : Friction                           : class tiny::optional<float,0,0>;
    0x8c : RigidDamping                       : class tiny::optional<float,0,0>;
    0x90 : SpringDamping                      : class tiny::optional<float,0,0>;
    0x94 : SpringDampingPerSubstep            : class tiny::optional<bool,0,0>;
    0x98 : CollisionDampingTangential         : class tiny::optional<float,0,0>;
    0x9c : NearestNeighborDistanceConstraints : class tiny::optional<bool,0,0>;
    0xa0 : NndcMaximumShiftFactor             : class tiny::optional<float,0,0>;
    0xa4 : NndcShiftCollisionFactor           : class tiny::optional<float,0,0>;
    0xa8 : NndcAllowedExtension               : class tiny::optional<float,0,0>;
    0xac : MaxAnimDistance                    : class tiny::optional<float,0,0>;
    0xb0 : FilterLaplace                      : class tiny::optional<float,0,0>;
    0xb4 : ResetDampingRange                  : class tiny::optional<int,-2147483648,0>;
    0xb8 : ResetDampingFactor                 : class tiny::optional<float,0,0>;
    0xc0 : BlendControlJointName              : class std::optional<class CryStringT<char> >;
    0xd0 : BlendControlAxis                   : class std::optional<enum EAttachmentBlendControlJointAxisToUse>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum arbitrateConflict : int {
    None               = 0,
    Started            = 1,
    CompleteWithArcher = 2,
    CompleteWithRacer  = 3,
    CompleteAsNeutral  = 4,
    CompleteAsFake     = 5,
    Cancelled          = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::clothing::S_SerializedUberlodSource* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JasakAfterCourting : int {
    None           = 0,
    Watching       = 1,
    JoinedSkirmish = 2,
    Done           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetContest_HorseSabotage : int {
    None        = 0,
    PoisonHorse = 1,
    StartRace   = 2,
    Done        = 3,
    PotionLost  = 4,
    Failed      = 5,
    Aborted     = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
int {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::Haste::C_HasteTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpyLetterQI : int {
    None        = 0,
    StepanVrana = 1,
    Player      = 2,
};

//size in bytes: 0x78
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_PathFindingRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_Hole* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HledaniMorticia : int {
    None                = 0,
    NavratArea          = 1,
    HledaniMorticiaSvet = 2,
    MorticiusNalezen    = 3,
    MorticiusUmrel      = 4,
    Aborted             = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_autotestHandler : int {
    None           = 0,
    WaitForSignal  = 1,
    HasteActivated = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TriggerAreaAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoudekOwner : int {
    None   = 0,
    Fousek = 1,
    Henry  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DialogAndWait : int {
    None   = 0,
    Dialog = 1,
    Wait   = 2,
    Done   = 3,
};

//size in bytes: 0x240
//pointer dimension: 0
class wh::playermodule::C_BlacksmithTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name               : class CryStringT<char>;
    0x18  : RuntimeState       : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports              : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView          : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive           : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Smithery           : class wh::conceptmodule::C_TypedPortRef<class wh::playermodule::C_Smithery *>*;
    0xf8  : Recipe             : class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_BlacksmithRecipeId>*;
    0x138 : ProductItemClass   : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;
    0x178 : ProductQuality     : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x1b8 : ProductCondition   : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x1f8 : ProductOnEquipBuff : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionId>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3e10518
enum enum wh::framework::E_GameReleaseVersion::Type : int {
    Invalid      = 2147483647,
    ver_01_00    = 10000,
    ver_01_01    = 10100,
    ver_01_01_01 = 10101,
    ver_01_01_02 = 10102,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TarasKill : int {
    None            = 0,
    Started         = 1,
    DoneDead        = 2,
    DoneUnconscious = 3,
    DonePeace       = 4,
    Aborted         = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateBase<enum wh::playermodule::E_SaveGameWithNotificationState::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRewardFromActivityGiver : int {
    None                                   = 0,
    RewardIsAvailable                      = 1,
    RewardReceivedWithInfoAboutOtherArenas = 2,
    RewardReceivedWithInfoAboutChampion    = 3,
    Aborted                                = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<struct wh::dialogmodule::S_DialogParams> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::conceptmodule::S_TypeConversion {
    0x8 : TypeName : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bcd720
enum enum wh::xgenaimodule::NPCState::E_ElementType::Type : unsigned char {
    Stance                = 0,
    LeftHand              = 1,
    RightHand             = 2,
    Unstance              = 3,
    ChangeEquipment       = 4,
    Minigame              = 5,
    MandatoryElementCount = 6,
    ChangeBehaviorState   = 7,
    AddLink               = 8,
    ChangeAreaLabel       = 9,
    ItemSetAside          = 10,
    EnableBehaviorForNPC  = 11,
    AddContext            = 12,
    EnableRoleOnHub       = 13,
    HorseUsage            = 14,
    AddMetarole           = 15,
    AddBuff               = 16,
    ItemsToReturn         = 17,
    OpenShop              = 18,
    CombatAutomations     = 19,
};

//size in bytes: 0x8
//pointer dimension: 1
enum wh::framework::E_SaveGameType::Type* {
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionIdleRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionIdleRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionManipulationType* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightWithPeasant : int {
    None                       = 0,
    IndifferentFightInProgress = 1,
    ResponsiveFightInProgress  = 2,
    PlayerWon                  = 3,
    PeasantWon                 = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_LedgeObjectAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowOnBackyard : int {
    None             = 0,
    Wait             = 1,
    BrutalitaStarted = 2,
    AttackerWithMan  = 3,
    Talk             = 4,
    AssaultVictims   = 5,
    AssaultPlayer    = 6,
    Finished         = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum translation : int {
    None                           = 0,
    Started                        = 1,
    knowAboutCamp                  = 2,
    knowAboutFirstTranslator       = 3,
    spokeWithFirstTranslator       = 4,
    spokeWithSecondTranslator      = 5,
    SpeakAgainWithFirstTranslator  = 6,
    SpeakAgainWithSecondTranslator = 7,
    SpokeAgainWithSecondTranslator = 8,
    Canceled                       = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AroundDuel : int {
    None     = 0,
    Accepted = 1,
    Started  = 2,
    Done     = 3,
    Disabled = 4,
};

//size in bytes: 0x118
//pointer dimension: 0
class wh::rpgmodule::C_SoulUiNameOverride : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xd0 : Name         : class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bbffb8
enum enum wh::playermodule::E_BlacksmithingTutorialNumericFeature::Type : unsigned char {
    QualityLossFactor     = 0,
    CompletiongGainFactor = 1,
    TemperatureLossFactor = 2,
    MaxZoneTemperature    = 3,
    MoveWorkpieceInForge  = 4,
    MoveWorkpieceOnAnvil  = 5,
    StrokeEnabled         = 6,
    ForgeBagEnabled       = 7,
    WorkpieceCannotBreak  = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Healing : int {
    None            = 0,
    Diagnose        = 1,
    BasicHealing    = 2,
    AdvancedHealing = 3,
    Cured           = 4,
    CuredWell       = 5,
    Died            = 6,
    NoDiagnose      = 7,
    NotCured        = 8,
    Aborted         = 9,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::playermodule::S_RandomEventOptionSet,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelsHenchmenStreaming : int {
    InitStreamed = 0,
    Unstreamed   = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afed90
enum enum wh::playermodule::E_RandomEventGlobalCooldown::Type : unsigned char {
    Default       = 0,
    City          = 1,
    GenericEvents = 2,
    Caravan       = 3,
    Fast          = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestActive : int {
    None        = 0,
    Initialized = 1,
    Active      = 2,
    NonActive   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillingImportantNpcs : int {
    None   = 0,
    Procek = 1,
    Olbram = 2,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetBeard : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_SetCharacterComponentBase {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x148
//pointer dimension: 0
class wh::entitymodule::clothing::C_Clothing : class wh::entitymodule::clothing::C_Component {
    0x8   : Name                          : class CryStringT<char>;
    0x10  : Race                          : class std::optional<enum wh::entitymodule::E_Race::Type>;
    0x18  : Gender                        : class std::optional<enum wh::entitymodule::E_ActorGender>;
    0x20  : FilePath                      : class CryStringT<char>;
    //Getter: WHGame.dll+0x2830820
    get   : HidingGroups                  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50  : Elements                      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase> > > >;
    0x68  : Features                      : class std::reference_wrapper<class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> > >;
    //Getter: WHGame.dll+0x2830920
    get   : Morphs                        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x80  : DerivedComponents             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    0x98  : RepresentativeUberlodClothing : class CryStringT<char>;
    //Getter: WHGame.dll+0x19bc240
    get   : SourceForUberlodPart          : class CryStringT<char>;
    0xd8  : DistributionWeight            : float;
    //Getter: WHGame.dll+0x2830964
    get   : Paleness                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830a24
    get   : Roughness                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x283051c
    get   : Age                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830540
    get   : ArmorType                     : class CryStringT<char>;
    0x128 : ArmorArchetypeId              : class std::optional<int>;
    0x130 : AlternativeArmorArchetypeId   : class std::optional<int>;
    0x138 : DropModel                     : class CryStringT<char>;
    0x140 : DropMaterial                  : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_SchedulerEffectBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeliverMedicine : int {
    None                      = 0,
    DeliverMedicineToMarika   = 1,
    DeliveredMedicineToMarika = 2,
    Collapse                  = 3,
    Failed                    = 4,
    Abort                     = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::C_SoulReputationReward : class wh::rpgmodule::I_Reward {
    0x8  : Target           : class CryStringT<char>;
    0x10 : ReputationChange : class CryStringT<char>;
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::conceptmodule::definition::C_RunTimePortDefinition : class wh::conceptmodule::definition::I_PortDefinition {
    //Getter: WHGame.dll+0x1eddb50
    get : Name                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1eddc50
    get : Visibility                  : enum wh::conceptmodule::E_PortVisibility;
    //Getter: WHGame.dll+0x1ede048
    get : Direction                   : enum wh::conceptmodule::E_PortDirection;
    //Getter: WHGame.dll+0x1ede050
    get : ConnectionType              : enum wh::conceptmodule::E_PortConnectionType;
    //Getter: WHGame.dll+0x1ede058
    get : Type                        : class rttr::type;
    //Getter: WHGame.dll+0x1ede060
    get : Template                    : enum wh::conceptmodule::E_TemplateTypename;
    //Getter: WHGame.dll+0x1eddb78
    get : IsHidden                    : bool;
    //Getter: WHGame.dll+0x1eddb80
    get : IsVariadic                  : bool;
    //Getter: WHGame.dll+0x1eddb88
    get : IsSequential                : bool;
    //Getter: WHGame.dll+0x1eddb90
    get : IsOptional                  : bool;
    //Getter: WHGame.dll+0x1eddb98
    get : IsInternal                  : bool;
    //Getter: WHGame.dll+0x1eddba0
    get : IsAutoTriggerable           : bool;
    //Getter: WHGame.dll+0x1ede068
    get : IsTriggerableWhenHibernated : bool;
    //Getter: WHGame.dll+0x25476a0
    get : LinkedTriggerPorts          : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x1eddb70
    get : DefaultValue                : class rttr::variant;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillKarlik : int {
    None          = 0,
    KillBandits   = 1,
    BanditsKilled = 2,
    Fail          = 3,
    Aborted       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BowAtPlayerProgress : int {
    None             = 0,
    LookingForPlayer = 1,
    Bowing           = 2,
    Done             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ActivityStartingValues : int {
    HracQuestNeplnil = 0,
    HracSmeckuPobil  = 1,
    HracLhal         = 2,
    HracNelhal       = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingDef {
    //Getter: WHGame.dll+0x333557c
    get  : SectorEndAnglesDeg : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x18 : Distance           : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanConfiguration : int {
    None     = 0,
    Active   = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum carryAnton : int {
    none            = 0,
    seberAntona     = 1,
    nasledujFrancka = 2,
    done            = 3,
    fail            = 4,
    carryingAnton   = 5,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIHudCrimeList : class wh::guimodule::C_UIBase, class wh::framework::I_UIHudCrimeList {
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::xgenaimodule::C_GameContextTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_GameScriptContext> {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Context          : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContext>*;
    0x100 : OnContextAdded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnContextRemoved : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_handType : int {
    right = 0,
    left  = 1,
    both  = 2,
    none  = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::C_SoulDerivStatCounter : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SoulPropertyCounter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BoozeFindingObjective : int {
    None                     = 0,
    TourWithCumanInTheForest = 1,
    TalkToTheDog             = 2,
    GetTheBoozeFromStash     = 3,
    BoozeAcquired            = 4,
    Aborted                  = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::guimodule::C_PlayTrackView> {
};

//size in bytes: 0x1
//pointer dimension: 0
signed char {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::scheduler::E_Aliveness::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_CallbackEventCatch : class wh::xgenaimodule::BehaviorTree::I_Node, class wh::xgenaimodule::BehaviorTree::I_CallbackEventConsumer {
};

//size in bytes: 0x70
//pointer dimension: 0
struct wh::entitymodule::S_DoorThroughData {
    0x0  : Front : struct wh::entitymodule::S_DoorThroughDirectionData;
    0x38 : Back  : struct wh::entitymodule::S_DoorThroughDirectionData;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StaticTriggerPort* {
};

//size in bytes: 0x1
//pointer dimension: 0
char {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkaHradby : int {
    None             = 0,
    Chat             = 1,
    CekaniNaHradbach = 2,
    Done             = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LedgeObject *>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyRecipe* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TovarysiProfile : int {
    None                  = 0,
    TovarysiCekaji        = 1,
    TovyrysiOdesli        = 2,
    TovarysiOdstreamovani = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_ItemManipulationData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GraveyardStreaming : int {
    Unstreamed                  = 0,
    Streamed                    = 1,
    Streamed_WaitingForUnstream = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum revealingFakeStone : int {
    None                  = 0,
    StoneIsNotRevealedYet = 1,
    StoneIsRevealed       = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum lootingResultsLogs : int {
    None                                    = 0,
    EnoughWithHenry                         = 1,
    NotEnoughtWithHenryWithSoldiers         = 2,
    NotEnoughtWithHenryWithVillagers        = 3,
    VillagersAngryWithHenry                 = 4,
    VillagersAngryWithHenryButPersuaded     = 5,
    VillagersAngryWithHenryButThreaten      = 6,
    ComanderKnowsAboutSoldiersWithSoldiers  = 7,
    ComanderKnowsAboutSoldiersWithVillagers = 8,
    EnoughWithoutHenry                      = 9,
    NotEnoughWithoutHenry                   = 10,
    VillagersAngryWithoutHenry              = 11,
    Fail1                                   = 12,
    Fail2                                   = 13,
    Fail3                                   = 14,
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::playermodule::S_RandomEventOptionResultAction {
    0x0  : Message           : class wh::framework::C_LocalizedString;
    0x10 : Action            : enum wh::playermodule::E_RandomEventOptionAction::Type;
    //Getter: WHGame.dll+0x2dfd180
    get  : AdditionalActions : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlockTutorial* {
};

//size in bytes: 0x250
//pointer dimension: 0
class wh::rpgmodule::C_SoulDeathTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::rpgmodule::C_SoulPropertyTrigger {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x140 : Tracker      : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;
    0x1d0 : OnAllDeath   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x210 : OnDeath      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::rpgmodule::C_CrimeDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_Crime,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::S_Crime,class std::allocator<struct wh::rpgmodule::S_Crime> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::rpgmodule::C_DebugReputationLog::S_LogEntry {
    0x0 : changeRequest : class std::weak_ptr<struct wh::rpgmodule::I_ReputationLog::S_RepChangeRec const >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamInnerCourtyardBehavior : int {
    None            = 0,
    GoingToDoors    = 1,
    DestroyingDoors = 2,
    Done            = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vokrakMigration : int {
    InGrunta    = 0,
    InKutnaHora = 1,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::playermodule::S_Tutorial {
    0x8  : Name                : class CryStringT<char>;
    0x10 : RemindAfterLongTime : bool;
    0x20 : GameModeFilter      : enum wh::game::E_GameMode::Type;
    0x11 : Repeatable          : bool;
    0x18 : RepeatCooldown      : struct wh::framework::S_TimeSpan;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum azZaHrobItemHolder : int {
    none        = 0,
    hrobnik     = 1,
    player      = 2,
    confiscated = 3,
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimPutItemInHandRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPutItemInHandRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPutItemInHandRequest> {
};

//size in bytes: 0x1f0
//pointer dimension: 0
class wh::dialogmodule::C_DialogManager {

    //non-vtable method: WHGame.dll+0x27252ac
    CanEvaluateConditions( );
    //non-vtable method: WHGame.dll+0x27255e4
    EvaluateCondition( string const &, string const & );
};

//size in bytes: 0x8
//pointer dimension: 1
const struct wh::rpgmodule::I_ReputationLog::S_RepChangeRec* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_Clothing* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<class std::shared_ptr<class wh::dialogmodule::data::C_Sequence>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_animal_stimulusKind : int {
    unknown  = 0,
    combat   = 1,
    enemy    = 2,
    flyBy    = 3,
    human    = 4,
    hit      = 5,
    item     = 6,
    sound    = 7,
    startle  = 8,
    trespass = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3c20860
enum enum wh::xgenaimodule::E_VariableForm::Type : int {
    Single            = 0,
    Array             = 1,
    Associative       = 2,
    CustomAssociative = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BorderPegPosition : int {
    None    = 0,
    Started = 1,
    Tachov  = 2,
    Center  = 3,
    Zelejov = 4,
    Aborted = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TombEntrance : int {
    Closed = 0,
    Opened = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StepanVranaMigrations : int {
    SigismundCamp = 0,
    Certovka      = 1,
    Suchdol       = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xbehaviormodule::C_XBehaviorModule {
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::entitymodule::S_CatWaypointRecord {
    0x8  : Guid     : unsigned __int64;
    0x10 : Waypoint : struct wh::entitymodule::S_CatWaypointDefinition;
    0x28 : NextPt   : unsigned __int64;
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::xgenaimodule::C_DecisionLabelDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_DecisionLabel,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_DecisionLabel,class std::allocator<struct wh::xgenaimodule::S_DecisionLabel> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
const unsigned __int64* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_IfFunction> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_Decision* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemVlasy : int {
    None      = 0,
    vTruhle   = 1,
    hracNasel = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ReadAIMessage* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::guimodule::C_UIBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh1GameOver : int {
    None     = 0,
    1stFail  = 1,
    2ndFail  = 2,
    GameOver = 3,
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::guimodule::C_UIMenuConfirmation {
    0x8  : Id            : enum wh::guimodule::E_ConfirmationId::Type;
    0x10 : Question      : class wh::framework::C_LocalizedString;
    0x20 : Answer0       : class wh::framework::C_LocalizedString;
    0x30 : Answer1       : class wh::framework::C_LocalizedString;
    0x40 : DefaultAnswer : int;
    0x44 : BackAnswer    : int;
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::entitymodule::C_ItemSlotTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc8  : ItemSlot       : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemSlot *>*;
    0x108 : OnAfterAcquire : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x148 : OnBeforeLose   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x188 : Item           : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Item *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xfa8
//pointer dimension: 0
struct wh::rpgmodule::S_Constants {
    0x8   : AttackStamModMin                                  : float;
    0xc   : AttackRequiredStamRatio                           : float;
    0x10  : BaseAttackStaminaCost                             : float;
    0x14  : MaxStatToAttackStaminaCostMult                    : float;
    0x18  : MinStatToAttackStaminaCostMult                    : float;
    0x1c  : MaxStatToAttackStaminaCostStatDiff                : float;
    0x20  : BaseDodgeStaminaCost                              : float;
    0x24  : DodgeRelArmorLoadThreshold                        : float;
    0x28  : DodgeRelDistanceThreshold                         : float;
    0x2c  : HeavyWeaponWeight                                 : float;
    0x30  : StrToEqwArmorLoad                                 : float;
    0x34  : AgiToEqwArmorLoad                                 : float;
    0x38  : VitToEqwArmorLoad                                 : float;
    0x3c  : ArmorLoadDiffToMax                                : float;
    0x40  : MaxArmorLoad                                      : float;
    0x44  : HeavyLightArmorThreshold                          : float;
    0x48  : AttackSpeedPlayerRelative                         : float;
    0x4c  : AttackSpeedNormal                                 : float;
    0x50  : AttackSpeedNormalAgi                              : float;
    0x54  : MaxAttackSpeedMod                                 : float;
    0x58  : MaxAttackSpeedPlayerMod                           : float;
    0x5c  : MaxAttackSpeedNpcVsNpcMod                         : float;
    0x60  : AgiDiffToAttackSpeed                              : float;
    0x64  : SkillDiffToAttackSpeed                            : float;
    0x68  : WeaponStatusToAttackCoef                          : float;
    0x6c  : ArmorStatusToDefenseCoef                          : float;
    0x70  : ArmorStatusToCharismaCoef                         : float;
    0x74  : ArmorDirtToCharismaCoef                           : float;
    0x78  : AttSkillToHorsePullDown                           : float;
    0x7c  : AttStrengthToHorsePullDown                        : float;
    0x80  : RiderSkillToHorsePullDown                         : float;
    0x84  : RiderAgilityToHorsePullDown                       : float;
    0x88  : HorseMaxAttackCoef                                : float;
    0x8c  : HorseAttackMaxSpeed                               : float;
    0x90  : HorseridingSkillXPForKillFromHorseback            : struct fixed_t<unsigned int,25>;
    0x94  : CombatLevelMinToCombatRPGBonus                    : float;
    0x98  : CombatLevelToRelativeAttackIncrease               : float;
    0x9c  : CombatLevelToRelativeHealthLossDecrease           : float;
    0xa0  : SkillXPLevelBase                                  : struct fixed_t<unsigned int,25>;
    0xa4  : SkillXPLevelDiff                                  : struct fixed_t<unsigned int,25>;
    0xa8  : SkillCap                                          : unsigned int;
    0xac  : SkillXPHit                                        : struct fixed_t<unsigned int,25>;
    0xb0  : SkillXPComboHit                                   : struct fixed_t<unsigned int,25>;
    0xb4  : SkillXPKill                                       : struct fixed_t<unsigned int,25>;
    0xb8  : SkillXPBlock                                      : struct fixed_t<unsigned int,25>;
    0xbc  : SkillXPPerfectBlock                               : struct fixed_t<unsigned int,25>;
    0xc0  : SkillXPRiposte                                    : struct fixed_t<unsigned int,25>;
    0xc4  : SkillXPDrinkAlcohol                               : struct fixed_t<unsigned int,25>;
    0xc8  : SkillXPUseRepairKit                               : struct fixed_t<unsigned int,25>;
    0xcc  : SkillToFencingBase                                : float;
    0xd0  : MinStatToAttackMult                               : float;
    0xd4  : MaxStatToAttackMult                               : float;
    0xd8  : MaxStatToAttackStatDiff                           : float;
    0xdc  : SkillToDmgConstA                                  : float;
    0xe0  : SkillToDefense                                    : float;
    0xe4  : SkillToPerfectBlockPowTo                          : float;
    0xe8  : MinPerfectBlockSlot01                             : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xec  : StatsToDodgePowTo                                 : float;
    0xf0  : BigZoneDistanceSlotMod                            : float;
    0xf4  : MaxPerfectBlockSlotModifier                       : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xf8  : MaxSpecialPerfectBlockSlotModifier                : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xfc  : AgilityXPLevelBase                                : struct fixed_t<unsigned int,25>;
    0x100 : AgilityXPLevelDiff                                : struct fixed_t<unsigned int,25>;
    0x104 : StrengthXPLevelBase                               : struct fixed_t<unsigned int,25>;
    0x108 : StrengthXPLevelDiff                               : struct fixed_t<unsigned int,25>;
    0x10c : VitalityXPLevelBase                               : struct fixed_t<unsigned int,25>;
    0x110 : VitalityXPLevelDiff                               : struct fixed_t<unsigned int,25>;
    0x114 : SpeechXPLevelBase                                 : struct fixed_t<unsigned int,25>;
    0x118 : SpeechXPLevelDiff                                 : struct fixed_t<unsigned int,25>;
    0x11c : StoryProgressXPLevelBase                          : struct fixed_t<unsigned int,25>;
    0x120 : StoryProgressXPLevelDiff                          : struct fixed_t<unsigned int,25>;
    0x124 : StatCap                                           : unsigned int;
    0x128 : StatToMainLevelBase                               : float;
    0x12c : StatXPHit                                         : struct fixed_t<unsigned int,25>;
    0x130 : StatXPComboHit                                    : struct fixed_t<unsigned int,25>;
    0x134 : StatXPKill                                        : struct fixed_t<unsigned int,25>;
    0x138 : StatXPAgilityPerDodge                             : struct fixed_t<unsigned int,25>;
    0x13c : StatXPAgilityPerDodgeOutsideSlot                  : struct fixed_t<unsigned int,25>;
    0x140 : StatXPVitalityPerDodge                            : struct fixed_t<unsigned int,25>;
    0x144 : StatXPSpeechPerSequence                           : struct fixed_t<unsigned int,25>;
    0x148 : StatXPSpeechPersuadeCoerceSuccessMax              : struct fixed_t<unsigned int,25>;
    0x14c : StatXPSpeechSkillCheckSuccessMax                  : struct fixed_t<unsigned int,25>;
    0x150 : StatXPSpeechSkillStatSkillCheckSuccessMax         : struct fixed_t<unsigned int,25>;
    0x154 : StatXPSpeechSkillCheckFailMax                     : struct fixed_t<unsigned int,25>;
    0x158 : StatXPSpeechSkillStatSkillCheckFailMax            : struct fixed_t<unsigned int,25>;
    0x15c : SkillXPSkillCheckSuccess                          : struct fixed_t<unsigned int,25>;
    0x160 : SkillXPSkillCheckFail                             : struct fixed_t<unsigned int,25>;
    0x164 : GeneralPropertyDiffToSkillCheckResult             : float;
    0x168 : MajorSuccessSkillCheckLevel                       : float;
    0x16c : SuccessSkillCheckLevel                            : float;
    0x170 : MajorFailSkillCheckLevel                          : float;
    0x174 : BadassnessDifficultyModifier                      : float;
    0x178 : SkillcheckReputationPenalty                       : float;
    0x17c : PersuadeSkillcheckSpeechWeight                    : float;
    0x180 : CoerceSkillcheckSpeechWeight                      : float;
    0x184 : ImpressSkillcheckSpeechWeight                     : float;
    0x188 : DominateSkillcheckSpeechWeight                    : float;
    0x18c : DreadSkillcheckBloodinessWeight                   : float;
    0x190 : DreadSkillcheckDirtinessWeight                    : float;
    0x194 : EasyDifficultySkillcheckOpponentValue             : float;
    0x198 : MediumDifficultySkillcheckOpponentValue           : float;
    0x19c : HardDifficultySkillcheckOpponentValue             : float;
    0x1a0 : ResetPublicFriendsRelationshipMin                 : float;
    0x1a4 : ResetNearbyRelationshipRange                      : float;
    0x1a8 : RelationshipToImpressCharisma                     : float;
    0x1ac : RelationshipToPersuadeSpeech                      : float;
    0x1b0 : RelationshipToThreatenBadassness                  : float;
    0x1b4 : RelationshipToGeneralSkillCheck                   : float;
    0x1b8 : ThreatenStrenghtWeight                            : float;
    0x1bc : HighbornWealthThreshold                           : unsigned int;
    0x1c0 : StatXPVitalityPerKill                             : struct fixed_t<unsigned int,25>;
    0x1c4 : StatXPVitalityPerDistance                         : struct fixed_t<unsigned int,25>;
    0x1c8 : HorseRidingXPPerDistance                          : struct fixed_t<unsigned int,25>;
    0x1cc : StatXPVitalityPerJump                             : struct fixed_t<unsigned int,25>;
    0x1d0 : StatXPStrAndVitPerDistanceEncumbered              : struct fixed_t<unsigned int,25>;
    0x1d4 : SecondaryStatXPRatio                              : struct fixed_t<unsigned int,25>;
    0x1d8 : StatXPVitalityPerVault                            : float;
    0x1dc : HoundmasterXPHit                                  : struct fixed_t<unsigned int,25>;
    0x1e0 : HoundmasterXPKill                                 : struct fixed_t<unsigned int,25>;
    0x1e4 : HoundmasterXPAnimalKill                           : struct fixed_t<unsigned int,25>;
    0x1e8 : HoundmasterXPFeed                                 : struct fixed_t<unsigned int,25>;
    0x1ec : HoundmasterXPPOIDiscovery                         : struct fixed_t<unsigned int,25>;
    0x1f0 : HoundmasterXPPlay                                 : struct fixed_t<unsigned int,25>;
    0x1f4 : HoundmasterXPContextCommand                       : struct fixed_t<unsigned int,25>;
    0x1f8 : HoundmasterXPFetch                                : struct fixed_t<unsigned int,25>;
    0x1fc : HoundmasterXPDistraction                          : struct fixed_t<unsigned int,25>;
    0x200 : HoundmasterXPPraise                               : struct fixed_t<unsigned int,25>;
    0x204 : SprintCost                                        : float;
    0x208 : SprintStaminaSavingLowerBound                     : float;
    0x20c : SprintStaminaSavingUpperBound                     : float;
    0x210 : StamRegenBase                                     : float;
    0x214 : StamRegenRelativeDiff                             : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x218 : StamRegenBlockMod                                 : float;
    0x21c : StamRegenMoveMod                                  : float;
    0x220 : StamRegenFromVit                                  : float;
    0x224 : MaxAgilityToMovementSpeedAddition                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x228 : HorseRidingToHorseStamina                         : float;
    0x22c : HorseRidingToHorseCourage                         : float;
    0x230 : RiderThreatToHorseMorale                          : float;
    0x234 : HorseMoraleToThrowOffRider                        : float;
    0x238 : HorseMoraleOverspurrHitAmount                     : float;
    0x23c : HorseForcedRearMoraleHitRange                     : float;
    0x240 : HorseDashBufferLength                             : float;
    0x244 : HorseSpurDashIncrement                            : float;
    0x248 : HorseSlowdownTimeSlowSpeed                        : float;
    0x24c : HorseSlowdownTimeSprint                           : float;
    0x250 : HorseSlowdownTimeSprintIfDashed                   : float;
    0x254 : HorseSlowSpeedStaminaRegen                        : float;
    0x258 : HorseStaminaDrainPerSpurLevel                     : float;
    0x25c : HorseSpurDebuffLength                             : float;
    0x260 : HorseDashSlowdownThreshold                        : float;
    0x264 : HorseMagnetismTurnSlowdown                        : float;
    0x268 : HorseJumpHeightModifier                           : float;
    0x26c : RiderHorseStaminaCoef                             : float;
    0x270 : HorseMountMaxRelativeEncumberance                 : float;
    0x274 : HorseForcedRearingStaminaCost                     : float;
    0x278 : RiderForcedRearingStaminaCost                     : float;
    0x27c : RunSpeedBaseGuiMin                                : float;
    0x280 : RunSpeedBaseGuiMax                                : float;
    0x284 : RunSpeedBaseGuiMinHorse                           : float;
    0x288 : RunSpeedBaseGuiMaxHorse                           : float;
    0x28c : CallActionCooldown                                : float;
    0x290 : ArmorLoadToSprint                                 : float;
    0x294 : ArmorLoadToRun                                    : float;
    0x298 : JumpCostBase                                      : float;
    0x29c : ArmorLoadToJumpCost                               : float;
    0x2a0 : EncumberedToSpeedSurfaceCoef                      : float;
    0x2a4 : EncumberanceForSecondaryModifiers                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x2a8 : SurfaceToSpeedCoef                                : float;
    0x2ac : AgilityLevelForNonClumsyLedges                    : float;
    0x2b0 : GoodWeaponDefense                                 : float;
    0x2b4 : GoodWeaponDefenseCoef                             : float;
    0x2b8 : GoodWeaponAttack                                  : float;
    0x2bc : GoodArmorDefense                                  : float;
    0x2c0 : MaxDamage                                         : float;
    0x2c4 : MinDmgR                                           : float;
    0x2c8 : BlockingDmgRBonus                                 : float;
    0x2cc : BlockingDmgRCoef                                  : float;
    0x2d0 : MinStaminaDamage                                  : float;
    0x2d4 : MaxStaminaDamage                                  : float;
    0x2d8 : MinStaminaDmgR                                    : float;
    0x2dc : MaxStaminaDmgR                                    : float;
    0x2e0 : LethalDmgR                                        : float;
    0x2e4 : StamDamage                                        : float;
    0x2e8 : AverageArmorDefenseWeight                         : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x2ec : UnarmedHitArmorDamageCoef                         : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x2f0 : WeakBlockStamCoef                                 : float;
    0x2f4 : HealthToKnockOut                                  : float;
    0x2f8 : DmgRToHealthCoefA                                 : float;
    0x2fc : DmgRToHealthCoefB                                 : float;
    0x300 : StaminaDeficitHealthDamageA                       : float;
    0x304 : StaminaDeficitHealthDamageB                       : float;
    0x308 : MaxFencingWeaponUsageMod                          : float;
    0x30c : ArmorDefenseToAttackingWeaponStatus               : float;
    0x310 : WeaponDefenseToAttackingWeaponStatus              : float;
    0x314 : MissileWeaponDamageStatus                         : float;
    0x318 : DamageToArmorStatusHigherLayers                   : float;
    0x31c : DamageToArmorStatus                               : float;
    0x320 : DamageToArmorStatusLowerLayers                    : float;
    0x324 : DamageToArmorStatusMinimalValue                   : float;
    0x328 : AttackEnergyModifier                              : float;
    0x32c : StaminaDamageToInjury                             : float;
    0x330 : HealthDamageToInjury                              : float;
    0x334 : HealthDeltaAbsLimit                               : float;
    0x338 : CollisionVelocityDeltaToDmgR                      : float;
    0x33c : CollisionDmgRBias                                 : float;
    0x340 : UnarmedBlockDefense                               : float;
    0x344 : UnarmedAttackReqStrBase                           : float;
    0x348 : UnarmedAttackReqAgiBase                           : float;
    0x34c : CombatDangerCooldown                              : float;
    0x350 : CombatDmgRBonusFromBehind                         : float;
    0x354 : FromBehindAngle                                   : float;
    0x358 : HeadHitKnockOutBaseProbability                    : float;
    0x35c : FallDamageMultiplierAtMaxAgility                  : float;
    0x360 : HarmlessFallHeight                                : float;
    0x364 : InjuringFallHeight                                : float;
    0x368 : FatalFallHeight                                   : float;
    0x36c : FallDamageEnabledNpcCombatCooldown                : float;
    0x370 : StaminaDrainRatioStriking                         : float;
    0x374 : StaminaDrainRatioCharging                         : float;
    0x378 : AttackChargingBeginCooldown                       : float;
    0x37c : AttackChargingCooldown                            : float;
    0x380 : AttackChargingAttMod                              : float;
    0x384 : SurvivalSkillAttackToAnimalOnMaxLevel             : float;
    0x388 : HealthFull                                        : float;
    0x38c : ImmortalHealthMin                                 : float;
    0x390 : LowHealthThreshold                                : float;
    0x394 : DefaultWorldTimeRatio                             : float;
    0x398 : DawnTime                                          : float;
    0x39c : DuskTime                                          : float;
    0x3a0 : NightTransitionPeriod                             : float;
    0x3a4 : FoodHealthThreshold                               : float;
    0x3a8 : FoodFull                                          : float;
    0x3ac : FoodOverEat                                       : float;
    0x3b0 : CaffeineFromFoodCoef                              : float;
    0x3b4 : FoodSaltOrSmokePerkDecayModif                     : float;
    0x3b8 : FoodPreserverHealthIncreaseAmount                 : float;
    0x3bc : FoodWitcherPerkNutritionModif                     : float;
    0x3c0 : MaxAggregatedItemAmountPerPoison                  : float;
    0x3c4 : DigestionSpeed                                    : float;
    0x3c8 : ShortTermNutritionDigestionSpeedMultiplier        : float;
    0x3cc : SurvivalXpRewardPerCookedItem                     : struct fixed_t<unsigned int,25>;
    0x3d0 : SurvivalXpRewardPerDriedItem                      : struct fixed_t<unsigned int,25>;
    0x3d4 : SurvivalXpRewardPerSmokedItem                     : struct fixed_t<unsigned int,25>;
    0x3d8 : MetabolismDigestSpeed                             : float;
    0x3dc : MetabolismDigestSpeedMultiplier                   : float;
    0x3e0 : MetabolismAbsorbSpeed                             : float;
    0x3e4 : FoodPoisoningMaxValue                             : float;
    0x3e8 : FoodPoisoningThreshold                            : float;
    0x3ec : FoodPoisoningMinHealthEffectSpeed                 : float;
    0x3f0 : FoodPoisoningMaxHealthEffectSpeed                 : float;
    0x3f4 : FoodPoisoningMaxStatPenalty                       : float;
    0x3f8 : AlcoholMoodThreshold                              : float;
    0x3fc : AlcoholDrunkThreshold                             : float;
    0x400 : AlcoholDrunkThresholdNPC                          : float;
    0x404 : AlcoholMaxSTREffect                               : float;
    0x408 : AlcoholMaxAGIEffect                               : float;
    0x40c : AlcoholMaxVITEffect                               : float;
    0x410 : AlcoholMaxSPCEffect                               : float;
    0x414 : AlcoholMaxCHAEffect                               : float;
    0x418 : AlcoholMaxCONEffect                               : float;
    0x41c : AlcoholMoodMaxExhaustPossitiveEffect              : float;
    0x420 : AlcoholDrunkMaxExhaustNegativeEffect              : float;
    0x424 : AlcoholBlackoutDuration                           : float;
    0x428 : AlcoholBaseHangoverDuration                       : float;
    0x42c : AlcoholHangoverOffsetModif                        : float;
    0x430 : AlcoholMaxHPAfterHangover                         : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x434 : AlcoholHangoverHeadInjuryVisual                   : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x438 : AlcoholMaxDrinkingSkillHangoverDurationModifier   : float;
    0x43c : AlcoholDigestSpeedModfifOnEmptyStomache           : float;
    0x440 : AlcoholDigestSpeedModfifOnFullStomache            : float;
    0x444 : AlcoholContentFPAntidoteThreshold                 : float;
    0x448 : AlcoholMoodToDrunkUIFill                          : float;
    0x44c : AlcoholismLevel1                                  : float;
    0x450 : AlcoholismLevel2                                  : float;
    0x454 : AlcoholismLevel3                                  : float;
    0x458 : AlcoholismLevel4                                  : float;
    0x45c : AlcoholismLevel5                                  : float;
    0x460 : AlcoholismLevel6                                  : float;
    0x464 : AlcoholismRemoveSpeed                             : float;
    0x468 : AlcoholismCravingLevel1                           : float;
    0x46c : AlcoholismCravingLevel6                           : float;
    0x470 : AlcoholUnconsciousRandomItemChance                : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x474 : AlcoholUnconsciousRandomItemIsGoodChance          : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x478 : AlcoholUnconsciousAddedDirt                       : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x47c : AlcoholPerkBacchusHangoverEffectMod               : float;
    0x480 : AlcoholPerkCorrectResistanceModif                 : float;
    0x484 : AlcoholPerkWrongResistanceModif                   : float;
    0x488 : AlcoholPerkLooseTongueSpcCha                      : float;
    0x48c : EventViewRadiusWeightVariantVsPlace               : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x490 : EventConcealWeightRadiusVsVisibility              : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x494 : FTRadiusWeightViewRadiusVsSurvival                : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x498 : EventEvadeWeightVisibility                        : float;
    0x49c : EventEvadeWeightSurvival                          : float;
    0x4a0 : EventEvadeWeightDetectionResult                   : float;
    0x4a4 : EventAmbushWeightVisibility                       : float;
    0x4a8 : EventAmbushWeightStealth                          : float;
    0x4ac : EventAmbushWeightDetectionResult                  : float;
    0x4b0 : EventFleeWeightVitality                           : float;
    0x4b4 : EventFleeWeightDetectionResult                    : float;
    0x4b8 : MaxStabBuffApplyChance                            : float;
    0x4bc : MaxSlashBuffApplyChance                           : float;
    0x4c0 : MaxSmashBuffApplyChance                           : float;
    0x4c4 : MinWeaponBuffCharge                               : float;
    0x4c8 : MaxWeaponBuffCharge                               : float;
    0x4cc : MinRelativeStaminaMax                             : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x4d0 : VigourFull                                        : float;
    0x4d4 : ExhaustionSpeed                                   : float;
    0x4d8 : FoodHealSpeed                                     : float;
    0x4dc : StarvationHealthLossSpeed                         : float;
    0x4e0 : StarvationThreshold                               : float;
    0x4e4 : StarvationHugeThreshold                           : float;
    0x4e8 : StarvationExtremeThreshold                        : float;
    0x4ec : BaseInventoryCapacity                             : float;
    0x4f0 : MaxBaseInventoryCapacity                          : float;
    0x4f4 : StrengthToInventoryCapacity                       : float;
    0x4f8 : InjuryLowThreshold                                : float;
    0x4fc : InjuryHighThreshold                               : float;
    0x500 : InjuryRegenInterval                               : float;
    0x504 : InjuryBleedingInterval                            : float;
    0x508 : DefaultStateDeltaSpeed                            : float;
    0x50c : SleepHealthRegenBaseSpeed                         : float;
    0x510 : StarvationPlayerEffectMinMin                      : float;
    0x514 : StarvationPlayerEffectMaxMin                      : float;
    0x518 : StarvationPlayerEffectMinMax                      : float;
    0x51c : StarvationPlayerEffectMaxMax                      : float;
    0x520 : ExhaustedThreshold                                : float;
    0x524 : ExhaustedPlayerEffectMinMin                       : float;
    0x528 : ExhaustedPlayerEffectMaxMin                       : float;
    0x52c : ExhaustedPlayerEffectMinMax                       : float;
    0x530 : ExhaustedPlayerEffectMaxMax                       : float;
    0x534 : ExtremeExhaustionFaintAveragePeriod               : float;
    0x538 : ExtremeExhaustionFaintDuration                    : float;
    0x53c : MinHealthToBeAbleToSleepOrSkiptime                : float;
    0x540 : MinPossibleSleepTime                              : float;
    0x544 : OversleepnessFillTime                             : float;
    0x548 : OversleepnessEmptyTime                            : float;
    0x54c : InactiveTimeToDestroyOversleep                    : float;
    0x550 : OverreadnessFillTime                              : float;
    0x554 : OverreadnessEmptyTime                             : float;
    0x558 : ReadingXpPerHour                                  : float;
    0x55c : ReadingSpeechXPBase                               : float;
    0x560 : ReadingSpeechXPScholarshipMultiplier              : float;
    0x564 : SleepToSaveThreshold                              : float;
    0x568 : SleepToAfterBuff                                  : float;
    0x56c : AvidReaderReadingSpeed                            : float;
    0x570 : ImprovedSleepMultiplier                           : float;
    0x574 : DefaultReadingQuality                             : float;
    0x578 : SkipTimeCacheValidityThreshold                    : float;
    0x57c : SkipTimeCacheSize                                 : unsigned int;
    0x580 : NonSkillBookXP                                    : struct fixed_t<unsigned int,25>;
    0x584 : SmellBuffDirtinessLevel                           : float;
    0x588 : SpeechMulOnExtremeExhaustion                      : float;
    0x58c : CharismaMulOnExtremeExhaustion                    : float;
    0x590 : StrengthMulOnExtremeExhaustion                    : float;
    0x594 : AgilityMulOnExtremeExhaustion                     : float;
    0x598 : SharpeningMinEfficiencyHealth                     : float;
    0x59c : SharpeningSuccessfulConditionDelta                : float;
    0x5a0 : SharpeningMinIdealAngle                           : float;
    0x5a4 : SharpeningMaxIdealAngle                           : float;
    0x5a8 : SharpeningMinDestructionAngle                     : float;
    0x5ac : SharpeningMaxDestructionAngle                     : float;
    0x5b0 : SharpeningWeaponBouncingMaxOffset                 : float;
    0x5b4 : SharpeningZoneConditionForPerkEffects             : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x5b8 : SharpeningFullPositiveHealthXP                    : struct fixed_t<unsigned int,25>;
    0x5bc : SharpeningFullNegativeHealthXP                    : struct fixed_t<unsigned int,25>;
    0x5c0 : MinPedalCost                                      : float;
    0x5c4 : MaxPedalCost                                      : float;
    0x5c8 : HourglassTimeout                                  : float;
    0x5cc : PicklockDmgSpeed                                  : float;
    0x5d0 : LockPickingToleranceBaseCoef                      : float;
    0x5d4 : LockPickingToleranceDifficultyCoef                : float;
    0x5d8 : LockPickingToleranceSkillCoef                     : float;
    0x5dc : LockPickingToleranceSkillExpCoef                  : float;
    0x5e0 : LockPickingAppropriateTolerance                   : float;
    0x5e4 : LockPickingAdequateTolerance                      : float;
    0x5e8 : ControllerLockPickingToleranceBaseCoef            : float;
    0x5ec : ControllerLockPickingToleranceDifficultyCoef      : float;
    0x5f0 : ControllerLockPickingToleranceSkillCoef           : float;
    0x5f4 : ControllerLockPickingToleranceSkillExpCoef        : float;
    0x5f8 : ControllerLockPickingAppropriateTolerance         : float;
    0x5fc : LockPickingCursorShakeSpeed                       : float;
    0x600 : LockPickingCursorShakeRangeMin                    : float;
    0x604 : LockPickingCursorShakeRangeMax                    : float;
    0x608 : LockPickingSkillToShakeRel                        : float;
    0x60c : LockPickingSuccessXPMulCoef                       : struct fixed_t<unsigned int,25>;
    0x610 : LockPickingSuccessXPDivCoef                       : struct fixed_t<unsigned int,25>;
    0x614 : LockPickingStealthXP                              : struct fixed_t<unsigned int,25>;
    0x618 : LockPickingAgilityXP                              : struct fixed_t<unsigned int,25>;
    0x61c : LockPickingTurnBackMulCoef                        : float;
    0x620 : LockPickingTurnBackDivCoef                        : float;
    0x624 : LockpickingSoundIntensityMin                      : float;
    0x628 : LockpickingRelDistanceToSoundIntensity            : float;
    0x62c : LockpickingFailSoundIntensity                     : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x630 : LockpickingLockpickBreakChance                    : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x634 : LockPickingFailRelativeXPMulCoef                  : struct fixed_t<unsigned int,25>;
    0x638 : HerbGatherSkillToCount                            : float;
    0x63c : HerbGatherSkillToRadius                           : float;
    0x640 : HerbGatherSkillToRadiusAdd                        : float;
    0x644 : HerbGatherXP                                      : struct fixed_t<unsigned int,25>;
    0x648 : HunterLootAmountAddCoef                           : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x64c : HunterXPKill                                      : struct fixed_t<unsigned int,25>;
    0x650 : HunterXPLoot                                      : struct fixed_t<unsigned int,25>;
    0x654 : ButcheringMaxDistance                             : float;
    0x658 : MinAnimalWeightToWithstandGunshot                 : float;
    0x65c : AlchemyXPPerFailedBrewing                         : struct fixed_t<unsigned int,25>;
    0x660 : AlchemyXPMultiplierSecondQualityPotion            : float;
    0x664 : AlchemyXPMultiplierThirdQualityPotion             : float;
    0x668 : AlchemyToleranceBase                              : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x66c : AlchemyToleranceMaxLevel                          : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x670 : AlchemyRecipeStepsTolerance                       : unsigned int;
    0x674 : AlchemyTrialEndErrorPerkTolerance                 : unsigned int;
    0x678 : AlchemyPotionBaseQualityWeight                    : float;
    0x67c : AlchemyResourcesQualityWeight                     : float;
    0x680 : AlchemyResultCoefToFirstQuality                   : float;
    0x684 : AlchemyResultCoefToSecondQuality                  : float;
    0x688 : AlchemyDryHerbQuality                             : float;
    0x68c : AlchemyFreshHerbQuality                           : float;
    0x690 : AlchemyDecayedHerbQuality                         : float;
    0x694 : BundleAlchemistPerkAdd                            : unsigned int;
    0x698 : HerbsInInventoryForFlowerPowerPerk                : unsigned int;
    0x69c : HerbsInHorseInventoryForHorsenipPerk              : unsigned int;
    0x6a0 : EquippedWeightSubWithWellWornPerk                 : float;
    0x6a4 : MaxCloudAverageForShiningArmor                    : float;
    0x6a8 : MaxPerkPoints                                     : unsigned int;
    0x6ac : MinPerkPoints                                     : unsigned int;
    0x6b0 : MinLevelForPerkPoints                             : unsigned int;
    0x6b4 : MinLeftoverPerks                                  : unsigned int;
    0x6b8 : AutolearnCombatTechniqueReliability               : float;
    0x6bc : BlacksmithingMinIntensity                         : float;
    0x6c0 : BlacksmithingMaxIntensity                         : float;
    0x6c4 : BlacksmithingMinTemperature                       : float;
    0x6c8 : BlacksmithingMaxTemperature                       : float;
    0x6cc : BlacksmithingMinEffectivityToQualityLoss          : float;
    0x6d0 : BlacksmithingMaxEffectivityToQualityLoss          : float;
    0x6d4 : BlacksmithingMaxQualityLossFactor                 : float;
    0x6d8 : BlacksmithingMaxCompletionGainFactor              : float;
    0x6dc : BlacksmithingIntensityToStamina                   : float;
    0x6e0 : BlacksmithingEffectivityToXP                      : struct fixed_t<unsigned int,25>;
    0x6e4 : BlacksmithingStrokeGain                           : float;
    0x6e8 : BlacksmithingStrokeLoss                           : float;
    0x6ec : BlacksmithingRhythmicBonus                        : float;
    0x6f0 : BlacksmithingMinimalCover                         : float;
    0x6f4 : BlacksmithingAlmostCriticalQualityOffset          : float;
    0x6f8 : BlacksmithingOverheatQualityLossCoef              : float;
    0x6fc : BlacksmithingFinishingXP                          : struct fixed_t<unsigned int,25>;
    0x700 : BlacksmithingStamRegenMin                         : float;
    0x704 : BlacksmithingStamRegenMax                         : float;
    0x708 : BlacksmithingMinCondition                         : float;
    0x70c : BlacksmithingMaxCondition                         : float;
    0x710 : DiceGameTypeScoreBeggar                           : unsigned int;
    0x714 : DiceGameTypeScoreWagoner                          : unsigned int;
    0x718 : DiceGameTypeScoreCraftsman                        : unsigned int;
    0x71c : DiceGameTypeScoreCourtier                         : unsigned int;
    0x720 : DiceGameTypeScorePeasant                          : unsigned int;
    0x724 : DiceGameTypeScoreMiner                            : unsigned int;
    0x728 : DiceGameTypeScoreNovice                           : unsigned int;
    0x72c : DiceGameTypeScoreSoldier                          : unsigned int;
    0x730 : DiceGameTypeScorePriest                           : unsigned int;
    0x734 : DiceGameTypeScoreKnight                           : unsigned int;
    0x738 : DiceGameTypeScoreCardinal                         : unsigned int;
    0x73c : DiceGameTypeScoreLord                             : unsigned int;
    0x740 : DiceGameTypeScoreKing                             : unsigned int;
    0x744 : DiceGameTypeScoreEmperor                          : unsigned int;
    0x748 : DiceAntibustHighThreshold                         : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x74c : DiceDoubleTakeMultiplier                          : float;
    0x750 : DiceMultiplyingHighThreshold                      : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x754 : DiceAvailableCountWeight                          : float;
    0x758 : DiceBadgeUseThreshold                             : float;
    0x75c : DiceSetDiceAbsoluteThreshold                      : unsigned int;
    0x760 : HoleDiggingDirtiness                              : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x764 : AimPainlessDelay                                  : float;
    0x768 : BowAimStamCost                                    : float;
    0x76c : CrossbowAimStamCost                               : float;
    0x770 : RifleAimStamCost                                  : float;
    0x774 : AimSpreadMinRatio                                 : float;
    0x778 : AimSpreadMax                                      : float;
    0x77c : AimSpreadSkillDecrease                            : float;
    0x780 : ForcedFireAimSpreadMalus                          : float;
    0x784 : AimZoomBase                                       : float;
    0x788 : AimZoomBaseSkill                                  : float;
    0x78c : AimZoomMax                                        : float;
    0x790 : AimSkillToZoom                                    : float;
    0x794 : AimCiriticalLimitTime                             : float;
    0x798 : BowChargeDurationMin                              : float;
    0x79c : BowChargeDurationMax                              : float;
    0x7a0 : BowPowerToChargeDuration                          : float;
    0x7a4 : RangedWpnMinPowerCoef                             : float;
    0x7a8 : RangedWpnMinStrCoef                               : float;
    0x7ac : RangedWpnPowerConstA                              : float;
    0x7b0 : RangedWpnPwrToSpeed                               : float;
    0x7b4 : RangedWpnPwrToEnergy                              : float;
    0x7b8 : RangedWpnSpeedToAttack                            : float;
    0x7bc : RangedWpnCosThetaToAttackMin                      : float;
    0x7c0 : RangedWpnSelfHarmCoef                             : float;
    0x7c4 : RangedWpnOptimalDistanceToMinamal                 : float;
    0x7c8 : RangedWpnLimbResistanceEffect                     : float;
    0x7cc : RangedWpnWeightNormalization                      : float;
    0x7d0 : RangedWpnRadiusForMoraleHit                       : float;
    0x7d4 : SkillToRangedWpnAIRange                           : float;
    0x7d8 : ProjectileMaxBreakProb                            : float;
    0x7dc : MatPierceableMin                                  : float;
    0x7e0 : MatPierceableMaxArmor                             : float;
    0x7e4 : MatPierceableReduction                            : float;
    0x7e8 : PerceptionMinFov                                  : float;
    0x7ec : PerceptionMaxFov                                  : float;
    0x7f0 : HearingToFov                                      : float;
    0x7f4 : MinViewRadius                                     : float;
    0x7f8 : MaxViewRadius                                     : float;
    0x7fc : MinViewRadiusTimeOfDayCoef                        : float;
    0x800 : MinViewRadiusFogCoef                              : float;
    0x804 : BlindViewRadiusFakeRelative                       : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x808 : VisionToViewRadius                                : float;
    0x80c : MinModVisibility                                  : float;
    0x810 : MaxModVisibility                                  : float;
    0x814 : MinModConspicuousness                             : float;
    0x818 : MaxModConspicuousness                             : float;
    0x81c : RecognitionTimePCoef                              : float;
    0x820 : RecognitionTimeKPositiveCoef                      : float;
    0x824 : RecognitionTimeKNegativeCoef                      : float;
    0x828 : RecognitionTimeDistanceGain                       : float;
    0x82c : RecognitionSpeedNotVisible                        : float;
    0x830 : PerceptionSecondaryCrowdMembers                   : unsigned int;
    0x834 : PerceptionSecondaryCrowdRadius                    : float;
    0x838 : PerceptionSecondaryDecayTime                      : float;
    0x83c : NonPlayerRecognitionTimeMod                       : float;
    0x840 : CombatHitUnconsciousDepth                         : float;
    0x844 : CombatHitImmortalUnconsciousDepth                 : float;
    0x848 : StealthAttackFailXp                               : struct fixed_t<unsigned int,25>;
    0x84c : StealthAttackMinXp                                : struct fixed_t<unsigned int,25>;
    0x850 : StealthAttackMaxXp                                : struct fixed_t<unsigned int,25>;
    0x854 : StealthKnockOutUnconsciousDepthBase               : float;
    0x858 : StealthToUnconsciousDepth                         : float;
    0x85c : UnconsciousDepthFadeoutSpeedBase                  : float;
    0x860 : VitalityToUnconsciousDepthFadeoutSpeed            : float;
    0x864 : UnconsciousTimeWhenTimeIsNotRunning               : float;
    0x868 : StealthSkillToFootstepSoundMult                   : float;
    0x86c : FootstepSoundMultHeadroomFactor                   : float;
    0x870 : StealthSkillToRecogTime                           : float;
    0x874 : StealthSkillToViewRadiusDecr                      : float;
    0x878 : StealthSneakCheckRadius                           : float;
    0x87c : StealthSneakBaseXp                                : struct fixed_t<unsigned int,25>;
    0x880 : StealthSneakBaseDistance                          : float;
    0x884 : StealthSneakXpSumCoefA                            : struct fixed_t<unsigned int,25>;
    0x888 : StealthSneakXpSumCoefB                            : struct fixed_t<unsigned int,25>;
    0x88c : StatXpAgilityForStealth                           : struct fixed_t<unsigned int,25>;
    0x890 : StealthKillDamage                                 : float;
    0x894 : StealthKillProbCoefA                              : float;
    0x898 : StealthKillProbCoefB                              : float;
    0x89c : StealthKillProbCoefC                              : float;
    0x8a0 : StealthKillMinSlot                                : float;
    0x8a4 : StealthKillMaxSlot                                : float;
    0x8a8 : StealthBackoffMinTime                             : float;
    0x8ac : StealthBackoffMaxTime                             : float;
    0x8b0 : StealthCooldown                                   : float;
    0x8b4 : MinStealthHitSoundMultiplier                      : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x8b8 : MaxStealthHitSoundMultiplier                      : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0x8bc : TrueRelationDistThresholdRel                      : float;
    0x8c0 : MinTrueRelationDistThreshold                      : float;
    0x8c4 : PerceivedSuperfactionImportanceThresholdRel       : float;
    0x8c8 : PerceivedSocialClassImportanceThresholdRel        : float;
    0x8cc : MaxWeatherSoundAttenuationCoef                    : float;
    0x8d0 : MaxHearingSoundAttenuationCoef                    : float;
    0x8d4 : HuntingAlarmSoundSkillToSmellRatio                : float;
    0x8d8 : HuntingAlarmSoundMinimalMultiplier                : float;
    0x8dc : HuntingAlarmSoundMaximalMultiplier                : float;
    0x8e0 : PerceptionPriorVisPeople                          : float;
    0x8e4 : PerceptionPriorVisItems                           : float;
    0x8e8 : PerceptionPriorVisCrimes                          : float;
    0x8ec : PerceptionPriorDist                               : float;
    0x8f0 : PerceptionMeanDist                                : float;
    0x8f4 : PerceptionPriorConsp                              : float;
    0x8f8 : PerceptionPriorFriendRelationship                 : float;
    0x8fc : PerceptionPriorEnemyRelationship                  : float;
    0x900 : PerceptionPriorEnemyRelationshipBonus             : float;
    0x904 : PerceptionPriorCha                                : float;
    0x908 : PerceptionBaseCha                                 : float;
    0x90c : PerceptionPriorGender                             : float;
    0x910 : PerceptionPriorNotHumanRace                       : float;
    0x914 : PerceptionPriorWeapon                             : float;
    0x918 : PerceptionPriorDead                               : float;
    0x91c : PerceptionPriorBoostRangedWeapon                  : float;
    0x920 : PerceptionPriorCrimeLoot                          : float;
    0x924 : PerceptionPriorCrimeLockpick                      : float;
    0x928 : PerceptionPriorCrimeCarryCorpse                   : float;
    0x92c : PerceptionPriorBoostPlayer                        : float;
    0x930 : PerceptionPriorBoostScriptContext                 : float;
    0x934 : PerceptionInnerConeMinRelSize                     : float;
    0x938 : PerceptionInnerConeMaxRelSize                     : float;
    0x93c : PerceptionInnerConeNervousnessLimit               : float;
    0x940 : VisibilityDecrementDaytimeInterior                : float;
    0x944 : VisibilityDecrementNighttimeInterior              : float;
    0x948 : VisibilityDecrementNighttimeExterior              : float;
    0x94c : VisibilityDecrementInFog                          : float;
    0x950 : VisibilityDecrementInVisArea                      : float;
    0x954 : DistractVerticalViewLimit                         : float;
    0x958 : InformationVersionRefresh                         : float;
    0x95c : InformationExpirationBase                         : float;
    0x960 : InformationBroadcastPeriod                        : float;
    0x964 : InformationBroadcastIgnoreRadius                  : float;
    0x968 : InformationBroadcastDelay                         : float;
    0x96c : AthleticXPAwardDistance                           : float;
    0x970 : HorseRidingAwardDistance                          : float;
    0x974 : CarriedBodyWeightCoef                             : float;
    0x978 : CarriedCarriedWeightCoef                          : float;
    0x97c : CarriedBodyMaxStamConsumption                     : float;
    0x980 : MinEncumberanceXPAwardDistance                    : float;
    0x984 : MaxEncumberanceXPAwardDistance                    : float;
    0x988 : ShoeHealthUpdateDistance                          : float;
    0x98c : ShoeHealthDecrease                                : float;
    0x990 : HorseEquipHealthUpdateDistance                    : float;
    0x994 : HorseEquipHealthDecrease                          : float;
    0x998 : QuestMoneyRewardScaleConstant                     : float;
    0x99c : ItemHealthPriceStatusWeight                       : float;
    0x9a0 : WorthlessItemPrice                                : float;
    0x9a4 : TreasureItemPrice                                 : float;
    0x9a8 : BaseItemDisappearingTime                          : float;
    0x9ac : ItemDisappearingMulti                             : float;
    0x9b0 : MaxItemDisappearingTime                           : float;
    0x9b4 : DefaultVisVolume                                  : float;
    0x9b8 : BestVisVolume                                     : float;
    0x9bc : StealVisVolumeConspicuousnessMin                  : float;
    0x9c0 : StealVisVolumeConspicuousnessMax                  : float;
    0x9c4 : StealVisVolumeVisibilityMin                       : float;
    0x9c8 : StealVisVolumeVisibilityMax                       : float;
    0x9cc : StealVisVolumeWorthlessItemTime                   : float;
    0x9d0 : StealVisVolumeTreasureItemTime                    : float;
    0x9d4 : PerceivedStateRecognitionDistanceMin              : float;
    0x9d8 : PerceivedStateRecognitionDistanceMax              : float;
    0x9dc : PerceivedStateThreatDistance                      : float;
    0x9e0 : RestockRepairPerDay                               : float;
    0x9e4 : RestockPeriodSoul                                 : unsigned int;
    0x9e8 : ItemOwnerFadePriceToHours                         : float;
    0x9ec : ItemOwnerFadeConspicuousnessToHours               : float;
    0x9f0 : ItemOwnerNeverFadesToSuspiciency                  : float;
    0x9f4 : ItemOwnerFadeCoefToSuspiciencyMul                 : float;
    0x9f8 : ItemOwnerFadeCoefToSuspiciencyExp                 : float;
    0x9fc : ItemOwnerDescFadeToSuspiciencyExp                 : float;
    0xa00 : ItemOwnerFactionDistanceInnerRadius               : float;
    0xa04 : ItemOwnerFactionDistanceOuterRadius               : float;
    0xa08 : ItemOwnerFactionDistanceToSuspiciencyMin          : float;
    0xa0c : ItemOwnerFactionDistanceToSuspiciencyMax          : float;
    0xa10 : ItemOwnerRelationshipToSuspiciencyMin             : float;
    0xa14 : ItemOwnerIsShopkeeperToSuspiciency                : float;
    0xa18 : ItemOwnerSpatialFadeThreshold                     : float;
    0xa1c : BarterDominanceSpcWeightA                         : float;
    0xa20 : BarterDominanceRelationshipWeightB                : float;
    0xa24 : BarterDominanceChaWeightC                         : float;
    0xa28 : BarterDominanceSpcWeightD                         : float;
    0xa2c : BarterDominanceChaBaseE                           : float;
    0xa30 : BarterCoefWeightA                                 : float;
    0xa34 : BarterCoefWeightB                                 : float;
    0xa38 : BarterAngrinessCoefWeightA                        : float;
    0xa3c : BarterAngrinessCoefWeightB                        : float;
    0xa40 : ShopLargeTransaction                              : float;
    0xa44 : BarterPriceSellRepCoef                            : float;
    0xa48 : BarterPriceSellRepMultip                          : float;
    0xa4c : BarterPriceSellRepBuying                          : float;
    0xa50 : RepairShopSkillPriceMultiplier                    : float;
    0xa54 : RepairPriceModif                                  : float;
    0xa58 : RepairShopMinSkillForQuality2                     : float;
    0xa5c : RepairShopMinSkillForQuality3                     : float;
    0xa60 : RepairShopMinSkillForQuality4                     : float;
    0xa64 : RepairKitMinSkillForQuality2                      : float;
    0xa68 : RepairKitMinSkillForQuality3                      : float;
    0xa6c : RepairKitMinSkillForQuality4                      : float;
    0xa70 : RepairKitMaxSkillCapacityCoef                     : float;
    0xa74 : RepairKitCapacity                                 : float;
    0xa78 : RepairKitItemPerkBuffHealthThreshold              : float;
    0xa7c : RazorSharpBuffHealthThreshold                     : float;
    0xa80 : WashSoapCostMod                                   : float;
    0xa84 : WashSoapCostSkillCoef                             : float;
    0xa88 : WashDirtLimitMin                                  : float;
    0xa8c : WashDirtLimitMax                                  : float;
    0xa90 : WashItemsCraftsmanshipXpReward                    : struct fixed_t<unsigned int,25>;
    0xa94 : AddedDirtOnCarryItem                              : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xa98 : WashItemDirtPriceStatusWeight                     : float;
    0xa9c : BasketSuspiciencyHaggleThreshold                  : float;
    0xaa0 : BasketSuspiciencyNoDealThreshold                  : float;
    0xaa4 : ItemHealthOverlapCoef                             : float;
    0xaa8 : ItemQualityDecreaseProbabilityThreshold           : float;
    0xaac : ItemQualityDecreaseProbabilityCoef                : float;
    0xab0 : ItemDestroyProbabilityThreshold                   : float;
    0xab4 : ItemDestroyProbabilityCoef                        : float;
    0xab8 : RifleDestroyDamage                                : float;
    0xabc : ItemHealthAlmostBrokenThreshold                   : float;
    0xac0 : ItemHealthDamagedThreshold                        : float;
    0xac4 : ItemHealthDamagedBuffThreshold                    : float;
    0xac8 : MaximalItemQualityForDamage                       : unsigned int;
    0xacc : ArmorConditionThresholdForDamage                  : float;
    0xad0 : WeaponConditionThresholdForDamage                 : float;
    0xad4 : StashRobbedValueDecayRate                         : float;
    0xad8 : StashRobbedValueBottomThreshold                   : float;
    0xadc : NPCRobbedValueDecayRate                           : float;
    0xae0 : NPCRobbedValueBottomThreshold                     : float;
    0xae4 : AngrinessArmingThreshold                          : float;
    0xae8 : ConfiscateItemsInRadius                           : float;
    0xaec : InvestigatingNPCRadius                            : float;
    0xaf0 : CombatActiveNPCRadius                             : float;
    0xaf4 : FriskProbabilityMod                               : float;
    0xaf8 : ReputationPropagationCoefCap                      : float;
    0xafc : FrozenRenownValue                                 : float;
    0xb00 : NPCRepWeight                                      : float;
    0xb04 : FactionRepWeight                                  : float;
    0xb08 : SuperFactionRepWeight                             : float;
    0xb0c : FactionAngrinessMinimum                           : float;
    0xb10 : FactionAngrinessMaximum                           : float;
    0xb14 : FactionAngrinessDecayRate                         : float;
    0xb18 : FactionAngrinessPropagationCoef                   : float;
    0xb1c : FactionAngrinessPropagationScale                  : float;
    0xb20 : FactionAngrinessPropagationCutoff                 : float;
    0xb24 : FactionAngrinessDelay                             : float;
    0xb28 : NervousnessMinimum                                : float;
    0xb2c : NervousnessMaximum                                : float;
    0xb30 : AngrinessFromNervousnessCoef                      : float;
    0xb34 : NervousnessDecayRate                              : float;
    0xb38 : NervousnessPropagationCoef                        : float;
    0xb3c : NervousnessPropagationRadius                      : float;
    0xb40 : NervousnessCourageousWeight                       : float;
    0xb44 : ReputationPropagationTime                         : float;
    0xb48 : ReputationPropagationBiasTime                     : float;
    0xb4c : ReputationSpatialPropagationDistance              : float;
    0xb50 : ReputationSpatialPrapagation                      : float;
    0xb54 : GreatReputationIconThreshold                      : float;
    0xb58 : HighReputationIconThreshold                       : float;
    0xb5c : NeutralReputationIconThreshold                    : float;
    0xb60 : LowReputationIconThreshold                        : float;
    0xb64 : IndulgencePriceFactor                             : float;
    0xb68 : IndulgencePriceMin                                : float;
    0xb6c : IndulgencePriceMax                                : float;
    0xb70 : StolenKeyExpirationTime                           : float;
    0xb74 : StolenKeyExpiraitionBlockRadius                   : float;
    0xb78 : StolenKeyLockChangePeriod                         : float;
    0xb7c : MinMorale                                         : float;
    0xb80 : MaxMorale                                         : float;
    0xb84 : SoulCourageMoraleWeight                           : float;
    0xb88 : ClassCourageMoraleWeight                          : float;
    0xb8c : BadassnessMoraleWeight                            : float;
    0xb90 : SkirmishPredominanceWeight                        : float;
    0xb94 : SkirmishCheckThreatLevel                          : float;
    0xb98 : HealthToBadassnessMinCoef                         : float;
    0xb9c : OverallArmorDefenseBadassWeight                   : float;
    0xba0 : OverallWeaponAttackBadassWeight                   : float;
    0xba4 : OverallStatsBaddassWeight                         : float;
    0xba8 : StrengthBaddassWeight                             : float;
    0xbac : AgilityBaddassWeight                              : float;
    0xbb0 : RiderBaddassWeight                                : float;
    0xbb4 : MoraleContextFadingSpeed                          : float;
    0xbb8 : MoraleDecisionReliability                         : float;
    0xbbc : MoraleLinearShiftBase                             : float;
    0xbc0 : MoraleLinearShiftFactor                           : float;
    0xbc4 : MaxCourageMoraleContextFadingMod                  : float;
    0xbc8 : MoraleForCombat                                   : float;
    0xbcc : CombatAutoSyncRiposteWeight                       : float;
    0xbd0 : CombatNoBlockProb0                                : float;
    0xbd4 : CombatNoBlockProb1                                : float;
    0xbd8 : CombatNormalBlockProb0                            : float;
    0xbdc : CombatNormalBlockProb1                            : float;
    0xbe0 : CombatPerfectBlockProb0                           : float;
    0xbe4 : CombatPerfectBlockProb1                           : float;
    0xbe8 : CombatPerfectBlockPowTo                           : float;
    0xbec : CombatPerfectBlockNPCvsNPCCoef                    : float;
    0xbf0 : CombatPerfectBlockZoneDistanceCoef                : float;
    0xbf4 : CombatPerfectBlockOnRiposteCoef                   : float;
    0xbf8 : CombatSyncPerfectBlockProb0                       : float;
    0xbfc : CombatSyncPerfectBlockProb1                       : float;
    0xc00 : CombatMasterStrikeProb0                           : float;
    0xc04 : CombatMasterStrikeProb1                           : float;
    0xc08 : CombatMasterStrikePowTo                           : float;
    0xc0c : CombatDodgeProb0                                  : float;
    0xc10 : CombatDodgeProb1                                  : float;
    0xc14 : CombatDodgeProbCoef                               : float;
    0xc18 : CombatAutoReactionDelayRangeSpread                : float;
    0xc1c : CombatAutoTrickReactionStaWeight                  : float;
    0xc20 : CombatAutoTrickReactionSkillWeight                : float;
    0xc24 : CombatAutoTrickReactionMinDelay                   : float;
    0xc28 : CombatAutoTrickReactionMaxDelay                   : float;
    0xc2c : CombatAutoAggressionDiffScale                     : float;
    0xc30 : ComboNextStepProbBlocked                          : float;
    0xc34 : ComboNextStepProbHit                              : float;
    0xc38 : ComboNoActionNeutralProb                          : float;
    0xc3c : ComboMinProb                                      : float;
    0xc40 : ComboMinSteps                                     : float;
    0xc44 : ComboPerComboProb                                 : float;
    0xc48 : ComboStepPerFen                                   : float;
    0xc4c : ComboStepSyncActionMod                            : float;
    0xc50 : ComboHitCancelProb                                : float;
    0xc54 : CombatAutoMaxAttackDelay                          : float;
    0xc58 : CombatAutoNPCOpponentAtkDelayCoef                 : float;
    0xc5c : CombatAutoAttackDelayIncreasePerAttacker          : float;
    0xc60 : CombatAutoAttackDelayIncreasePerAttackerHorse     : float;
    0xc64 : CombatAutoAttackDelayIncreasePerAttackerMissile   : float;
    0xc68 : CombatAutoScaleDefensivenessDelayRel              : float;
    0xc6c : CombatAutoAttackDelaySigma                        : float;
    0xc70 : CombatAutoTrickNoAttackProb                       : float;
    0xc74 : CombatAutoTrickAttackProb                         : float;
    0xc78 : CombatAutoTrickMaxProb                            : float;
    0xc7c : CombatAutoTrickInvalidBlockAttackMaxProb          : float;
    0xc80 : CombatAutoTrickMinMaxDelay                        : float;
    0xc84 : CombatAutoTrickDelayVariability                   : float;
    0xc88 : CombatAutoEasyZoneWeight                          : float;
    0xc8c : CombatAutoMinDefenseModeWeight                    : float;
    0xc90 : CombatAutoZoneChangeDelayMinMin                   : float;
    0xc94 : CombatAutoZoneChangeDelayMinMax                   : float;
    0xc98 : CombatAutoZoneChangeDelayMaxMin                   : float;
    0xc9c : CombatAutoZoneChangeDelayMaxMax                   : float;
    0xca0 : CombatAutoOppZoneAdaptDelayMinMin                 : float;
    0xca4 : CombatAutoOppZoneAdaptDelayMinMax                 : float;
    0xca8 : CombatAutoOppZoneAdaptDelayMaxMin                 : float;
    0xcac : CombatAutoOppZoneAdaptDelayMaxMax                 : float;
    0xcb0 : CombatAutoZoneAdaptMinDefense                     : float;
    0xcb4 : CombatAutoZoneAdaptDefenseWeight                  : float;
    0xcb8 : CombatAutoZoneAdaptMSWeight                       : float;
    0xcbc : CombatAutoClinchReactionDelayMinMin               : float;
    0xcc0 : CombatAutoClinchReactionDelayMinMax               : float;
    0xcc4 : CombatAutoClinchReactionDelayMaxMin               : float;
    0xcc8 : CombatAutoClinchReactionDelayMaxMax               : float;
    0xccc : CombatAutoClinchAlternativeMinFencing             : float;
    0xcd0 : CombatAutoClinchAlternativeMaxProbability         : float;
    0xcd4 : CombatAutoMasterGuardOffset                       : float;
    0xcd8 : CombatAutoLameGuardOffset                         : float;
    0xcdc : CombatAutoGuardHysteresis                         : float;
    0xce0 : CombatAutoForcedPeriodicalAttackStaminaLimit      : float;
    0xce4 : CombatAutoForcedComboStaminaLimit                 : float;
    0xce8 : CombatAutoMaxAimDuration                          : float;
    0xcec : CombatAutoMaxAimDurationRandomAdd                 : float;
    0xcf0 : CombatAutoMoveActivityDecreasePerAttacker         : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xcf4 : CombatAutoMinHuntAttackDuration                   : float;
    0xcf8 : CombatAutoMaxHuntAttackDuration                   : float;
    0xcfc : CombatAutoMaxAtkDistOffset                        : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xd00 : CombatAutoMoveProficiencyHPCoef                   : float;
    0xd04 : CombatAutoMoveProficiencySkillCoef                : float;
    0xd08 : CombatMoveApproachSprintMinStamina                : float;
    0xd0c : PickpocketingMinChargeTime                        : float;
    0xd10 : PickpocketingMaxSkillChargeTime                   : float;
    0xd14 : PickpocketingMaxSkillChargeSpeedRatio             : float;
    0xd18 : PickpocketingItemUncoverTimePerWeight             : float;
    0xd1c : PickpocketingXP                                   : struct fixed_t<unsigned int,25>;
    0xd20 : PickpocketingStealthXP                            : struct fixed_t<unsigned int,25>;
    0xd24 : PickpocketingTreasurePriceXP                      : struct fixed_t<unsigned int,25>;
    0xd28 : PickpocketingStartedAgilityXP                     : struct fixed_t<unsigned int,25>;
    0xd2c : PickpocketingFailXPMod                            : float;
    0xd30 : PickpocketingNPCSleepingTimeChanceMod             : float;
    0xd34 : PickpocketingNPCDrunkTimeChanceMod                : float;
    0xd38 : PickpocketingNPCHurtTimeChanceMod                 : float;
    0xd3c : PickpocketingTimeChancePenaltyBest                : float;
    0xd40 : PickpocketingTimeChancePenaltyWorst               : float;
    0xd44 : PickpocketingAngleChancePenalty                   : float;
    0xd48 : PickpocketingRobbedAngrinessChancePenalty         : float;
    0xd4c : PickpocketingComradePerkBonus                     : float;
    0xd50 : PickpocketingIndicatorSharpness                   : float;
    0xd54 : PickpocketingDistance                             : float;
    0xd58 : PickpocketingMisstargetingTolerance               : float;
    0xd5c : PickpocketingRandomChanceRollMinCap               : float;
    0xd60 : PickpocketingRosetteMinSpeed                      : float;
    0xd64 : PickpocketingRosetteMaxSpeed                      : float;
    0xd68 : PickpocketingOneTileUncoveredAtSkill              : float;
    0xd6c : PickpocketingThreeTilesUncoveredAtSkill           : float;
    0xd70 : PickpocketingAllTilesUncoveredAtSkill             : float;
    0xd74 : PickpocketingLooterPerkExtraMoneyRewardMin        : float;
    0xd78 : PickpocketingLooterPerkExtraMoneyRewardMax        : float;
    0xd7c : PerkBalancedDietActivationTime                    : float;
    0xd80 : ThunderstormBuffRainIntensity                     : float;
    0xd84 : PerkBloodRushDuration                             : float;
    0xd88 : PerkUndauntedCavalierCharismaLimit                : float;
    0xd8c : PerkCarriedBodyGravediggerWeightMul               : float;
    0xd90 : LocalHeroInfamousReputationThreshold              : float;
    0xd94 : PerkManlyOdourDirtinessThreshold                  : float;
    0xd98 : PerkBrutusCombatDmgRBonusFromBehind               : float;
    0xd9c : StillBuffDuration                                 : float;
    0xda0 : PerkTauntAttackerMoraleMultiplier                 : float;
    0xda4 : JailRecoveryDebuffMaxHours                        : float;
    0xda8 : JailRecoveryDebuffDurationMultiplier              : float;
    0xdac : HealthFadingFromLimitValue                        : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xdb0 : AdditionalAttackerCountForMaxFadingBuff           : unsigned int;
    0xdb4 : PerkLastGaspLongTermCooldown                      : float;
    0xdb8 : PerkLastGaspShortTermDuration                     : float;
    0xdbc : PerkLastGaspCooldown                              : float;
    0xdc0 : PerkNoRestForTheWickedCooldown                    : float;
    0xdc4 : PerkNoRestForTheWickedStaminaLimit                : float;
    0xdc8 : HorseExhaustedStaminaLimit                        : float;
    0xdcc : PerkRageDuration                                  : float;
    0xdd0 : PerkRageHealthThreshold                           : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xdd4 : PerkChainStrikeMaxChain                           : unsigned int;
    0xdd8 : DefaultLocationMonitorHysteresis                  : float;
    0xddc : StillAndHiddenHysteresis                          : float;
    0xde0 : SteadyAimHysteresis                               : float;
    0xde4 : DuringFaderHysteresis                             : float;
    0xde8 : SleepwalkerPerkChance                             : float;
    0xdec : InteriorCrouchHysteresis                          : float;
    0xdf0 : InteriorDrunkHysteresis                           : float;
    0xdf4 : ExteriorCrouchHysteresis                          : float;
    0xdf8 : CrimeDoorSoundMod                                 : float;
    0xdfc : PerkLuckyFindTriggerChance                        : float;
    0xe00 : BordererSprintBuffChargingDuration                : float;
    0xe04 : BordererSprintBuffCooldownDuration                : float;
    0xe08 : RevenantBuffMaxHealthRegeneration                 : float;
    0xe0c : CreativeSoulExhaustPerSec                         : float;
    0xe10 : IsCleanBuffMaxDirtiness                           : float;
    0xe14 : CleanlinessIsNextToGodlinessWashHeal              : float;
    0xe18 : BlackArtsApprenticeBuffStartTime                  : float;
    0xe1c : BlackArtsApprenticeBuffEndTime                    : float;
    0xe20 : FinestGoodsMinItemHealth                          : float;
    0xe24 : TireEmToTakeEmRequiredTime                        : float;
    0xe28 : NeverSurrenderBuffHealthThreshold                 : float;
    0xe2c : BedQualityModificationCap                         : float;
    0xe30 : PerkVeteranChargeCount                            : unsigned int;
    0xe34 : TheyWillNeverKnowPerkStealthXp                    : struct fixed_t<unsigned int,25>;
    0xe38 : ItsaTrapPerkStealthXp                             : struct fixed_t<unsigned int,25>;
    0xe3c : CraftsmanshipXPOverride                           : struct fixed_t<unsigned int,25>;
    0xe40 : ThieveryXPOverride                                : struct fixed_t<unsigned int,25>;
    0xe44 : SurvivalXPOverride                                : struct fixed_t<unsigned int,25>;
    0xe48 : AlchemyXPOverride                                 : struct fixed_t<unsigned int,25>;
    0xe4c : HoundmasterXPOverride                             : struct fixed_t<unsigned int,25>;
    0xe50 : HorseRidingXPOverride                             : struct fixed_t<unsigned int,25>;
    0xe54 : FullClothDirtyingOnFullSpeed                      : float;
    0xe58 : FullClothDirtyingOnZeroSpeed                      : float;
    0xe5c : ClothesBloodSoakOnMaxBleeding                     : float;
    0xe60 : TransferedBloodToAttackerMin                      : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe64 : TransferedBloodToAttackerMax                      : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe68 : TransferedBloodToVictimMin                        : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe6c : TransferedBloodToVictimMax                        : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe70 : TransferedBloodToAttackerWeaponMin                : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe74 : TransferedBloodToAttackerWeaponMax                : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe78 : TransferedBloodToAttackerSecondaryWeaponMin       : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe7c : TransferedBloodToAttackerSecondaryWeaponMax       : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe80 : ButcheringBloodPerPound                           : float;
    0xe84 : ButcheringBloodOffsetMin                          : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xe88 : FabricCombinedFoleyThreshold                      : float;
    0xe8c : ChainmailCombinedFoleyThreshold                   : float;
    0xe90 : PlateCombinedFoleyThreshold                       : float;
    0xe94 : TrackedAreasNPCRadius                             : float;
    0xe98 : RespawnPeriod                                     : unsigned int;
    0xe9c : RespawnPeriodPublicEnemies                        : unsigned int;
    0xea0 : CorpseDisappearanceTimeUndiscovered               : unsigned int;
    0xea4 : CorpseDisappearanceTimeDiscovered                 : unsigned int;
    0xea8 : NPCSpawnMinDistanceFromPlayer                     : float;
    0xeac : StolenGoodsForcedDiscount                         : float;
    0xeb0 : CombatDistanceFromStartPointForForcedUncertain    : float;
    0xeb4 : HorseWithMinStatsPrice                            : float;
    0xeb8 : HorseWithMaxStatsPrice                            : float;
    0xebc : HorseMinFinalPrice                                : float;
    0xec0 : TimeBasedAchievementTRCompliantProlongation       : float;
    0xec4 : PerfectionistAchievementIncomeLimit               : float;
    0xec8 : CompanionMerchantFeeCoeficient                    : float;
    0xecc : CompanionPriceReputationScale                     : float;
    0xed0 : CompanionLegalizationPriceCoeficient              : float;
    0xed4 : DogMoraleDefaultMin                               : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xed8 : DogMoraleDefaultMax                               : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xedc : DogMoraleBuffFeed                                 : float;
    0xee0 : DogMoraleBuffPlay                                 : float;
    0xee4 : DogMoraleBuffPraise                               : float;
    0xee8 : DogMoraleBuffContextCommand                       : float;
    0xeec : DogMoraleBuffPOIDiscovery                         : float;
    0xef0 : DogMoraleBuffKill                                 : float;
    0xef4 : DogMoraleBuffAnimalKill                           : float;
    0xef8 : DogMoraleBuffFetch                                : float;
    0xefc : DogMoraleBuffDistraction                          : float;
    0xf00 : DogMoraleBuffSigma                                : float;
    0xf04 : DogMoraleFromHitDamage                            : float;
    0xf08 : DogMoraleEventBuffCooldown                        : float;
    0xf0c : DogMoraleDecreaseWithoutInteraction               : float;
    0xf10 : DogMoraleDecreaseWithoutInteractionFasterRelative : float;
    0xf14 : DogMoraleIncreaseSkipTime                         : float;
    0xf18 : DogPOISearchRadiusMin                             : float;
    0xf1c : DogPOISearchRadiusMax                             : float;
    0xf20 : DogTargetSearchRadiusMin                          : float;
    0xf24 : DogTargetSearchRadiusMax                          : float;
    0xf28 : DogDisobeyTimeout                                 : float;
    0xf2c : DogDisobeyMoraleThreshold                         : float;
    0xf30 : DogTargetPriorityBoostEnemy                       : float;
    0xf34 : DogTargetPriorityBoostPrey                        : float;
    0xf38 : DogTargetPriorityBoostCurrent                     : float;
    0xf3c : DogCommandMoraleThreshold                         : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xf40 : RiderDogThreatToHorseMoraleRelative               : float;
    0xf44 : ClinchBackOffDmgRWeight                           : float;
    0xf48 : ClinchBackOffSkillWeight                          : float;
    0xf4c : DogGuardAlarmRadius                               : float;
    0xf50 : DogGuardAttackRadius                              : float;
    0xf54 : DogDistractInitialWaitTime                        : float;
    0xf58 : DogDistractBarkTime                               : float;
    0xf5c : DogDistractFleeRadius                             : float;
    0xf60 : DogDistractFleeDistance                           : float;
    0xf64 : DogFoundEventHoundmasterXp                        : struct fixed_t<unsigned int,25>;
    0xf68 : DogXpAntiExploitTimeout                           : float;
    0xf6c : InfoTextNotificationCooldown                      : float;
    0xf70 : RPGContextInjuredHealthThreshold                  : float;
    0xf74 : RPGContextSkillIntervalVariationRelative          : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > >;
    0xf78 : SoulPoolCombatLevelNormalDistributionSigma        : float;
    0xf7c : SchedulerHealPerSecond                            : float;
    0xf80 : SchedulerSoilPerSecond                            : float;
    0xf84 : SchedulerDrunkednessPerSecond                     : float;
    0xf88 : SimpleDrunkednessFadeSpeed                        : float;
    0xf8c : SurvivalSkillXPPerDiscoveredPOI                   : struct fixed_t<unsigned int,25>;
    0xf90 : MarksmanshipSkillXPShootingTargetHitPerDistance   : struct fixed_t<unsigned int,25>;
    0xf94 : PrimaryStatXPShootingTargetHitPerDistance         : struct fixed_t<unsigned int,25>;
    0xf98 : SecondaryStatXPShootingTargetHitPerDistance       : struct fixed_t<unsigned int,25>;
    0xf9c : XPShootingTargetHitMinDistance                    : float;
    0xfa0 : XPShootingTargetHitDistanceMod                    : float;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_SkillTeacherLesson* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_ClothingPresetGUID {
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::rpgmodule::C_TimeOfDayInterval : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name              : class CryStringT<char>;
    0x18  : RuntimeState      : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports             : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView         : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive          : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : TimeOfDayStart    : class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeOfDay>*;
    0xf8  : TimeOfDayEnd      : class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeOfDay>*;
    0x138 : OnIntervalStarted : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : OnIntervalEnded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a13bb0
enum enum wh::tests::E_TestRttrEnum : int {
    TestRttrEnumA = 0,
    TestRttrEnumB = 1,
    TestRttrEnumC = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HracMuzeZradit : int {
    None               = 0,
    HracMuzeZradit     = 1,
    PromluvitSJimramem = 2,
    ZradaDomluvena     = 3,
    Fail               = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_TimerBox : class wh::xgenaimodule::BehaviorTree::I_Node, class wh::xgenaimodule::BehaviorTree::I_SwitchableNode, class wh::xgenaimodule::BehaviorTree::I_ContinuousSwitchableNode {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasSocialClass* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::combatmodule::C_CombatAnimationStepData,class std::vector> {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsEquipped : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LookingForPassage : int {
    None                 = 0,
    Started              = 1,
    DoneWithObjective    = 2,
    DoneWithoutObjective = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 39cbd48
enum enum wh::playermodule::E_AlchemyPotionBaseType::Type : unsigned char {
    Spiritus = 0,
    Oil      = 1,
    Wine     = 2,
    Water    = 3,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::xgenaimodule::navigation::C_PredefinedPath : class wh::xgenaimodule::C_LinkableObject {
    //Getter: WHGame.dll+0x3377ed0
    get : Position : struct Vec3_tpl<float>;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_StanceAnimData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_Function>* {
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::xgenaimodule::C_AreaLabelEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Areas        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > >*;
    0xd0  : Labels       : class wh::conceptmodule::C_TypedPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >*;
    0x110 : Operation    : class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_AddRemove::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_AnimationCommand* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ExplicitItemPlacedElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b5cd08
enum enum wh::rpgmodule::E_SoulProperty::Type : unsigned int {
    stealth                                      = 0,
    horse_riding                                 = 1,
    fencing                                      = 2,
    bard                                         = 3,
    thievery                                     = 4,
    pickpocketing_obsolete                       = 5,
    alchemy                                      = 6,
    cooking                                      = 7,
    craftsmanship                                = 8,
    smithing_obsolete                            = 9,
    fishing                                      = 10,
    mining                                       = 11,
    first_aid                                    = 12,
    drinking                                     = 13,
    survival                                     = 14,
    defense                                      = 15,
    weapon_sword                                 = 16,
    heavy_weapons                                = 17,
    weapon_bow_obsolete                          = 18,
    marksmanship                                 = 19,
    weapon_shield                                = 20,
    weapon_mace_obsolete                         = 21,
    weapon_dagger                                = 22,
    weapon_large                                 = 23,
    weapon_unarmed                               = 24,
    herbalism_obsolete                           = 25,
    scholarship                                  = 26,
    tailoring                                    = 27,
    armourer                                     = 28,
    weaponsmithing                               = 29,
    shoemaking                                   = 30,
    gunsmithing                                  = 31,
    bowyery                                      = 32,
    gambling                                     = 33,
    houndmaster                                  = 34,
    strength                                     = 35,
    agility                                      = 36,
    vitality                                     = 37,
    speech                                       = 38,
    vision                                       = 39,
    hearing                                      = 40,
    barter                                       = 41,
    courage                                      = 42,
    storyProgress                                = 43,
    shadiness                                    = 44,
    combatLevel                                  = 45,
    initialDirtiness                             = 46,
    DistanceWalked                               = 47,
    DistanceRan                                  = 48,
    DistanceSprinted                             = 49,
    DistanceRidden                               = 50,
    DistanceFastTraveled                         = 51,
    DistanceTraveledWithPlayerOnBack             = 52,
    DeltaDistanceForXPAward                      = 53,
    DeltaDistanceForShoeHealth                   = 54,
    DeltaDistanceForHorseRidingXPAward           = 55,
    DeltaDistanceForClothingDirtying             = 56,
    DeltaDistanceForHorseEquipHealth             = 57,
    DeltaDistanceForEncumberanceXPAward          = 58,
    DeltaClothingDirtAccumulated                 = 59,
    charisma                                     = 60,
    rch                                          = 61,
    cse                                          = 62,
    vib                                          = 63,
    evi                                          = 64,
    con                                          = 65,
    mst                                          = 66,
    mhs                                          = 67,
    hlt                                          = 68,
    sdt                                          = 69,
    fov                                          = 70,
    vir                                          = 71,
    tsr                                          = 72,
    dtf                                          = 73,
    dbf                                          = 74,
    pt1                                          = 75,
    pt5                                          = 76,
    dai                                          = 77,
    bnc                                          = 78,
    hac                                          = 79,
    hde                                          = 80,
    lfu                                          = 81,
    lio                                          = 82,
    cap                                          = 83,
    alo                                          = 84,
    oad                                          = 85,
    owa                                          = 86,
    wud                                          = 87,
    lvl                                          = 88,
    noi                                          = 89,
    fsm                                          = 90,
    nrs                                          = 91,
    rsb                                          = 92,
    rsa                                          = 93,
    ble                                          = 94,
    ibi                                          = 95,
    bow                                          = 96,
    cow                                          = 97,
    aco                                          = 98,
    caw                                          = 99,
    rcw                                          = 100,
    mor                                          = 101,
    dem                                          = 102,
    mcf                                          = 103,
    obe                                          = 104,
    psr                                          = 105,
    xpm                                          = 106,
    osl                                          = 107,
    mos                                          = 108,
    ore                                          = 109,
    caf                                          = 110,
    rdq                                          = 111,
    erq                                          = 112,
    sle                                          = 113,
    coc                                          = 114,
    ufo                                          = 115,
    mut                                          = 116,
    prb                                          = 117,
    fpa                                          = 118,
    apa                                          = 119,
    cag                                          = 120,
    def                                          = 121,
    dru                                          = 122,
    poi                                          = 123,
    pos                                          = 124,
    ran                                          = 125,
    iex                                          = 126,
    hcm                                          = 127,
    was                                          = 128,
    grm                                          = 129,
    brm                                          = 130,
    drt                                          = 131,
    sml                                          = 132,
    smi                                          = 133,
    frg                                          = 134,
    hko                                          = 135,
    enc                                          = 136,
    fdm                                          = 137,
    sma                                          = 138,
    bma                                          = 139,
    hgs                                          = 140,
    pds                                          = 141,
    sha                                          = 142,
    pbm                                          = 143,
    rml                                          = 144,
    hml                                          = 145,
    bso                                          = 146,
    bld                                          = 147,
    bba                                          = 148,
    arr                                          = 149,
    jrm                                          = 150,
    sur                                          = 151,
    imm                                          = 152,
    apr                                          = 153,
    ppr                                          = 154,
    ltp                                          = 155,
    upr                                          = 156,
    skpr                                         = 157,
    kopr                                         = 158,
    cds                                          = 159,
    edm                                          = 160,
    prc                                          = 161,
    cdw                                          = 162,
    eqw                                          = 163,
    pla                                          = 164,
    wbc                                          = 165,
    cbi                                          = 166,
    nbi                                          = 167,
    alc                                          = 168,
    map                                          = 169,
    adm                                          = 170,
    alm                                          = 171,
    hov                                          = 172,
    btw                                          = 173,
    owl                                          = 174,
    rms                                          = 175,
    deb                                          = 176,
    ach                                          = 177,
    prs                                          = 178,
    imp                                          = 179,
    drd                                          = 180,
    crc                                          = 181,
    dmt                                          = 182,
    mgt                                          = 183,
    bad                                          = 184,
    nrv                                          = 185,
    vag                                          = 186,
    mag                                          = 187,
    aag                                          = 188,
    red                                          = 189,
    drv                                          = 190,
    pmc                                          = 191,
    sdn                                          = 192,
    brn                                          = 193,
    plr                                          = 194,
    bea                                          = 195,
    kko                                          = 196,
    sse                                          = 197,
    ies                                          = 198,
    lrm                                          = 199,
    prm                                          = 200,
    uvh                                          = 201,
    uva                                          = 202,
    StaminaCooldownDefault                       = 203,
    StaminaCooldownWeaponRaised                  = 204,
    StaminaCooldownAttack                        = 205,
    StaminaCooldownDodge                         = 206,
    StaminaCooldownHit                           = 207,
    StaminaCooldownBlock                         = 208,
    StaminaCooldownBrokenBlock                   = 209,
    StaminaCooldownCollisionHit                  = 210,
    StaminaCooldownJump                          = 211,
    StaminaCooldownFallDamage                    = 212,
    StaminaCooldownArcherySelfHarm               = 213,
    StaminaCooldownSharpeningDoPedal             = 214,
    StaminaCooldownBlacksmithingStroke           = 215,
    StaminaCooldownBlacksmithingExhaustingStroke = 216,
    cnp                                          = 217,
    cbp                                          = 218,
    csp                                          = 219,
    slp                                          = 220,
    cep                                          = 221,
    icp                                          = 222,
    crp                                          = 223,
    dfe                                          = 224,
    csc                                          = 225,
    hvp                                          = 226,
    pqe                                          = 227,
    sks                                          = 228,
    sst                                          = 229,
    sss                                          = 230,
    xst                                          = 231,
    xag                                          = 232,
    xvi                                          = 233,
    xsw                                          = 234,
    xcr                                          = 235,
    xsu                                          = 236,
    xhw                                          = 237,
    xma                                          = 238,
    xsc                                          = 239,
    srr                                          = 240,
    bap                                          = 241,
    alp                                          = 242,
    atd                                          = 243,
    ams                                          = 244,
    rcx                                          = 245,
    lfb                                          = 246,
    tba                                          = 247,
    nrw                                          = 248,
    fac                                          = 249,
    ahe                                          = 250,
    apo                                          = 251,
    ano                                          = 252,
    fpd                                          = 253,
    eph                                          = 254,
    rpd                                          = 255,
    rpr                                          = 256,
    rpa                                          = 257,
    hla                                          = 258,
    rpp                                          = 259,
    efd                                          = 260,
    aml                                          = 261,
    bmr                                          = 262,
    lgp                                          = 263,
    health                                       = 264,
    stamina                                      = 265,
    exhaust                                      = 266,
    hunger                                       = 267,
    karma                                        = 268,
    alcoholism                                   = 269,
    StaminaRegenCooldown                         = 270,
    HasUnholsteredWeapon                         = 271,
    HasUnholsteredMissileWeapon                  = 272,
    HasRaisedWeapon                              = 273,
    IsBlocking                                   = 274,
    IsAiming                                     = 275,
    IsReloading                                  = 276,
    HasActiveThreats                             = 277,
    IsInCombatDanger                             = 278,
    IsActiveInCombat                             = 279,
    IsInBattle                                   = 280,
    IsRunning                                    = 281,
    WasRunning                                   = 282,
    WannaSprint                                  = 283,
    IsMoving                                     = 284,
    WasMoving                                    = 285,
    IsSprinting                                  = 286,
    WasSprinting                                 = 287,
    IsOnHorse                                    = 288,
    IsFastTraveling                              = 289,
    IsStealth                                    = 290,
    IsPotentialStealth                           = 291,
    IsInAir                                      = 292,
    HasLimitedRunByItem                          = 293,
    HasLimitedSprintByItem                       = 294,
    IsInFollow                                   = 295,
    ade                                          = 296,
    uat                                          = 297,
    wat                                          = 298,
    wac                                          = 299,
    ahm                                          = 300,
    rtm                                          = 301,
    act                                          = 302,
    asp                                          = 303,
    pbs                                          = 304,
    cli                                          = 305,
    hlh                                          = 306,
    slh                                          = 307,
    sls                                          = 308,
    dig                                          = 309,
    exh                                          = 310,
    hod                                          = 311,
    psp                                          = 312,
    lcs                                          = 313,
    srg                                          = 314,
    sco                                          = 315,
    srb                                          = 316,
    sra                                          = 317,
    ard                                          = 318,
    skp                                          = 319,
    rst                                          = 320,
    pdp                                          = 321,
    eep                                          = 322,
    lpd                                          = 323,
    lpn                                          = 324,
    ain                                          = 325,
    hin                                          = 326,
    fae                                          = 327,
    dee                                          = 328,
    dew                                          = 329,
    osb                                          = 330,
    dsl                                          = 331,
    cos                                          = 332,
    pac                                          = 333,
    lpb                                          = 334,
    res                                          = 335,
    ors                                          = 336,
    ptp                                          = 337,
    shr                                          = 338,
    ser                                          = 339,
    pim                                          = 340,
    ald                                          = 341,
    aam                                          = 342,
    uab                                          = 343,
    fhm                                          = 344,
    fne                                          = 345,
    dth                                          = 346,
    dtd                                          = 347,
    tdh                                          = 348,
    adc                                          = 349,
    sla                                          = 350,
    sta                                          = 351,
    ssa                                          = 352,
    wsr                                          = 353,
    war                                          = 354,
    wrs                                          = 355,
    wra                                          = 356,
    efc                                          = 357,
    dsc                                          = 358,
    wde                                          = 359,
    ewd                                          = 360,
    scv                                          = 361,
    scx                                          = 362,
    cat                                          = 363,
    acm                                          = 364,
    rat                                          = 365,
    rls                                          = 366,
    ptw                                          = 367,
    ala                                          = 368,
    apq                                          = 369,
    bid                                          = 370,
    fob                                          = 371,
    ode                                          = 372,
    dmd                                          = 373,
    dmh                                          = 374,
    drn                                          = 375,
    bqc                                          = 376,
    bqy                                          = 377,
    ifc                                          = 378,
    pwc                                          = 379,
    paa                                          = 380,
    itd                                          = 381,
    rkm                                          = 382,
    rhm                                          = 383,
    phv                                          = 384,
    bnv                                          = 385,
    pnv                                          = 386,
    aps                                          = 387,
    fbm                                          = 388,
    tdm                                          = 389,
    cps                                          = 390,
    spv                                          = 391,
    pct                                          = 392,
    nhp                                          = 393,
    nrb                                          = 394,
    btd                                          = 395,
    Dodge                                        = 396,
    PerfectBlock                                 = 397,
    Riposte                                      = 398,
    Finticka                                     = 399,
    StealthKnockOut                              = 400,
    StealthKill                                  = 401,
    HorsePullDown                                = 402,
    Bumper                                       = 403,
    LetEmCome                                    = 404,
    MasterStrikeUnarmed                          = 405,
    Comrade                                      = 406,
    ChainStrikeUnarmed                           = 407,
    EasyWayOut                                   = 408,
    Undercut                                     = 409,
    Undercut2                                    = 410,
    Reading_ArtAdmirer                           = 411,
    Reading_AvidReader                           = 412,
    DisarmStrike                                 = 413,
    SteakTartare                                 = 414,
    TrialAndError                                = 415,
    _unused4_                                    = 416,
    BatteringRam                                 = 417,
    _unused5_                                    = 418,
    Bacchus                                      = 419,
    LuckyFind                                    = 420,
    SkillcheckDifficulty                         = 421,
    WineBibber                                   = 422,
    BeerBibber                                   = 423,
    LiquorBibber                                 = 424,
    LooseTongue                                  = 425,
    BundleAlchemist                              = 426,
    HumanDustbin                                 = 427,
    SaltAndSmoke                                 = 428,
    _unused3_                                    = 429,
    LiquorAntidote                               = 430,
    _unused2_                                    = 431,
    EutuBrutus                                   = 432,
    Reading_Wanderer                             = 433,
    Harvester                                    = 434,
    OneWayOrTheOther                             = 435,
    HorrendousWounds                             = 436,
    TormentingStrike                             = 437,
    Salty                                        = 438,
    ChainStrikePolearm                           = 439,
    Taunt                                        = 440,
    HuntAttack                                   = 441,
    MercyKill                                    = 442,
    FirstAid                                     = 443,
    Empathic                                     = 444,
    Serration                                    = 445,
    HeavyTip                                     = 446,
    ChainStrikeSword                             = 447,
    SevenLeague                                  = 448,
    Letailleur                                   = 449,
    Padding                                      = 450,
    Blacksmithsson                               = 451,
    HuntingPermit                                = 452,
    Attack                                       = 453,
    _unused6_                                    = 454,
    Distract                                     = 455,
    Hunt                                         = 456,
    Search                                       = 457,
    TwoHanded                                    = 458,
    SecretOfSecrets                              = 459,
    ThiefSight                                   = 460,
    BlacksmithingMaster                          = 461,
    SmartBootstraping                            = 462,
    RazorSharp                                   = 463,
    Bark                                         = 464,
    Inconspicuous                                = 465,
    Totentanz                                    = 466,
    CleanlinessIsNextToGodliness                 = 467,
    ArmOfBeowulf                                 = 468,
    MasterStrike                                 = 469,
    ChainStrikeHeavyWeapon                       = 470,
    AimToMaim                                    = 471,
    CripplingHit                                 = 472,
    Salva                                        = 473,
    Bonebreaker                                  = 474,
    OpeningStrike                                = 475,
    OpeningStrike2                               = 476,
    CuttingEdge                                  = 477,
    CleanCut                                     = 478,
    GreenKnight                                  = 479,
    Painkiller                                   = 480,
    CauseAlwaysHeavyBleeding                     = 481,
    Archer                                       = 482,
    HardenedSteel                                = 483,
    SevenLeague2                                 = 484,
    CauseMoralHitOnCollision                     = 485,
    ForbiddenWeapon                              = 486,
    CripplingHit2                                = 487,
    ExperimentalPowder                           = 488,
    DownToSize                                   = 489,
    NoHangoverWhenSleeping                       = 490,
    Masterchef                                   = 491,
    StrangeMan                                   = 492,
    MischiefArtist                               = 493,
    Looter                                       = 494,
    OneShotAtGlory                               = 495,
    MovementModifier                             = 496,
    Inventory                                    = 497,
    MovementType                                 = 498,
    Stance                                       = 499,
    Surface                                      = 500,
    MovementSpeeds                               = 501,
    Perception                                   = 502,
    StaminaUpdate                                = 503,
    Skills                                       = 504,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_LockpickableEntityAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::conceptmodule::S_TypeConstraint {
    0x8  : Type          : enum wh::conceptmodule::E_ConstraintType;
    0x10 : Target        : class CryStringT<char>;
    0x18 : KeyProperty   : class CryStringT<char>;
    0x20 : ValueProperty : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ComboTutorial : int {
    None            = 0,
    Phase1_starting = 1,
    Phase1_active   = 2,
    Phase2_starting = 3,
    Phase2_active   = 4,
    Done            = 5,
    Failed          = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_AlchemyTable* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_DeliveryResult::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ApprenticeDuel : int {
    None          = 0,
    Started       = 1,
    PlayerWon     = 2,
    ApprenticeWon = 3,
    PlayerCheated = 4,
    Aborted       = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithCorrected : int {
    None                    = 0,
    Started                 = 1,
    CompletedWithoutPraying = 2,
    CompletedWithPraying    = 3,
    Failed                  = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::combatmodule::C_CombatFragmentMetaDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::combatmodule::C_CombatFragmentMetaData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::combatmodule::C_CombatFragmentMetaData,class std::allocator<class wh::combatmodule::C_CombatFragmentMetaData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::rpgmodule::S_BuffDefinitionAITag {

    //non-vtable method: WHGame.dll+0x2b32f98
    ToString( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeterrentAreaProfile : int {
    ZemniceNehori = 0,
    ZemniceHori   = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum petrZpiskuStreaming : int {
    StreamedInitial           = 0,
    StremedAndExpectedRunning = 1,
    UnstreamedM48aBattle      = 2,
    StreamedM48aOpenworld     = 3,
    UnstreamedM48aNightwatch  = 4,
    StreamedM48b              = 5,
    StreamedM48cBeforeBattle  = 6,
    UnstreamedM48cBattle      = 7,
    StreamedM48cAfterBattle   = 8,
    UnstreamedM49             = 9,
    StreamedM50quest          = 10,
    UnstreamedM30Battle       = 11,
    UnstreamedM50Battle       = 12,
    StreamedM51               = 13,
    UnstreamedAfterFinale     = 14,
    StreamedDebug             = 15,
    UnstreamedDebug           = 16,
};

//size in bytes: 0xce0
//pointer dimension: 0
class wh::rpgmodule::C_Soul : class wh::rpgmodule::I_Soul {
    //Getter: WHGame.dll+0x1ede058
    get : IsDead           : bool;
    //Getter: WHGame.dll+0x1ede060
    get : IsUnconscious    : bool;
    //Getter: WHGame.dll+0x1eddb88
    get : IsMounted        : bool;
    //Getter: WHGame.dll+0x1eddb80
    get : IsBleeding       : bool;
    //Getter: WHGame.dll+0x1edf35c
    get : IsDrunk          : bool;
    //Getter: WHGame.dll+0x1eddb78
    get : IsStarving       : bool;
    //Getter: WHGame.dll+0x1eddb70
    get : IsExhausted      : bool;
    //Getter: WHGame.dll+0x1edfbc8
    get : Archetype        : class std::reference_wrapper<struct wh::rpgmodule::S_SoulArchetype const >;
    //Getter: WHGame.dll+0x1edfbe0
    get : Inventory        : class wh::entitymodule::C_Inventory*;
    //Getter: WHGame.dll+0x1edf17c
    get : CombatSoul       : class wh::rpgmodule::I_CombatSoul*;
    //Getter: WHGame.dll+0x1edfbd4
    get : CompanionManager : class wh::rpgmodule::C_CompanionManager*;
    //Getter: WHGame.dll+0x1edfbec
    get : EquipmentManager : class wh::entitymodule::C_EquipmentManager*;
    //Getter: WHGame.dll+0x1edfc40
    get : FactionNode      : class wh::rpgmodule::C_NPCFactionNode*;
    //Getter: WHGame.dll+0x1edf1a0
    get : SkillTeacher     : class wh::rpgmodule::C_SkillTeacherSoulComponent*;

    //vtable offset: 0x268
    GetState( wh::rpgmodule::SoulState );
    //vtable offset: 0x528
    SetState( wh::rpgmodule::SoulState, float );
    //vtable offset: 0x288
    AdvanceToStatLevel( wh::rpgmodule::SoulStat, uint );
    //vtable offset: 0x290
    CheckEquipment( wh::entitymodule::EquipmentSlotIds const &, wh::entitymodule::EquipmentSlotIds const & );
    //vtable offset: 0x298
    AddXPFromToStatLevel( wh::rpgmodule::SoulStat, uint, uint );
    //vtable offset: 0x2a8
    GetStatLevel( wh::rpgmodule::SoulStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x2a8
    GetStatLevelRelative( wh::rpgmodule::SoulStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x2d0
    GetDerivedStat( wh::rpgmodule::SoulDerivedStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x2f0
    GetStaticStat( wh::rpgmodule::SoulStaticStat, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x318
    AdvanceToSkillLevel( wh::rpgmodule::SoulSkill, uint );
    //vtable offset: 0x320
    AddXPFromToSkillLevel( wh::rpgmodule::SoulSkill, uint, uint );
    //vtable offset: 0x330
    GetSkillLevel( wh::rpgmodule::SoulSkill, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x330
    GetSkillLevelRelative( wh::rpgmodule::SoulSkill, classstd::shared_ptr<structwh::rpgmodule::S_SoulQueryContext> );
    //vtable offset: 0x520
    UseInventoryItems( classstd::shared_ptr<classwh::entitymodule::I_ItemDescriptor>, bool, wh::entitymodule::BodyPartData const & );
    //vtable offset: 0x518
    CanEat( Guid const & );
    //vtable offset: 0x70
    IsBodyPartBleeding( wh::entitymodule::BodyPartData const & );
    //vtable offset: 0x4a0
    Revive( );
    //vtable offset: 0x550
    AddDirt( float, bool );
    //vtable offset: 0x558
    AddBlood( wh::entitymodule::BodyParts, wh::conceptmodule::Floats, bool );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_TutorialName> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum newTaskHuntsman1 : int {
    None      = 0,
    Active    = 1,
    Completed = 2,
    Failed    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LureWolves : int {
    None          = 0,
    SetBait       = 1,
    SetBaitAgain  = 2,
    WaitForWolves = 3,
    Done          = 4,
    Failed        = 5,
    Aborted       = 6,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_CutsceneHolder *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::dialogmodule::data::S_FastForwardRequestForAll : struct wh::dialogmodule::data::S_FastForwardRequest {
};

//size in bytes: 0x120
//pointer dimension: 0
struct wh::entitymodule::S_QuickSlotContainerItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass, struct wh::entitymodule::S_ArmorItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : Visibility                     : float;
    0xb4  : Conspicuousness                : float;
    0xb8  : Charisma                       : float;
    0xbc  : RPGBuffWeight                  : float;
    0xc0  : SocialClassId                  : int;
    0xc4  : WealthLevel                    : int;
    0xe0  : MaxQuality                     : unsigned int;
    0xc8  : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get   : Clothing                       : class CryStringT<char>;
    //Getter: WHGame.dll+0x19c4ab0
    get   : DefenseStab                    : float;
    //Getter: WHGame.dll+0x19c4bf0
    get   : DefenseSlash                   : float;
    //Getter: WHGame.dll+0x19a24c0
    get   : DefenseSmash                   : float;
    0xfc  : StrReq                         : float;
    0x100 : Noise                          : float;
    0x104 : MaxStatus                      : int;
    0x108 : FactionId                      : class CryStringT<char>;
    0x118 : NumberOfQuickSlots             : unsigned int;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitiazerChangeBehaviorState : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role       : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fc78
    get  : Behavior   : class CryStringT<char>;
    0x1c : State      : enum wh::xgenaimodule::E_SmartBehaviorState::Type;
    0x1d : MLodMaster : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DigAndBury : int {
    1 = 0,
    2 = 1,
    3 = 2,
    4 = 3,
    5 = 4,
};

//size in bytes: 0x98
//pointer dimension: 0
class wh::rpgmodule::C_PauseWorldTime : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::playermodule::S_TutorialName {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stealingBookServant : int {
    None                     = 0,
    Started                  = 1,
    UpdatedOnLocation        = 2,
    UpdatedAfterTalk         = 3,
    UpdatedAfterTalkAndSteal = 4,
    Done                     = 5,
    Aborted                  = 6,
};

//size in bytes: 0x288
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionOut : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditsDialogState : int {
    None           = 0,
    ReadyForDialog = 1,
    Sleeping       = 2,
    Done           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillSoldiers : int {
    None                      = 0,
    SkirmishAfterArrival      = 1,
    SkirmishDuringBrutalities = 2,
    AfterArrivalWon           = 3,
    DuringBrutalitiesWon      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CimbrosHledaji : int {
    None             = 0,
    CimbrosHledaji   = 1,
    CimbrosNehledaji = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_GameScriptContext {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HadankaState : int {
    None               = 0,
    MazakQuestItem     = 1,
    PlayerQuestItem    = 2,
    PlayerNonQuestItem = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum skirmishCamp2State : int {
    None                        = 0,
    SkirmishOn                  = 1,
    SkirmishOnBezSaS            = 2,
    SkirmishOnBezHrace          = 3,
    DobojovanoPredVyslanim      = 4,
    DobojovanoBezHrace          = 5,
    DobojovanoHracSam           = 6,
    DobojovanoPoVyslaniZaPachol = 7,
    PredOdchodem                = 8,
    SaSbeziSamiDoTabora         = 9,
    Odchod                      = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContextPreset>* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::questmodule::C_Log {
    0x10 : Name      : class CryStringT<char>;
    0x8  : Type      : enum wh::questmodule::E_LogType;
    0x20 : Log       : class wh::framework::C_LocalizedString;
    0xc  : IsTracked : bool;
    0x18 : Marker    : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::playermodule::S_RandomEventTag {
    0x0 : Name : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bf5e68
enum enum wh::entitymodule::E_UseHandContext::Type : unsigned char {
    none               = 0,
    miniGame           = 1,
    miniGameShort      = 2,
    throwDecoy         = 3,
    carryCorpse        = 4,
    carryCorpsePutdown = 5,
    carryItem          = 6,
    procClip           = 7,
    ladder             = 8,
    crouch             = 9,
    mount              = 10,
    dismount           = 11,
    bed                = 12,
    stealth            = 13,
    dialog             = 14,
    syncAnim           = 15,
    lightSource        = 16,
    butchering         = 17,
    cart               = 18,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_AddScriptContextElement* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_SkirmishEventType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingStatesJobst : int {
    StreamDebug            = 0,
    UnstreamDebug          = 1,
    UnstreamAfterArrivalCS = 2,
    StreamAfterNightmare   = 3,
    UnstreamAfterQuest     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum doprovodCommanderaProfile : int {
    Untreamed     = 0,
    Streamed      = 1,
    NeverStreamed = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_MinigameDecision* {
};

//size in bytes: 0x18
//pointer dimension: 0
class boost::container::flat_map<unsigned int,class std::vector<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimation,class std::allocator<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimation> >,struct std::less<unsigned int>,void> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerUnconsciousInFight : int {
    None             = 0,
    WaitForConscious = 1,
    WokeUp           = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_SniffableItem> {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoPerk : class wh::guimodule::C_UIFlashObject {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : Icon            : class CryStringT<char>;
    0x20 : State           : unsigned int;
    0x28 : Description     : class CryStringT<char>;
    0x30 : LoreDescription : class CryStringT<char>;
    0x40 : ParentPerk      : class CryStringT<char>;
    0x38 : MinLevel        : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_AssetPort> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class wh::framework::C_LocalizedString>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Length* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HansGoToCertovka : int {
    None                    = 0,
    Legally                 = 1,
    Illegally               = 2,
    GoToCertovkaByDC        = 3,
    GoToCertovkaIllegally   = 4,
    GoToCertovkaIllegally_2 = 5,
    Done                    = 6,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_Stash *,class std::allocator<class wh::entitymodule::C_Stash *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MetroArea : int {
    None            = 0,
    AreaZizkaCert   = 1,
    AreaMusa        = 2,
    FirstCrypt      = 3,
    SecondCrypt     = 4,
    CryptWithPtacek = 5,
    LastCrypt       = 6,
    FirstTunel      = 7,
    LastTunel       = 8,
    OutOfMetro      = 9,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_EntityScriptContext> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorSprintTrigger* {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::guimodule::C_UIProgress : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DokumentyZabaviliStraze : int {
    None                = 0,
    ZiskejDokumentyZpet = 1,
    DokumentyZiskany    = 2,
    Aborted             = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::rpgmodule::S_BuffDefinitionId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoubojVyherci : int {
    None                        = 0,
    1koloFighterA               = 1,
    1koloFighterB               = 2,
    1koloFighterA_2koloFighterA = 3,
    1koloFighterB_2koloFighterB = 4,
    1koloFighterA_2koloFighteB  = 5,
    1koloFighterB_2koloFighterA = 6,
    finaleFighterA              = 7,
    finaleFighterB              = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::databasemodule::I_DatabaseModule* {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingRequirements {
    0x0 : LogicalSpeedId      : int;
    //Getter: WHGame.dll+0x333557c
    get : RequiredDistancesSQ : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AnimCharAsset* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimHolsterRequest* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::C_ItemDelivery> >* {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::playermodule::C_SaveLockEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : LockReason   : class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_SaveLockEffectReason::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::xgenaimodule::S_ScriptParam {
    0x0  : Name    : class CryStringT<char>;
    0x8  : Value   : float;
    0x10 : Comment : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SpawnedItemsCleanupEventImplemenation* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<struct wh::rpgmodule::S_SkillLessonLevel,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_InteractorOverride* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZdeninPrstenQI : int {
    None   = 0,
    UZdeny = 1,
    UHrace = 2,
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::entitymodule::C_ActorActionJump : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CrossCountry_RiderBehavControl : int {
    BasicDaycycle                = 0,
    Cleanup                      = 1,
    CleanupFinished              = 2,
    InitFastForwardLink          = 3,
    GetOnHorseAndTeleportToStart = 4,
    StartWait                    = 5,
    Ride                         = 6,
    ParkHorseNearFinishLine      = 7,
    RelaxAfterRace               = 8,
    ReturnHome                   = 9,
    BasicDaycycleAfterRace       = 10,
    Death                        = 11,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_BodyPart::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_DisableDoorInteractivity* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SockyNpc : int {
    ttkc_man_15 = 0,
    ttkc_man_10 = 1,
    ttkc_dusko  = 2,
    ttkc_man_18 = 3,
    tsla_man_2  = 4,
    ttkc_prasta = 5,
    ttac_man_3  = 6,
    ttac_man_5  = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ComparisonResult : int {
    PlayersBetter = 0,
    PlayersWorse  = 1,
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::soundmodule::C_AudioSustainedEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : AtlTriggerName : class wh::conceptmodule::C_TypedPortRef<struct wh::soundmodule::S_SkaldAtlTriggerId>*;
    0xd0 : LinkableObject : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::shopmodule::C_Shop> > {
};

//size in bytes: 0x130
//pointer dimension: 0
class wh::playermodule::C_RandomEventPlace : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name                 : class CryStringT<char>;
    0x18 : RuntimeState         : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports                : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView            : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode        : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace       : class boost::optional<bool>;
    0x60 : Types                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets               : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes                : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC          : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView            : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0xa8 : Cooldown             : struct wh::framework::S_TimeSpan;
    0xb0 : GlobalCooldownType   : enum wh::playermodule::E_RandomEventGlobalCooldown::Type;
    0xb4 : Difficulty           : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0xb8 : DifficultyMixRatio   : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0xbc : ViewRadius           : float;
    0xc0 : AllowConcurrentSpawn : bool;
    0xc8 : IsEnabled            : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::C_ActorActiontRagdoll : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a229d0
enum enum wh::rpgmodule::E_SoulCounter : unsigned int {
    DistanceWalked                      = 0,
    DistanceRan                         = 1,
    DistanceSprinted                    = 2,
    DistanceRidden                      = 3,
    DistanceFastTraveled                = 4,
    DistanceTraveledWithPlayerOnBack    = 5,
    DeltaDistanceForXPAward             = 6,
    DeltaDistanceForShoeHealth          = 7,
    DeltaDistanceForHorseRidingXPAward  = 8,
    DeltaDistanceForClothingDirtying    = 9,
    DeltaDistanceForHorseEquipHealth    = 10,
    DeltaDistanceForEncumberanceXPAward = 11,
    DeltaClothingDirtAccumulated        = 12,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AntonFrancekInPub : int {
    None                = 0,
    WaitingForPlayer    = 1,
    PlayingIngameDialog = 2,
    Idling              = 3,
    Done                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Cimburk : int {
    AbaddonedCimburk = 0,
    CumansCimburk    = 1,
    KnightsCimburk   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertovkaNpcs : int {
    Stream   = 0,
    Unstream = 1,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemOffHand : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemEquippable, class wh::guimodule::C_UIFlashInfoItemWeapon {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Condition        : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : Quality          : unsigned int;
    0x5c : Durability       : unsigned int;
    0x68 : StrengthReq      : unsigned int;
    0x6c : DiffStrength     : int;
    0x74 : CurrAgility      : int;
    0x78 : Defense          : float;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::C_EquipmentManager::E_QuickSlotSpec {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CartWaitingBeforeDeparture : int {
    None                   = 0,
    WaitingBeforeDeparture = 1,
    Done                   = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
struct wh::dialogmodule::data::S_Response {
    //Getter: WHGame.dll+0x76d660
    get  : Text            : class wh::framework::C_LocalizedString;
    0x20 : Important       : bool;
    0x21 : Volume          : enum wh::dialogmodule::data::E_ResponseVolume;
    0x22 : Role            : struct wh::rpgmodule::S_RoleId;
    0x30 : Commands        : struct DynArray<class std::shared_ptr<class wh::dialogmodule::data::C_Command>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
    0x28 : HearingOverride : class CryStringT<char>;
    0x38 : ReferenceLength : float;
    0x3c : StartDelay      : float;
};

//size in bytes: 0x208
//pointer dimension: 0
class wh::playermodule::C_EnableAllowedWeaponsInQAM : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name                 : class CryStringT<char>;
    0x18  : RuntimeState         : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView            : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive             : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : MainHandDescriptor   : class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::I_ItemDescriptor> >*;
    0xd0  : RequireMainHandEmpty : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x110 : OffHandDescriptor    : class wh::conceptmodule::C_TypedPortRef<class std::shared_ptr<class wh::entitymodule::I_ItemDescriptor> >*;
    0x150 : RequireOffHandEmpty  : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x190 : PlayerSouls          : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_LeftHandCondition : class wh::xgenaimodule::NPCState::I_Condition, class wh::xgenaimodule::NPCState::C_HandContentConditionBase {
    0x8  : DataSource                : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : RequiresEmpty             : bool;
    0xd  : InitializeItemFromRequest : bool;
    0x10 : SetAsideSlotSource        : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x30 : SetAsideSlotDataSource    : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x40 : AllowMissingIfLightSource : bool;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::musicmodule::C_WorldQuantity {
    //Getter: WHGame.dll+0x2e40680
    get  : Name                : class CryStringT<char>;
    0x20 : AtlRtpcName         : class CryStringT<char>;
    //Getter: WHGame.dll+0x19e4720
    get  : DefaultValue        : float;
    0x1c : ThresholdDifference : float;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::animationmodule::S_FragmentIdleStateData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum pointOfNoReturnCancel : int {
    BeforePointOfNoReturn = 0,
    AfterPointOfNoReturn  = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_BlockTutorial> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PogromDebugStart : int {
    None       = 0,
    NoDialogue = 1,
    Trackview  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsFromWorldInventory* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::musicmodule::C_MusicModule {
    0x10 : MusicManager : class wh::musicmodule::I_MusicManager*;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Palenka : int {
    None          = 0,
    Kuchyne       = 1,
    DonestCsabovi = 2,
    Done          = 3,
    Aborted       = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_UnstanceData::S_Phase {
    0x0 : Fragment : class CryStringT<char>;
    //Getter: WHGame.dll+0x32ffa84
    get : Tags     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::conceptmodule::C_Scene>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowTheAxe : int {
    None        = 0,
    Active      = 1,
    AxeShown    = 2,
    AxeNotShown = 3,
    Fail        = 4,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::shopmodule::C_Shop> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum standoff : int {
    None               = 0,
    Active             = 1,
    rozdeleniNaTretiny = 2,
    fight2v1           = 3,
    fight1v1v1         = 4,
    secondFight2v1     = 5,
    henryWithoutBones  = 6,
    afterFightToDeath  = 7,
    afterSecondFight   = 8,
    playerFled         = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_punishmentLocation : int {
    Unknown      = 0,
    Troskovice   = 1,
    Kutnahora    = 2,
    Malesov      = 3,
    Miskovice    = 4,
    Suchdol      = 5,
    Zikmundtabor = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_TrackViewBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RoadAmbush : int {
    RoadActive = 0,
    RoadOff    = 1,
};

//size in bytes: 0x290
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionOutStatic : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction, class wh::xgenaimodule::NPCState::C_UnstanceActionOut {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
    0x288 : HasSingleOption                    : bool;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AreaLabelTrigger> {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIFlashContentRecipeAlchemy : class wh::guimodule::C_UIFlashObject {
    0x8  : Id           : class CryStringT<char>;
    0x10 : Name         : class CryStringT<char>;
    0x18 : IconId       : class CryStringT<char>;
    0x20 : Desc         : class CryStringT<char>;
    0x28 : BaseMaterial : class CryStringT<char>;
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_UnstanceTransitionData {
    0x0  : SourceUnstanceName                        : class CryStringT<char>;
    0x8  : TargetUnstanceName                        : class CryStringT<char>;
    0x10 : Fragment                                  : class CryStringT<char>;
    //Getter: WHGame.dll+0x32ffa2c
    get  : Tags                                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x30 : IgnoreItemRelatedStateInSimulationCompare : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UrgingState : int {
    None               = 0,
    EnabledButInactive = 1,
    Active             = 2,
    Disabled           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum goToMeeting : int {
    None               = 0,
    MeetingFirstOpened = 1,
    MeetingFirstClosed = 2,
    MeetingOpened      = 3,
    MeetingClosed      = 4,
    Done               = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EquipArmor : int {
    None                 = 0,
    EquipArmor           = 1,
    TalkedToCaponInArmor = 2,
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeEquipmentEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3bc0008
enum enum wh::rpgmodule::E_SoulStat : unsigned int {
    strength      = 0,
    agility       = 1,
    vitality      = 2,
    speech        = 3,
    vision        = 4,
    hearing       = 5,
    barter        = 6,
    courage       = 7,
    storyProgress = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetUnderwear* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::S_InteractiveSceneActionParams {
};

//size in bytes: 0x8
//pointer dimension: 0
long double {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskAboutMosquitoButchersWife : int {
    None                  = 0,
    SpokeWithInnkeper     = 1,
    SpokeWithButchersWife = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_HoleAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MalesovFortress : int {
    ZachranaPtacka_WallIntact                 = 0,
    ZachranaPtacka_WallDisassembled           = 1,
    ZachranaPtacka_AfterEnemiesGatherCutscene = 2,
    ZachranaPtacka_PtacekFound                = 3,
    ZachranaPtacka_Escape                     = 4,
    ZachranaPtacka_End                        = 5,
    UtokNaMalesov_ClosedGate                  = 6,
    UtokNaMalesov_OpenGate                    = 7,
    UtokNaMalesov_CannonShotCutscene          = 8,
    UtokNaMalesov_DestroyedDrawbridge         = 9,
    UtokNaMalesov_DestroyedTowerDoor          = 10,
    UtokNaMalesov_End                         = 11,
    UtokNaMalesov_EndUninhabited              = 12,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum pripravasouboj : int {
    None    = 0,
    Started = 1,
    Updated = 2,
    Done    = 3,
    Failed  = 4,
    Abort   = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_InventoryPreset* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_DebuggerPort> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::entitymodule::C_PresetItemBase {
    0x8 : Weight      : float;
    0xc : CombatLevel : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashListReputation* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_BloodMask>,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
unsigned __int64* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindCapon : int {
    None        = 0,
    Active      = 1,
    DonePoplach = 2,
    DoneStealth = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp1_LeatherStash : int {
    None             = 0,
    FindLeatherStash = 1,
    PoacherPathFound = 2,
    Failed           = 3,
    Abort            = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipeStepTypeDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyRecipeStepType,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_AlchemyRecipeStepType,class std::allocator<class wh::playermodule::C_AlchemyRecipeStepType> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab41a8
enum enum wh::game::E_GameMode::Type : int {
    none     = 0,
    normal   = 1,
    hardcore = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithWorkpiece* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AfterBattleErik : int {
    None                  = 0,
    CatchingBreath        = 1,
    ScoldingDeadSoldier   = 2,
    ScoldingLivingSoldier = 3,
    UrgingBohuta          = 4,
    WaitingForBohuta      = 5,
    Done                  = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kubenka_findStash : int {
    None             = 0,
    PissDrunk        = 1,
    PathToCamp       = 2,
    GoToStashTrash   = 3,
    DialogStashTrash = 4,
    GoToFakeStashA   = 5,
    DialogFakeStashA = 6,
    GoToFakeStashB   = 7,
    DialogFakeStashB = 8,
    GoToStashWeapons = 9,
    FoundTrueStash   = 10,
    Completed        = 11,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_AnimDoorAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::xgenaimodule::BehaviorTree::E_NodeAttribudeProperties {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c595f0
enum enum RowSimulationParams::ClampMode : unsigned char {
    PendulumCone          = 0,
    PendulumHingePlane    = 1,
    PendulumHalfCone      = 2,
    TranslationProjection = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_AreaLabelEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_CIPilePhase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Diskvalifikace : int {
    none     = 0,
    fighterA = 1,
    fighterB = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightKitchen : int {
    None          = 0,
    streamingCook = 1,
    Skirmish      = 2,
    Done          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BullsState : int {
    None          = 0,
    Woken         = 1,
    Fed           = 2,
    EventFinished = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_WeaponPresetGUID>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ElementAt> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct Vec2_tpl<float> >* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_InventoryPresetRef* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetBeard* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Turnaj : int {
    None                     = 0,
    PorazKutnohorske         = 1,
    ProhrajProtiKutnohorskym = 2,
    HenryVyhral              = 3,
    HenryProhral             = 4,
    Failed                   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Lazne_FailReason : int {
    None         = 0,
    AdamDied     = 1,
    BetaDied     = 2,
    BathmaidDied = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BudovaniLazniResult : int {
    None            = 0,
    BathhouseOpened = 1,
    BathhouseClosed = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadOrAlive : int {
    Alive = 0,
    Dead  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3affca0
enum enum wh::conceptmodule::E_NodeStyle : int {
    General          = 0,
    Debug            = 1,
    Control          = 2,
    Arithmetic       = 3,
    Logical          = 4,
    Conversion       = 5,
    Module           = 6,
    State            = 7,
    ObjectProperties = 8,
    GeneralFunction  = 9,
    ArrayFunction    = 10,
    ItemFunction     = 11,
    SoulFunction     = 12,
    Effect           = 13,
    Trigger          = 14,
    AIGenerated      = 15,
    Combat           = 16,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>* {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingMorphDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::clothing::S_ClothingMorph,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::clothing::S_ClothingMorph,class std::allocator<struct wh::entitymodule::clothing::S_ClothingMorph> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NomadsHonourQuestFailed : int {
    None        = 0,
    QuestFailed = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_LinkEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RescuingTibor : int {
    None                         = 0,
    FindTibor                    = 1,
    FindTiborAtSaddler           = 2,
    SaddlerRevealedTiborLocation = 3,
    FreeTibor                    = 4,
    TiborRescued                 = 5,
    Failed_UnstreamTibor         = 6,
    Failed_TiborUnstreamed       = 7,
    Aborted                      = 8,
};

//size in bytes: 0x2a8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionOutGenerated : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction, class wh::xgenaimodule::NPCState::C_UnstanceActionOut {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
    0x288 : FragmentName                       : class CryStringT<char>;
    0x290 : Tags                               : class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > >;
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingMaterialDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::vector>, class wh::databasemodule::C_ObjectTreeDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::vector>,class std::unordered_map<class CryStringT<char>,class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,struct std::hash<class CryStringT<char> >,struct std::equal_to<class CryStringT<char> >,class std::allocator<struct std::pair<class CryStringT<char> const ,class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial> > > > > {
    0x30 : Objects           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial> > > >;
    //Getter: WHGame.dll+0x19bdf70
    get  : KeyIndexedObjects : class std::reference_wrapper<class std::unordered_map<class CryStringT<char>,class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,struct std::hash<class CryStringT<char> >,struct std::equal_to<class CryStringT<char> >,class std::allocator<struct std::pair<class CryStringT<char> const ,class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial> > > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Ignaz : int {
    NotStreamed   = 0,
    GoesHome      = 1,
    FollowsPlayer = 2,
    Eats          = 3,
    LiesDown      = 4,
    StaysHome     = 5,
    RunsHome      = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::questmodule::C_Objective* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum janInForrestTimer : int {
    None      = 0,
    TooClose  = 1,
    FarEnough = 2,
    Done      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_DeltaMovementSurroundingDef* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SkirmishControl : int {
    None                = 0,
    FirstBattle         = 1,
    SeminCombatantsDead = 2,
    LateBetrayal        = 3,
    BetrayalSuccess     = 4,
    SeminUnderControl   = 5,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_DummyDebugAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::musicmodule::C_MusicMatrixRow {
    0x38 : Cells   : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::musicmodule::C_MusicMatrixCell>,class std::allocator<class std::shared_ptr<class wh::musicmodule::C_MusicMatrixCell> > > >;
    //Getter: WHGame.dll+0xd69adc
    get  : Address : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::clothing::S_CharacterComponentName>* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<struct wh::rpgmodule::S_SkillLessonLevel,class std::vector>,class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<struct wh::rpgmodule::S_SkillLessonLevel> > {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeItemSetAsideEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8  : DataSource     : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : ValidationMode : enum wh::xgenaimodule::NPCState::E_ValidationMode::Type;
    0x14 : ItemClassId    : class std::optional<struct CryGUID>;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::game::C_LevelSwitchData {
    0x8  : Name                     : class CryStringT<char>;
    0x10 : Video                    : class CryStringT<char>;
    0x18 : TargetLocationEntity     : class CryStringT<char>;
    0x20 : LoadingScreen            : int;
    0x24 : TargetLevelId            : int;
    0x28 : WorldTimeDurationInHours : __int64;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BuryGejza_UntieBody : int {
    None               = 0,
    CantUntieGejzaYet  = 1,
    FindGejza          = 2,
    UntieGejza_Started = 3,
    UntieGejza_Updated = 4,
    GejzaUntied        = 5,
    Failed             = 6,
    Aborted            = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerAndConfiscatedStuff : int {
    None         = 0,
    InMines      = 1,
    OutsideMines = 2,
    StuffTaken   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_PlaceEventData* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_TemplatedNode>* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::shopmodule::S_ShopDBData* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::C_GameplayManager* {
};

//size in bytes: 0x2d0
//pointer dimension: 0
class wh::rpgmodule::C_SoulThreatsTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::rpgmodule::C_SoulPropertyTrigger {
    0x10  : Name                 : class CryStringT<char>;
    0x18  : RuntimeState         : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView            : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive             : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls                : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : Soul                 : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x140 : Tracker              : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;
    0x1d0 : OnAllThreatsActive   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x210 : OnThreatsActive      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x250 : OnAllThreatsInactive : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x290 : OnThreatsInactive    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::entitymodule::S_ButcheringActionParams {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::guimodule::C_UISubtitles : class wh::guimodule::C_UIBase {

    //vtable offset: 0x8
    SetText( string const &, string const &, bool, bool, bool );
    //vtable offset: 0x10
    Clear( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LockBase *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum najdiBandity : int {
    None         = 0,
    Zadano       = 1,
    NalezenoVcas = 2,
    Aborted      = 3,
    Canceled     = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::entitymodule::C_BodyPartData {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingStatesVavak : int {
    StreamedInitial = 0,
    Unstreamed      = 1,
    UnstreamedDebug = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemManipulationData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TreasureHuntBarks : int {
    None     = 0,
    House    = 1,
    Neighbor = 2,
    Soldiers = 3,
    Smell    = 4,
    Meadow   = 5,
    Done     = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::I_DisableRagdollEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum raidLootAmount : int {
    TooLittle    = 0,
    AlmostEnough = 1,
    Enough       = 2,
    Shitloads    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulDerivedStat>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b9d6c0
enum enum wh::framework::E_SaveGameType::Type : unsigned char {
    PermanentSave         = 0,
    AutoSave              = 1,
    ManualSave            = 2,
    QuickSave             = 3,
    Obsolete_NewGame      = 4,
    ExitSave              = 5,
    LevelSwitchSave       = 6,
    LevelSwitchNestedSave = 7,
    CrucialDecisionSave   = 8,
    Last                  = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_SuccessAction* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x90
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_PathFindingRequestFlee : struct wh::xgenaimodule::navigation::S_PathFindingRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_Command* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_GameScriptContext> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum investigateSecret : int {
    none            = 0,
    investigate     = 1,
    investigateFail = 2,
    tellWhatYouKnow = 3,
    investigateMore = 4,
    tellEverything  = 5,
    done            = 6,
    canceled        = 7,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_ConstantPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort, class wh::conceptmodule::C_OutputDataPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;
    //Getter: WHGame.dll+0x256f6bc
    get  : Value : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_ShowActorCommand* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_PutItemInHandAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_DummyDebugAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_SkinElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToHastalAboutHorse : int {
    None                 = 0,
    Started              = 1,
    StartedOutsideFarm   = 2,
    Completed            = 3,
    AbortedQuestFail     = 4,
    AbortedHorseLeftFarm = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZajicAndPechaMigration : int {
    Default             = 0,
    FriendAtCertovka    = 1,
    EnemyAtCertovka     = 2,
    OnlyZajicAtCertovka = 3,
    AtTheCamp           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionIn* {
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionAdditiveAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionAdditiveAnimRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionAdditiveAnimRequest> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum beggarBarboraStreaming : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VomitCleaning : int {
    None                   = 0,
    StreamedAndInteractive = 1,
    Unstreamed             = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MazakStreaming : int {
    StreamDebug    = 0,
    UnstreamDebug  = 1,
    UnstreamCorpse = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7aac8
enum enum wh::entitymodule::E_MatchContext::Type : unsigned char {
    Basic    = 0,
    Advanced = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_AddQuestItem> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_LadderState {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::rpgmodule::C_TimeSamplingCounter<struct wh::rpgmodule::T_WorldTimePolicy> : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SamplingCounter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HungerDespairTalkingGuards : int {
    None     = 0,
    GoTalk   = 1,
    Finished = 2,
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::musicmodule::C_MusicMatrix {
    //Getter: WHGame.dll+0x2e53af4
    get : PlayerAddress : class CryStringT<char>;
    //Getter: WHGame.dll+0x2e53ad4
    get : Playlist      : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoldierGoesToCamp : int {
    None    = 0,
    First   = 1,
    Second  = 2,
    Third   = 3,
    Fourth  = 4,
    Fifth   = 5,
    Sixth   = 6,
    Seventh = 7,
    Eighth  = 8,
    Ninth   = 9,
    Tenth   = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum inspectNewMurder : int {
    None          = 0,
    InspectBody   = 1,
    BodyInspected = 2,
    Failed        = 3,
    Aborted       = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_TraceLevel>* {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::conceptmodule::C_ModuleBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node> {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum streamingGate : int {
    None      = 0,
    Barricade = 1,
    Damaged   = 2,
    Unstream  = 3,
    Broken    = 4,
    After     = 5,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<float> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatWithZajic : int {
    None           = 0,
    Combat         = 1,
    ZajicDefeated  = 2,
    PlayerDefeated = 3,
    Aborted        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeOfDay>* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_UIApseView::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_AssetInterfacePort> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_TrackViewRecorderEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamRack : int {
    None                   = 0,
    Stream                 = 1,
    WaitForFaderOrDistance = 2,
    Unstream               = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::data::S_Port* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::entitymodule::C_ItemReferenceDescriptor : class wh::entitymodule::I_ItemDescriptor, class wh::entitymodule::C_HomogenousItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_AnimChar {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyFeedback,class std::vector> {
};

//size in bytes: 0x318
//pointer dimension: 0
class wh::playermodule::C_RandomEventVariant : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase, class wh::playermodule::C_RandomEventVariantBase {
    0x10  : Name                          : class CryStringT<char>;
    0x18  : RuntimeState                  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView                     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode                 : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace                : class boost::optional<bool>;
    0x60  : Types                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets                        : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes                         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC                   : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView                     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x234 : Weight                        : class std::optional<float>;
    0x260 : IsAbstract                    : class std::optional<bool>;
    0x262 : IsGuaranteed                  : class std::optional<bool>;
    0x23c : DifficultyMean                : class std::optional<class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > >;
    0x244 : DifficultyStandardDeviation   : class std::optional<class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > >;
    0x250 : CooldownOverride              : class std::optional<struct wh::framework::S_TimeSpan>;
    0x278 : ViewRadius                    : class std::optional<float>;
    0x268 : MapTimeout                    : class std::optional<struct wh::framework::S_TimeSpan>;
    0x220 : EventInitiatedFastTravelData  : class std::shared_ptr<struct wh::playermodule::S_RandomEventFastTravelData>;
    0xa0  : OnSpawn                       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe0  : OnDespawn                     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x120 : IsSpawned                     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x160 : RandomEventOption             : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_RandomEventOption::Type>*;
    0x1a0 : RandomEventOptionResult       : class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_RandomEventOptionResult::Type>*;
    0x1e0 : IsEnabled                     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x2c0 : Profile                       : class std::optional<class CryStringT<char> >;
    0x2d0 : DespawnOnTimeskip             : class std::optional<bool>;
    0x2d8 : NpcGroups                     : class std::reference_wrapper<class std::vector<struct wh::playermodule::C_RandomEventVariantBase::S_NpcGroup,class std::allocator<struct wh::playermodule::C_RandomEventVariantBase::S_NpcGroup> > >;
    0x2d2 : NPCGroupsAdditive             : class std::optional<bool>;
    0x2f0 : Tags                          : class std::vector<struct wh::playermodule::S_RandomEventTag,class std::allocator<struct wh::playermodule::S_RandomEventTag> >;
    0x308 : PlayerInitiatedFastTravelData : class std::shared_ptr<struct wh::playermodule::S_RandomEventFastTravelData>;
    0x280 : ActivateCooldown              : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetMaterialsForTutorial : int {
    None                    = 0,
    GetMaterialFromChest    = 1,
    GetMaterial             = 2,
    Completed               = 3,
    Aborted                 = 4,
    AbortedMateriaslInChest = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
const float* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum sermirnaTrespass : int {
    Default      = 0,
    HenryAllowed = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_POIDiscoveryStatusChangedTrigger> {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::entitymodule::C_WeaponClassDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<struct wh::entitymodule::S_WeaponClass>,class std::vector> {
    0x30 : Objects : class std::vector<class std::shared_ptr<struct wh::entitymodule::S_WeaponClass>,class std::allocator<class std::shared_ptr<struct wh::entitymodule::S_WeaponClass> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_ActionIdleRequestImpl : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionIdleRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionIdleRequest>, struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionIdleRequest>, struct wh::entitymodule::S_ActionFullBodyAnimRequestImpl<struct wh::entitymodule::S_ActionIdleRequest> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Length> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::I_Condition {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SvancaraHandler : int {
    None                 = 0,
    EquipWithoutSvancara = 1,
    EquipWithSvancara    = 2,
    UnEquip              = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_SingleMatchResult {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HanusAndPtacekTour : int {
    None                = 0,
    WalkingAndTalking   = 1,
    StandingAndTalking1 = 2,
    StandingAndTalking2 = 3,
    SayingGoodbye       = 4,
    Done                = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GoWithJanToHandover : int {
    None                          = 0,
    TravelWithJanToHandover_Ready = 1,
    TraveledWithJanToHandover     = 2,
    Failed                        = 3,
    Canceled                      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReturnToSvatava : int {
    None                  = 0,
    Active                = 1,
    DoneGirlsAlive        = 2,
    DoneHankaWaitingAtHut = 3,
    DoneHankaGone         = 4,
    Canceled              = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::entitymodule::clothing::S_BloodMaskName {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_AIConceptSignal* {
};

//size in bytes: 0x1
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<struct wh::rpgmodule::S_SkillTeacher> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_Stash> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TroskyPassageDoorState : int {
    WaitingForStream   = 0,
    UnavailableToOpen  = 1,
    AvailableToOpen    = 2,
    Unlocked           = 3,
    ExclAreaUnstreamed = 4,
};

//size in bytes: 0x168
//pointer dimension: 0
class wh::combatmodule::C_TrackViewRecorderEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : SmartObjects : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > >*;
    0xd0  : SequenceName : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x110 : LinkFilter   : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulDerivedStat> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xd0  : DerivedStat  : class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulDerivedStat>*;
    0x110 : Operator     : class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_Operator>*;
    0x150 : Value        : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : OnMatch      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1d0 : OnUnmatch    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7ae88
enum enum wh::framework::E_TimeType::Type : int {
    WorldTime = 0,
    GameTime  = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a6b8
enum enum wh::rpgmodule::E_AngrinessType::Type : unsigned char {
    Violence = 0,
    Material = 1,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemsToReturnEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8 : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithGuardAtGate : int {
    None                 = 0,
    Started              = 1,
    Completed            = 2,
    DeliveredFoodForPoor = 3,
    DeliveredOwnFood     = 4,
    Aborted              = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChallengeSeminFailable : int {
    None       = 0,
    InProgress = 1,
    Won        = 2,
    Lose       = 3,
    Canceled   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum leceniSuchdol : int {
    None            = 0,
    Diagnose        = 1,
    BasicHealing    = 2,
    AdvancedHealing = 3,
    BasicCure       = 4,
    AdvancedCure    = 5,
    WrongCure       = 6,
    Killed          = 7,
    WifeKilled      = 8,
    Expired         = 9,
    NoDiagnose      = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmbushCutscene : int {
    None                  = 0,
    NoBoomVariantFinished = 1,
    BoomVariantFinished   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::combatmodule::E_CombatTutorialDomain::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitiazerChangeBehaviorState* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::databasemodule::C_ObjectDatabaseBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SearchTunnelsWithSamuel : int {
    None                = 0,
    SpeakWithSamuel     = 1,
    EnterTunnels        = 2,
    FindThePlace        = 3,
    MarkedTheEnd        = 4,
    ReturnedToRuthardka = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringViktorkaHome : int {
    None                         = 0,
    PlayerDoesntKnowCamp         = 1,
    PlayerKnowsCamp              = 2,
    PlayerLostAllTracks          = 3,
    FoundViktorka                = 4,
    ViktorkaSolved               = 5,
    FoundViktorkaDeadBody        = 6,
    ViktorkaDied                 = 7,
    PlayerReachedPointOfNoReturn = 8,
    HenryAttackedViktorka        = 9,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::combatmodule::C_BattleTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SumCounter<double>* {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::entitymodule::C_ActorActionTenseCircumstance : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemReferenceDescriptor* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SkirmishEventType::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::C_SaveGameDescription* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ModuleBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LetterQuality : int {
    None       = 0,
    Diplomatic = 1,
    Aggresive  = 2,
    Verbatim   = 3,
    Confused   = 4,
    Cartoon    = 5,
    Scribbled  = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bc8958
enum enum wh::combatmodule::E_CombatTutorialFeature::Type : unsigned char {
    PlayerBlock                                 = 0,
    PlayerPerfectBlock                          = 1,
    PlayerDodge                                 = 2,
    PlayerHeavyAttack                           = 3,
    PlayerSpecialAttack                         = 4,
    PlayerRiposte                               = 5,
    PlayerMovement                              = 6,
    PlayerClinchGuard                           = 7,
    PlayerClinchAction                          = 8,
    PlayerDrawHolsterWeapon                     = 9,
    PlayerCombatZoneUp                          = 10,
    PlayerCombatZoneDown                        = 11,
    PlayerCombatZoneLeft                        = 12,
    PlayerCombatZoneRight                       = 13,
    TutorCombatMove                             = 14,
    TutorFightState                             = 15,
    TutorAttackAutomation                       = 16,
    TutorDefenseAutomation                      = 17,
    TutorGuardAutomation                        = 18,
    TutorWeaponAutomation                       = 19,
    TutorZoneAutomation                         = 20,
    TutorClinchAutoBackoff                      = 21,
    TutorDefenseForceNoBlock                    = 22,
    TutorDefenseForceNormalBlock                = 23,
    TutorDefenseForcePerfectBlock               = 24,
    TutorDefenseForcePerfectBlockOnOpposingZone = 25,
    TutorDefenseForceMasterStrike               = 26,
    TutorComboForceNoCombo                      = 27,
    TutorComboForceNaturalCombo                 = 28,
    TutorComboForceCombo                        = 29,
    TutorSlowAttackRate                         = 30,
    TutorCombatZoneUp                           = 31,
    TutorCombatZoneDown                         = 32,
    TutorCombatZoneLeft                         = 33,
    TutorCombatZoneRight                        = 34,
    CombatUiRosetta                             = 35,
    AllCombos                                   = 36,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b50100
enum enum CGameRules::EHitType::Type : unsigned char {
    Invalid       = 0,
    Melee         = 1,
    MeleeStealth  = 2,
    Collision     = 3,
    Punish        = 4,
    Fall          = 5,
    Bullet        = 6,
    WeaponDestroy = 7,
    Decoy         = 8,
    Stone         = 9,
    Shock         = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FurnishingControl : int {
    None            = 0,
    DefinitelyClean = 1,
    partyMess       = 2,
    Devastation     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CsabaFight : int {
    BeforeFight     = 0,
    WaitingForFight = 1,
    Fight           = 2,
    Done            = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_RandomEventOptionResultAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AnimDoorAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeerStreaming : int {
    FrameWithoutDeer_BeforeQuest = 0,
    FrameWithDeer                = 1,
    FrameWithoutDeer_AfterQuest  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_LinkEffectBase* {
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::C_ActorActionButchering : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> >, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_ParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > >, class wh::entitymodule::C_ActorParamAction<struct wh::entitymodule::S_ButcheringActionParams,class wh::entitymodule::I_ActorAction> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PockejNaVyhlaseni : int {
    None              = 0,
    PockejNaVyhlaseni = 1,
    Done              = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObjectiveUpdateStart : int {
    None       = 0,
    Started    = 1,
    SilentDone = 2,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::game::C_ExtraRewardsDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::game::C_ExtraRewardData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::game::C_ExtraRewardData,class std::allocator<class wh::game::C_ExtraRewardData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp1 : int {
    None                = 0,
    Accepted            = 1,
    UpdatedOnStashInfo  = 2,
    UpdatedOnFisherHint = 3,
    UpdatedOnCombat     = 4,
    UpdatedOnCamp       = 5,
    PoacherKilled       = 6,
    DoneOnArrest        = 7,
    DoneOnEscape        = 8,
    Failed              = 9,
    Canceled            = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp3 : int {
    None      = 0,
    Accept    = 1,
    Completed = 2,
    Failed    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_EntityModule* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::conceptmodule::C_ConceptPath,class std::allocator<class wh::conceptmodule::C_ConceptPath> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::conceptmodule::C_ConceptPath,class std::allocator<class wh::conceptmodule::C_ConceptPath> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekHorseEquip : int {
    NoOverride                   = 0,
    NakedOverride                = 1,
    ZachranaPtackaEscapeOverride = 2,
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::guimodule::C_UIFlashPickpocketingItem : class wh::guimodule::C_UIFlashObject {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : IconId          : class CryStringT<char>;
    0x20 : StealTime       : float;
    0x24 : SlotId          : unsigned int;
    0x28 : Uncovered       : bool;
    0x2c : Health          : float;
    0x30 : ItemHealthState : unsigned int;
    0x34 : Weight          : float;
    0x38 : Category        : class CryStringT<char>;
    0x40 : Price           : float;
    0x44 : Amount          : unsigned int;
    0x48 : MainStat        : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestAvailabilty_questGiverTracking : int {
    None                        = 0,
    Available_noMarker          = 1,
    Available_questGiverMarker  = 2,
    Available_questGiverDead    = 3,
    Unavailable                 = 4,
    Unavailable_markerWasActive = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::combatmodule::C_CombatFragmentMetaData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinalBathHouseOwner : int {
    Bara        = 0,
    BackupOwner = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b1c2c8
enum enum wh::guimodule::E_CustomTextLayout::Type : unsigned char {
    Center       = 0,
    CenterBottom = 1,
    TopRight     = 2,
    CenterBig    = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Function> > {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::I_CallbackEventConsumer {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ImmortalityNPC : int {
    None     = 0,
    Immortal = 1,
    Mortal   = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_SkirmishStatistics *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ClearRoles* {
};

//size in bytes: 0x1b0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_StashManipulationAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : DataSource           : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashCharacterWeaponStat : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : children : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashCharacterWeaponStatSub>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashCharacterWeaponStatSub> > >;
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_SchedulerDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::xgenaimodule::scheduler::C_SmartHub,class std::vector> {
    0x30 : Hubs  : class std::reference_wrapper<class std::vector<class wh::xgenaimodule::scheduler::C_SmartHub,class std::allocator<class wh::xgenaimodule::scheduler::C_SmartHub> > >;
    0x78 : Links : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::scheduler::S_SchedulerLink,class std::allocator<struct wh::xgenaimodule::scheduler::S_SchedulerLink> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::environmentmodule::S_WeatherProfileData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProfilDer : int {
    NekopatelneDiry = 0,
    KopatelneDiry   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SmartEntityDatabase* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::conceptmodule::C_Resource {

    //vtable offset: 0x8
    OnBeforeSerialization( );
    //vtable offset: 0x8
    OnAfterSerialization( );
    //vtable offset: 0x8
    OnBeforeDeserialization( );
    //vtable offset: 0x8
    OnAfterDeserialization( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithBailif : int {
    None           = 0,
    Started        = 1,
    Completed      = 2,
    KilledBailif   = 3,
    KilledVillager = 4,
    Canceled       = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_CarryItemSource* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ViktorkaFocusCamera : int {
    CanBeEnabled = 0,
    Enabled      = 1,
    Done         = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4568
enum enum wh::dialogmodule::data::E_CommandTimingMode : unsigned char {
    Auto     = 0,
    Relative = 1,
    Absolute = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_AngrinessFlagDefinitionID {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChaseProgress : int {
    None       = 0,
    Initiating = 1,
    Active     = 2,
    Done       = 3,
    Aborted    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VillageBurning : int {
    None                              = 0,
    WaitingForFader_playerLeftFight   = 1,
    WaitingForFader_playerJoinedFight = 2,
    VillageIsBurned                   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemClassAlias* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_LockBase* {
};

//size in bytes: 0xf0
//pointer dimension: 0
struct wh::entitymodule::S_ActionSlavedAnimRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest {
};

//size in bytes: 0x8
//pointer dimension: 0
struct ISkin {
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::game::C_PlatformActivityProxy {
    0x0 : Id : class CryStringT<char>;
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::playermodule::C_BlacksmithTemperature {
    0x8  : Temperature : float;
    0xc  : Color       : struct Color_tpl<unsigned char>;
    0x10 : Intensity   : float;
    0x14 : QualityLoss : float;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3993048
enum enum wh::dialogmodule::data::E_SkillCheckResult::Type : unsigned char {
    None            = 0,
    Fail            = 1,
    MajorFail       = 2,
    CriticalFail    = 3,
    Success         = 4,
    MajorSuccess    = 5,
    CriticalSuccess = 6,
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingMaterial {
    0x8  : Name              : class CryStringT<char>;
    0x10 : TextureId         : class tiny::optional<int,-2147483648,0>;
    0x14 : Hue               : class tiny::optional<float,0,0>;
    0x18 : Saturation        : class tiny::optional<float,0,0>;
    0x1c : Brightness        : class tiny::optional<float,0,0>;
    0x50 : Specular          : class std::optional<struct Color_tpl<float> >;
    0x20 : Smoothness        : class tiny::optional<int,-2147483648,0>;
    0x24 : TileU             : class tiny::optional<float,0,0>;
    0x28 : TileV             : class tiny::optional<float,0,0>;
    0x2c : OffsetU           : class tiny::optional<float,0,0>;
    0x30 : OffsetV           : class tiny::optional<float,0,0>;
    0x34 : RotateUV          : class tiny::optional<float,0,0>;
    0x38 : AlphaTest         : class tiny::optional<int,-2147483648,0>;
    0x64 : GrimeDiffuse      : class std::optional<struct Color_tpl<float> >;
    0x78 : GrimeSpecular     : class std::optional<struct Color_tpl<float> >;
    0x3c : GrimeGloss        : class tiny::optional<float,0,0>;
    0x4c : ScratchTextureId  : class tiny::optional<int,-2147483648,0>;
    0x40 : ScratchHue        : class tiny::optional<float,0,0>;
    0x44 : ScratchSaturation : class tiny::optional<float,0,0>;
    0x48 : ScratchBrightness : class tiny::optional<float,0,0>;
    0x90 : DerivedMaterials  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::I_Port* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FatherStreaming : int {
    UnstreamedInitial = 0,
    StreamedDebug     = 1,
    UnstreamedDebug   = 2,
    StreamedFinale    = 3,
    UnstreamedFinale  = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LeaveLevel : int {
    None         = 0,
    LeavingLevel = 1,
    Unloaded     = 2,
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceTransitionDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_UnstanceTransitionData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::NPCState::S_UnstanceTransitionData,class std::allocator<struct wh::xgenaimodule::NPCState::S_UnstanceTransitionData> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetFoodForPoor : int {
    None                    = 0,
    Started                 = 1,
    GotFoodFromCellar       = 2,
    FoodDelivered           = 3,
    FoodDeliveredAnotherWay = 4,
    Aborted                 = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsWeapon : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemCategoryDescriptor* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BertaPreset : int {
    Default = 0,
    Dying   = 1,
    Dead    = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestovyPredmet : int {
    None    = 0,
    VTruhle = 1,
    UHrace  = 2,
    Gone    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StulecNaZacatkuQuestu : int {
    None  = 0,
    Alive = 1,
    Dead  = 2,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemSetAsideConditionGenerated : class wh::xgenaimodule::NPCState::I_Condition {
    0x8  : DataSource                       : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : ItemRuntimeInitSource            : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x30 : SlotRuntimeInitSource            : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x50 : Hand                             : enum wh::xgenaimodule::E_HandType::Type;
    0x54 : AllowItemInitFromHand            : bool;
    0x55 : AllowItemInitFromDataSourceState : bool;
    0x56 : AllowFindingSourceSlotOnly       : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoubleSuccessPodkovy : int {
    None      = 0,
    Cekani    = 1,
    Promluvit = 2,
    Odmena    = 3,
    BezOdmeny = 4,
    Canceled  = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GameOver : int {
    None     = 0,
    Active   = 1,
    Barks    = 2,
    GameOver = 3,
    Done     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressBaba : int {
    None                 = 0,
    UdelejOhnisteNaPanne = 1,
    BabaHotova           = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_MemberFunction> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WallStateAsiDoVezi : int {
    WallDefault            = 0,
    WallBeingDisassembled  = 1,
    DefaultWallUnstream    = 2,
    DisassembledWallStream = 3,
    WallDisassembled       = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHorseInspect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NechutaCumansProgress : int {
    None       = 0,
    Active     = 1,
    DoneWolves = 2,
    DoneCumans = 3,
    Aborted    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_PlayTimeCounter* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::game::C_LevelSwitchDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::game::C_LevelSwitchData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::game::C_LevelSwitchData,class std::allocator<class wh::game::C_LevelSwitchData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::conceptmodule::definition::I_NodeDefinition::S_PropertyDef {
    0x8  : Name        : class CryStringT<char>;
    0x10 : Value       : class rttr::variant;
    0x28 : UserDefined : bool;
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::entitymodule::S_ActionFullBodyAnimRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest {
};

//size in bytes: 0x2
//pointer dimension: 0
wchar_t {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_AnimationCommand : class wh::dialogmodule::data::C_Command {
    0x8 : Role            : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get : Delay           : float;
    0xe : TimingMode      : enum wh::dialogmodule::data::E_CommandTimingMode;
    //Getter: WHGame.dll+0x13f3434
    get : FragmentId      : class CryStringT<char>;
    //Getter: WHGame.dll+0x19b5470
    get : GUID            : struct CryGUID;
    //Getter: WHGame.dll+0x1eddb80
    get : DesiredDuration : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HankaDeathState : int {
    None              = 0,
    AliveAndStreamed  = 1,
    DeadAndStreamed   = 2,
    DeadAndUnstreamed = 3,
    Aborted           = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ArrestingMurderer : int {
    None    = 0,
    Started = 1,
    Fight   = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RecordingStationSouth : int {
    None             = 0,
    WaitForStreamed  = 1,
    MountWeaponSetup = 2,
    Recording        = 3,
    Done             = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChatTour : int {
    None         = 0,
    ChatStarted  = 1,
    ChatFinished = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InspectingGejzasBody : int {
    None             = 0,
    CanBeInspected   = 1,
    HasBeenInspected = 2,
    Aborted          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleSoundController : int {
    None            = 0,
    AttackStarted   = 1,
    FirstAssault    = 2,
    FullScaleAttack = 3,
    BattleEnded     = 4,
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_SetGameContextPreset : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_GameScriptContextPreset> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Preset       : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContextPreset>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x208
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimRequestImpl : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimRequest> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActiontRagdoll* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AskAboutMosquitoInInn : int {
    None                         = 0,
    StartedFromHans              = 1,
    UpdatedFromInnkeeperInBylany = 2,
    SpokeWithInnkeeperInPritoky  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PavelStream : int {
    StreamingProgress = 0,
    Streamed          = 1,
    Unstreamed        = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ChangeHandContentEffectBase* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::combatmodule::C_DeadBodyRegistrationEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InformaceOPodvodu : int {
    None            = 0,
    MluvilSBanditou = 1,
    NaselMapu       = 2,
    VykopalDiry     = 3,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_StanceElementRequired : class wh::xgenaimodule::NPCState::I_Element, class wh::xgenaimodule::NPCState::C_StanceElement {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum chasingJenik : int {
    None        = 0,
    Active      = 1,
    ChasingPath = 2,
    ChasingSoul = 3,
    Done        = 4,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::game::C_LevelSwitchData,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChatPlayerOslava : int {
    vypnuto               = 0,
    predSoubojemActive    = 1,
    VyhlaseniVitezeActive = 2,
    probihaAnimace        = 3,
    done                  = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_BlacksmithTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_EntityScriptContext>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum konfrontujThomlina : int {
    None               = 0,
    KonfrontujThomlina = 1,
    Hotovo             = 2,
    Fail               = 3,
    Aborted            = 4,
    Canceled           = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UnstreamAfterTimeAndDistance : int {
    None       = 0,
    Timer      = 1,
    Distance   = 2,
    Unstreamed = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a29e60
enum enum wh::conceptmodule::E_Operator : int {
    Equals        = 0,
    NotEquals     = 1,
    Greater       = 2,
    GreaterEquals = 3,
    Less          = 4,
    LessEquals    = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionBelongsToInventory : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetFridusRing : int {
    None        = 0,
    Active      = 1,
    Update      = 2,
    Completed   = 3,
    Canceled    = 4,
    Confiscated = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RuthardGuard : int {
    None    = 0,
    Guard_1 = 1,
    Guard_2 = 2,
    Guard_3 = 3,
    Guard_4 = 4,
    Guard_5 = 5,
    Guard_6 = 6,
    Guard_7 = 7,
};

//size in bytes: 0x218
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionInStatic : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceAction, class wh::xgenaimodule::NPCState::C_UnstanceActionIn {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1a8 : DataSource                         : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x1b0 : Unstance                           : struct wh::entitymodule::S_Unstance;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PoachersSearch : int {
    None         = 0,
    SearchWide   = 1,
    SearchNarrow = 2,
    Done         = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::C_PerkReward : class wh::rpgmodule::I_Reward {
    0x8 : Perk : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ItemsToReturnCondition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TriggerSequence* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionManipulationType : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource       : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate           : bool;
    0x10 : Hand             : enum wh::xgenaimodule::E_HandType::Type;
    0x18 : ManipulationType : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AlderStreaming : int {
    StreamDebug                       = 0,
    UnstreamDebug                     = 1,
    StreamRatbor2                     = 2,
    UnstreamRatbor2                   = 3,
    StreamedPrepadeniVlasskehoDvora   = 4,
    UnstreamedPrepadeniVlasskehoDvora = 5,
    StreamedErik                      = 6,
    UnstreamErik                      = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JdiDoRohu : int {
    None             = 0,
    JdiDoRohuOhradky = 1,
    ZacniBoj         = 2,
    Canceled         = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::soundmodule::C_AudioSustainedEffect> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_BuffExclusivityOperation {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_PauseWorldTime> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateBase<enum wh::playermodule::E_SaveGameWithNotificationState::Type> > {
};

//size in bytes: 0x248
//pointer dimension: 0
class wh::xgenaimodule::C_AddInterruptConceptNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : Activate     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x88  : NPC          : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xc8  : Behavior     : class wh::conceptmodule::C_TypedPortRef<class CryStringT<char> >*;
    0x108 : SmartEntity  : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartEntity *>*;
    0x148 : Priority     : class wh::conceptmodule::C_TypedPortRef<unsigned char>*;
    0x188 : Urgency      : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_Urgency::Type>*;
    0x1c8 : Aliveness    : class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::scheduler::E_Aliveness::Type>*;
    0x208 : Privileged   : class wh::conceptmodule::C_TypedPortRef<bool>*;
    //Getter: WHGame.dll+0x31b3040
    get   : Signature    : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::scheduler::S_SchedulerLinkParameters {
    0x0  : TimeOfDayStart                 : unsigned short;
    0x2  : TimeOfDayEnd                   : unsigned short;
    //Getter: WHGame.dll+0x6db9e4
    get  : BehaviorName                   : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x19f8c90
    get  : AllowedGenders                 : unsigned int;
    //Getter: WHGame.dll+0x19f8cc0
    get  : OneTimeUse                     : bool;
    //Getter: WHGame.dll+0x19f8cb0
    get  : HaltOnInvalid                  : bool;
    //Getter: WHGame.dll+0x19f8ca0
    get  : BehaviorOverride               : bool;
    0x1e : Priority                       : unsigned char;
    //Getter: WHGame.dll+0x3328040
    get  : Urgency                        : class boost::optional<enum wh::entitymodule::E_Urgency::Type>;
    //Getter: WHGame.dll+0x3328058
    get  : Weather                        : class boost::optional<enum wh::xgenaimodule::scheduler::E_Weather::Type>;
    //Getter: WHGame.dll+0x19f8cd0
    get  : Privileged                     : bool;
    //Getter: WHGame.dll+0xe46ce8
    get  : RequiredRole                   : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0xe46d24
    get  : ProvidedRole                   : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x3328004
    get  : InvertRoleRequirement          : class boost::optional<bool>;
    //Getter: WHGame.dll+0x3327fe4
    get  : RoleRequirementConsidersStatus : class boost::optional<bool>;
    //Getter: WHGame.dll+0xe46d5c
    get  : LinkTag                        : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x3327f50
    get  : InvertLinkTagRequirement       : class boost::optional<bool>;
    //Getter: WHGame.dll+0x3327ee4
    get  : InvertAngriness                : class boost::optional<bool>;
    0x1f : Angriness                      : unsigned char;
    //Getter: WHGame.dll+0x3328028
    get  : Sequence                       : class boost::optional<unsigned char>;
    //Getter: WHGame.dll+0x5ef6c0
    get  : BuffTag                        : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x3327f00
    get  : InvertBuffTagRequirement       : class boost::optional<bool>;
    0xc  : Attraction                     : unsigned short;
    0xe  : Repulsion                      : unsigned short;
    0x10 : GlobalRepulsion                : unsigned short;
    //Getter: WHGame.dll+0x3327f8c
    get  : MinNPC                         : class boost::optional<unsigned char>;
    //Getter: WHGame.dll+0x3327f74
    get  : MaxNPC                         : class boost::optional<unsigned char>;
    0x12 : TimeVariation                  : unsigned short;
    //Getter: WHGame.dll+0xf25edc
    get  : SocialClass                    : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x308e854
    get  : AILinkHome                     : class boost::optional<bool>;
    //Getter: WHGame.dll+0x3327ecc
    get  : Aliveness                      : class boost::optional<enum wh::xgenaimodule::scheduler::E_Aliveness::Type>;
    //Getter: WHGame.dll+0x3327f3c
    get  : IgnoreCorpse                   : class boost::optional<bool>;
    //Getter: WHGame.dll+0x3327f20
    get  : RequireFastForward             : class boost::optional<bool>;
};

//size in bytes: 0x8
//pointer dimension: 1
const wchar_t* {
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FastForwardSyncAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x148
//pointer dimension: 0
class wh::conceptmodule::C_Assert : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48  : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc8  : Value        : class wh::conceptmodule::C_PortRef*;
    0x108 : Equals       : class wh::conceptmodule::C_PortRef*;
    0x88  : OnExec       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ChangeEquipmentElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::playermodule::S_GameOverId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BohutaTourWait : int {
    None = 0,
    Tour = 1,
    Wait = 2,
    Done = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrialFight : int {
    None             = 0,
    StepanFight      = 1,
    GrozavFight      = 2,
    Done             = 3,
    PlayerUnconcious = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KaterinasHorse : int {
    None         = 0,
    SiegeStarted = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrialogMikesKozlik : int {
    None           = 0,
    Profile        = 1,
    Certovka       = 2,
    CertovkaNoChat = 3,
    Suchdol        = 4,
    Done           = 5,
    Canceled       = 6,
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::entitymodule::C_AnimDoor {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DestroyTheCamp : int {
    None        = 0,
    Started     = 1,
    TlamaIsDead = 2,
    LetTlamaGo  = 3,
    Fail        = 4,
    Aborted     = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LocationOfMagicArrow : int {
    None     = 0,
    Jindrich = 1,
    Zajic    = 2,
    Pecha    = 3,
    Used     = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bdfe68
enum enum wh::dialogmodule::data::E_DecisionPriority::Type : unsigned char {
    MainQuestAssignment  = 0,
    MainQuestSubmission  = 1,
    MainQuestAdditionals = 2,
    SideQuestAssignment  = 3,
    SideQuestSubmission  = 4,
    SideQuestAdditionals = 5,
    Default              = 6,
    General              = 7,
    QuestGiver           = 8,
    SkillTraining        = 9,
    Shop                 = 10,
    Repair               = 11,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BohutaRozaCekani : int {
    None   = 0,
    Dialog = 1,
    Cekani = 2,
    Done   = 3,
};

//size in bytes: 0x2
//pointer dimension: 0
class boost::optional<enum wh::xgenaimodule::E_VariableRequirementType::Type> {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_PredefinedPathAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarelNesePytalQuest : int {
    None     = 0,
    Active   = 1,
    Inactive = 2,
    Done     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomozStrazi : int {
    None              = 0,
    PomozStrazi       = 1,
    TovarisiJsouMrtvi = 2,
    Canceled          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum ingameDialogType : int {
    Chat = 0,
    Bark = 1,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_Operator> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CollectHealingItems : int {
    None             = 0,
    GetItems_Started = 1,
    GetItems_Updated = 2,
    CollectedItems   = 3,
    Aborted          = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::C_InventoryPreset::E_GeneratorMode {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasContext* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamKomar : int {
    None            = 0,
    WithCS          = 1,
    WithCS_shot     = 2,
    WithoutCS       = 3,
    DoneCS          = 4,
    DoneWithCS_shot = 5,
    DoneWithoutCS   = 6,
};

//size in bytes: 0x10
//pointer dimension: 0
class boost::optional<unsigned __int64> {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::guimodule::C_SkipTimeCutscene : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PavlenaDaycycleAfterSaved : int {
    None     = 0,
    GoHome   = 1,
    Sleeping = 2,
    Wash     = 3,
    Finished = 4,
};

//size in bytes: 0x14
//pointer dimension: 0
struct wh::S_DeltaMovementSpeedParamsSubRange {
    0x0  : InputMin            : float;
    0x4  : InputMax            : float;
    0x8  : PseudoSpeedSlowDown : int;
    0xc  : TargetThrottleMin   : float;
    0x10 : TargetThrottleMax   : float;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::musicmodule::C_AddressKeyword {
    //Getter: WHGame.dll+0x2e40680
    get  : Name         : class CryStringT<char>;
    0x10 : Weight       : int;
    //Getter: WHGame.dll+0x2e40658
    get  : LabelInLevel : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a11d0
    get  : Toggle       : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_HomogenousItemDescriptor* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::conceptmodule::C_LinkProxyAssetResolver : class wh::conceptmodule::I_LinkAssetResolver, class wh::conceptmodule::I_ConceptScopeHelper {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum movementType : int {
    FollowPlayer = 0,
    TurnBody     = 1,
    NoMovement   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressSermiri : int {
    None     = 0,
    Active   = 1,
    Updated  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NoMoreCumansInTroskoviceObjective : int {
    None           = 0,
    DealWithCumans = 1,
    KillCumans     = 2,
    CumansAreDead  = 3,
    CumansAreDrunk = 4,
    Aborted        = 5,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct Vec2_tpl<float> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JansCompanyStayingInTavern : int {
    None            = 0,
    StayingInTavern = 1,
    WaitingToUnload = 2,
    LeftTavern      = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::game::C_PlatformActivityProxy* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VykuchCastle : int {
    StreamedInitial          = 0,
    UnstreamedZachranaPtacka = 1,
    StreamedZachranaPtacka   = 2,
    UnstreamedUtokNaMalesov  = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_NonInteractiveLedgeTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StaticInstancePlaceholder> {
};

//size in bytes: 0xc8
//pointer dimension: 0
struct wh::entitymodule::S_DivisibleItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
};

//size in bytes: 0xf0
//pointer dimension: 0
class wh::combatmodule::C_DeadBodyRegistrationEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : SmartObjects : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_SmartObject *,class std::allocator<class wh::xgenaimodule::C_SmartObject *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b64088
enum enum wh::guimodule::E_FaderState::Type : unsigned char {
    FadedIn   = 0,
    FadingOut = 1,
    FadedOut  = 2,
    FadingIn  = 3,
};

//size in bytes: 0xca0
//pointer dimension: 0
class wh::guimodule::C_UIItemTransfer : class wh::guimodule::C_UIBase, class wh::framework::I_UIItemTransfer {
};

//size in bytes: 0x8
//pointer dimension: 1
double* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_POIDiscoveryStatusChangedTrigger* {
};

//size in bytes: 0x1a0
//pointer dimension: 0
class wh::xgenaimodule::C_SmartObject {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum steal : int {
    None      = 0,
    Steal     = 1,
    Completed = 2,
    Aborted   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum playerGroupFight : int {
    None            = 0,
    WeaponSetup     = 1,
    FirstCourtyard  = 2,
    MoveToSecond    = 3,
    SecondCourtyard = 4,
    Done            = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::environmentmodule::C_MoonEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectHeal* {
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::conceptmodule::E_ConceptFunctionType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TellJanWhatYouKnow : int {
    None                                       = 0,
    ReportToJan                                = 1,
    DidntFindPetr                              = 2,
    ToldTruthAboutPetr                         = 3,
    ToldAboutPetrAndLaszlosPlan                = 4,
    LiedAboutPetr                              = 5,
    CameCleanAboutPetr                         = 6,
    AlreadyReportedPetrsDeathBeforeNegotiation = 7,
    Failed                                     = 8,
    DisagreedToHelpJan                         = 9,
    Canceled                                   = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum achievement : int {
    unknown                = 0,
    sweetDreams            = 1,
    thatWasMyFavouritePair = 2,
    collector              = 3,
    closeOne               = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BeruskaUrge : int {
    None                 = 0,
    WaitingForPerception = 1,
    Urging               = 2,
    Done                 = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimActionQueryData* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_FacialMoodCommand : class wh::dialogmodule::data::C_Command {
    0x8  : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay      : float;
    0xe  : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : FacialMood : class CryStringT<char>;
};

//size in bytes: 0x148
//pointer dimension: 0
class wh::conceptmodule::C_Trace : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get   : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48  : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc8  : Value        : class wh::conceptmodule::C_PortRef*;
    0x88  : OnExec       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x108 : Level        : class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_TraceLevel>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SmrtiHledaniSpravedlnosti : int {
    None          = 0,
    PavelZemrel   = 1,
    HejtmanZemrel = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
__int64 {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DialogBetweenSoldiers : int {
    None          = 0,
    WaitForPlayer = 1,
    Dialog        = 2,
    AfterDialog   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatAtRuthardka : int {
    None   = 0,
    Wait   = 1,
    Attack = 2,
    Done   = 3,
};

//size in bytes: 0xe0
//pointer dimension: 0
struct wh::entitymodule::S_ConsumableItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
    0xc8 : BuffDefinitionId               : struct CryGUID;
    0xd8 : UiSound                        : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3f78
enum enum wh::playermodule::E_OutfitId::Type : unsigned char {
    A = 0,
    B = 1,
    C = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::animationmodule::JointPoseMorphData::S_Pose* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c14f18
enum enum wh::conceptmodule::E_HibernateStability::Type : unsigned char {
    KeepAll        = 0,
    KeepPersistent = 1,
    RemoveAll      = 2,
    SameAsParent   = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::playermodule::C_BlacksmithSong {
    //Getter: WHGame.dll+0x19a11e0
    get  : Id     : class CryStringT<char>;
    0x18 : Tempos : class std::vector<class wh::playermodule::C_BlacksmithTempo,class std::allocator<class wh::playermodule::C_BlacksmithTempo> >;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a7a8
enum enum wh::playermodule::E_PlayerUIMapCharacter::Type : unsigned char {
    Henry  = 0,
    Bohuta = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringConcubineToTheWeding : int {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AverageCounter<float>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Doptavani : int {
    None                       = 0,
    hledejKutnaHora            = 1,
    ZeptejSeObecnychObchodniku = 2,
    ZeptejSePrekupnika         = 3,
    ZeptejSeKnihare            = 4,
    ZeptejSeSevcu              = 5,
    ZeptejSeSevce              = 6,
    NecoSePosralo              = 7,
    Completed                  = 8,
    Aborted                    = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamProfilesHandling_DeferredUnstreaming : int {
    Streaming           = 0,
    Loaded              = 1,
    DeferredUnstreaming = 2,
    Unstreaming         = 3,
    Unloaded            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::entitymodule::clothing::C_ClothingHidingGroup* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekHorseOwner : int {
    Zavis = 0,
    Jezek = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LeaveAreaCheck : int {
    None                      = 0,
    CheckingPlayerLeavingArea = 1,
    PlayerLeft                = 2,
    Done                      = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::guimodule::I_Cutscene>,class std::vector> {
};

//size in bytes: 0x1
//pointer dimension: 0
enum wh::entitymodule::E_ActorMountState::Type {
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::entitymodule::C_LockTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : LockBase     : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LockBase *>*;
    0x100 : OnLocked     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnUnlocked   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : OnLockpicked : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Advantage : int {
    None            = 0,
    ErikAdvantage   = 1,
    PlayerAdvantage = 2,
    Done            = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_LedgeObjectAsset* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartMoveBlocker {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::rpgmodule::C_TimeCounter<struct wh::rpgmodule::T_GameTimePolicy> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_UseItemTrigger* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::rpgmodule::C_SumCounter<int> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudBubbles* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab46a8
enum enum wh::conceptmodule::E_NodeSearchMode::Type : unsigned char {
    NonRecursive = 0,
    BFS          = 1,
    DFS          = 2,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::dialogmodule::data::C_Command {
    0x8 : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get : Delay      : float;
    0xe : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_ExistingQuestItem : struct wh::entitymodule::S_QuestItemInfo {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetGameContextPreset> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_CombatActorStateId {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::combatmodule::S_BattleSituation* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_ClashPriority {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RewardAfterFightWithMiners : int {
    None               = 0,
    GetReward          = 1,
    RewardAquired      = 2,
    MarkoltIsDead      = 3,
    BlackmailingFailed = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestCheating : int {
    None                     = 0,
    PlayerCheatedDuringFight = 1,
    PlayerDidCrime           = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemTransformation* {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_EffectObjectSource {
    0x0 : LinkName    : class CryStringT<char>;
    0x8 : EventSource : struct wh::xgenaimodule::NPCState::S_EffectObjectEventSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SmugglersDen : int {
    WaitingForPlayer    = 0,
    Fight               = 1,
    FoughtPlayerAndWon  = 2,
    FoughtPlayerAndLost = 3,
    SmugglerDied        = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_MonologByMetaroleEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation, class wh::xgenaimodule::C_MonologEventImplementation {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::framework::C_AssociativeContainersExample {
    0x8  : StdMapStringToInt          : class std::reference_wrapper<class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,int,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,int> > > >;
    0x18 : StdUnorderedMapStringToInt : class std::reference_wrapper<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,int,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,int> > > >;
    0x58 : BoostFlatMapStringToInt    : class std::reference_wrapper<class boost::container::flat_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,int,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StalkerSearching : int {
    None              = 0,
    LookingForShoe    = 1,
    FoundShoe         = 2,
    StalkerIdentified = 3,
    Aborted           = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatusMlada : int {
    StreamedInitial                = 0,
    UnstreamedDebug                = 1,
    UnstreamedOblehani             = 2,
    UnstreamedAfterPointOfNoReturn = 3,
};

//size in bytes: 0x50
//pointer dimension: 0
struct wh::entitymodule::clothing::C_UberlodDatabase::S_GenderaceUberlodData {
    0x0  : UberlodSources : class boost::container::flat_map<struct wh::entitymodule::S_EquipmentPart const *,class std::vector<class wh::entitymodule::clothing::C_Component const *,class std::allocator<class wh::entitymodule::clothing::C_Component const *> >,struct std::less<struct wh::entitymodule::S_EquipmentPart const *>,void>;
    0x18 : DefaultUberlod : struct wh::entitymodule::clothing::S_Uberlod;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_RandomEventOption {
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::entitymodule::C_ConfiscationTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : ItemClass     : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;
    0xd0 : OnConfiscated : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AlchemistExistance : int {
    None              = 0,
    streamInFistFight = 1,
    streamInStandOff  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeStanceToCombatAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantStreaming : int {
    None                              = 0,
    StreamedZachranaPtacka            = 1,
    UnstreamedRatbor1                 = 2,
    StreamedRatbor1                   = 3,
    StreamedRatbor2Start              = 4,
    UnstreamedRatbor2BattleBegins     = 5,
    StreamedRatbor2SwitchedToHenry    = 6,
    UnstreamedZikmunduvTaborStart     = 7,
    StreamedZikmunduvTaborEnd         = 8,
    StreamedPrepadeniVlasskehoDvora   = 9,
    UnstreamedPrepadeniVlasskehoDvora = 10,
    StreamedStealthMiseZaJindru       = 11,
    UnstreamedStealthMiseZaJindru     = 12,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c12f40
enum enum wh::rpgmodule::E_ReputationPropagationKind::Type : unsigned char {
    Own        = 0,
    Ancestral  = 1,
    Relational = 2,
    Spatial    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VraceniManazerovi : int {
    None    = 0,
    Rychtar = 1,
    Farar   = 2,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetUiName : class wh::rpgmodule::storm::I_Operator {
    0x8 : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_Effect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AddFactionRelation* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum objectiveLootVillage : int {
    None           = 0,
    PreStart       = 1,
    Started        = 2,
    ReminderUpdate = 3,
    Completed      = 4,
    Failed         = 5,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_SmartHub {
    //Getter: WHGame.dll+0x7710b8
    get : EntityGuid     : unsigned __int64;
    //Getter: WHGame.dll+0x7702bc
    get : Links          : class std::vector<struct wh::xgenaimodule::scheduler::S_SchedulerLink,class std::allocator<struct wh::xgenaimodule::scheduler::S_SchedulerLink> >;
    //Getter: WHGame.dll+0x19f8c80
    get : StupidHub      : bool;
    //Getter: WHGame.dll+0x19f8c50
    get : IgnoreDeadEnds : bool;
    //Getter: WHGame.dll+0x3327fa4
    get : Position       : class boost::optional<struct Vec3_tpl<float> >;
    //Getter: WHGame.dll+0x1064968
    get : PostSearchData : class std::vector<class std::shared_ptr<class wh::xgenaimodule::scheduler::C_SmartHubPostSearchData>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::scheduler::C_SmartHubPostSearchData> > >;
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::BehaviorTree::S_Event {
};

//size in bytes: 0x0
//pointer dimension: 0
void {
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimDropRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimDropRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::dialogmodule::data::C_FaderDialogueNode>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BorrowEquipmentObjective : int {
    None              = 0,
    BorrowedShield    = 1,
    BorrowedLongsword = 2,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::guimodule::C_UILoadingScreen : class wh::guimodule::C_UIBase {
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::entitymodule::C_ArmorRuntimeData : class wh::entitymodule::C_EquippableItemRuntimeData {
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::entitymodule::C_EquipmentPresetFilterDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_EquipmentPresetFilter,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_EquipmentPresetFilter,class std::allocator<struct wh::entitymodule::S_EquipmentPresetFilter> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_TimeType::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_RandomEventOptionDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::playermodule::S_RandomEventOption,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::playermodule::S_RandomEventOption,class std::allocator<struct wh::playermodule::S_RandomEventOption> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SymbolSermirnyKusyMeceHoldership : int {
    None   = 0,
    Jimram = 1,
    Player = 2,
    Nobody = 3,
    Stash  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MagicArrowCarrySack : int {
    None               = 0,
    PickUp             = 1,
    PickUpAfterDropped = 2,
    Done               = 3,
    Canceled           = 4,
    Aborted            = 5,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::musicmodule::C_WorldStateToggle {
    //Getter: WHGame.dll+0x2e40680
    get  : Name               : class CryStringT<char>;
    0xc  : Overriding         : bool;
    0x10 : Priority           : float;
    0x18 : DefaultFlagCount   : int;
    0x14 : VisibleInSkald     : bool;
    0x20 : FlagDownDeferredBy : double;
    0x15 : UseAsEvent         : bool;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimerState::Type> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIMenu* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoldiersAndInformatorInCampA : int {
    None                 = 0,
    WaitingForStream     = 1,
    DialogWithInformator = 2,
    SceneAfterDialog     = 3,
    SearchingUpperCamp   = 4,
    SearchingLowerCamp   = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_AddQuestItem* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class CMatInfo> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithTempo* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindWerewolfProgress : int {
    None    = 0,
    Active  = 1,
    Updated = 2,
    Done    = 3,
    Aborted = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a5c288
enum enum wh::playermodule::E_BlacksmithConceptEvent::Type : unsigned char {
    Start         = 0,
    BeforeSuccess = 1,
    Success       = 2,
    Failed        = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Hole *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UkradniMec : int {
    None                = 0,
    UkradniMec          = 1,
    MecBylHenrymuSebran = 2,
    HenryUzMecMa        = 3,
    HenryMecUkradl      = 4,
    Canceled            = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BorrowEquipment : int {
    None                   = 0,
    SwordAndShield         = 1,
    SwordAndShieldReturned = 2,
    Longsword              = 3,
    LongswordReturned      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitiazerEnableBehaviorForNPC* {
};

//size in bytes: 0x298
//pointer dimension: 0
class wh::shopmodule::C_AddShopDefaultItem : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::shopmodule::C_Shop> {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xd8  : ItemClass      : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;
    0x158 : Amount         : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x118 : DisableRestock : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x198 : Quality        : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x1d8 : Health         : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x218 : Condition      : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x90  : Shops          : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::shopmodule::C_Shop *,class std::allocator<class wh::shopmodule::C_Shop *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIFlashListItemApse : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashListItem {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : ClassId         : int;
    0x20 : Category        : class CryStringT<char>;
    0x28 : IconId          : class CryStringT<char>;
    0x30 : Amount          : float;
    0x34 : MainStat        : float;
    0x38 : Health          : float;
    0x3c : Quality         : unsigned int;
    0x40 : ItemHealthState : unsigned int;
    0x44 : Weight          : float;
    0x48 : Price           : float;
    0x4c : IsEnable        : bool;
    0x50 : OutfitPresence  : unsigned int;
    0x54 : IsQuestItem     : bool;
    0x58 : Stolen          : unsigned int;
    0x5c : Dirt            : float;
    0x60 : Blood           : float;
    0x64 : BuffIcon        : unsigned int;
    0x68 : BuffDefId       : class CryStringT<char>;
    0x70 : InventoryId     : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemDescriptorTrigger* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_SchedulerEffectBase {
    //Getter: WHGame.dll+0x330fd2c
    get : Role : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b2b380
enum enum wh::combatmodule::E_BattleEvent::Type : unsigned char {
    AddedSoul              = 0,
    RemovedSoul            = 1,
    DeadSoul               = 2,
    TransformationComplete = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TaborNaCimburku : int {
    KumanskyTabor = 0,
    CimbrosTabor  = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindFirstCamp : int {
    None         = 0,
    Started      = 1,
    AmbushSite   = 2,
    Ambushed     = 3,
    FoundTheCamp = 4,
    Aborted      = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::playermodule::E_MinigameTutorialDomain::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetRelationContextPreset> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum klasterniTajemstviQuestItem : int {
    None        = 0,
    Stash       = 1,
    Player      = 2,
    Confiscated = 3,
    Kaspar      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum stealingBookWorker : int {
    None              = 0,
    Started           = 1,
    UpdatedOnLocation = 2,
    UpdatedAfterTalk  = 3,
    Done              = 4,
    Aborted           = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_If> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StealthMissionState : int {
    None                        = 0,
    InitialCrouch               = 1,
    PtacekBark                  = 2,
    MovingToIntersection        = 3,
    TalkBeforePlacingTheLadder  = 4,
    MovingToMalesov             = 5,
    PlacingTheLadder            = 6,
    WaitingForPlayerToClimbOver = 7,
    ClimbingTheLadder           = 8,
    WaitingForOpenGate          = 9,
    Done                        = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LokacePavla : int {
    Doma       = 0,
    KutnaHora  = 1,
    ZemeNezeme = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_Output : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OptionalDefeatRadmil : int {
    None               = 0,
    Started            = 1,
    CompletedPlayerWon = 2,
    AbortedPlayerLost  = 3,
    AbortedQuestFail   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkaFightOrTalk : int {
    None     = 0,
    Run      = 1,
    Chat     = 2,
    CanTalk  = 3,
    Talkinkg = 4,
    Fight    = 5,
    Done     = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_DoorTrigger* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::rpgmodule::S_POITypeWrapper {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::rpgmodule::I_Soul* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StrelbaPuskou : int {
    None       = 0,
    PlayerWon  = 1,
    PlayerLost = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PavlenaRescue : int {
    None                          = 0,
    Active                        = 1,
    PavlenaRescuedOldaDead        = 2,
    PavlenaDeadOldaDead           = 3,
    PlayerLeftPavlenaTiedOldaDead = 4,
    PlayerLeftPavlenaDeadOldaFree = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerPtacekMountState : int {
    None          = 0,
    BothMounted   = 1,
    AnyDismounted = 2,
    Finished      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertPlanBurningMalesov : int {
    None   = 0,
    Active = 1,
    3      = 2,
    4      = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_DisableAlchemyTable> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3e86ff0
enum enum wh::guimodule::E_ChoiceName::Type : unsigned char {
    Invalid                = 0,
    Yes                    = 1,
    No                     = 2,
    Off                    = 3,
    On                     = 4,
    Unvailable             = 5,
    Custom                 = 6,
    Low                    = 7,
    Medium                 = 8,
    High                   = 9,
    VeryHigh               = 10,
    UltraHigh              = 11,
    Camera                 = 12,
    CameraObject           = 13,
    Fullscreen             = 14,
    Window                 = 15,
    Fsr                    = 16,
    Dlss                   = 17,
    ConsoleModeFidelity    = 18,
    ConsoleModePerformance = 19,
    Quality                = 20,
    Balanced               = 21,
    Performance            = 22,
    NativeAA               = 23,
    Small                  = 24,
    Default                = 25,
    Large                  = 26,
    UltraLarge             = 27,
    InvertNever            = 28,
    InvertAlways           = 29,
    InvertExceptCombat     = 30,
    Automatic              = 31,
    Manual                 = 32,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::C_VariableDecision : class wh::xgenaimodule::I_StoredDecision {
};

//size in bytes: 0x118
//pointer dimension: 0
class wh::entitymodule::clothing::C_CharacterComponentDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::vector>, class wh::databasemodule::C_ObjectTreeDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::vector>,class std::map<class CryStringT<char>,class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,struct std::less<class CryStringT<char> >,class std::allocator<struct std::pair<class CryStringT<char> const ,class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > > > {
    0x30 : Objects           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    //Getter: WHGame.dll+0x19bdf70
    get  : KeyIndexedObjects : class std::reference_wrapper<class std::map<class CryStringT<char>,class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,struct std::less<class CryStringT<char> >,class std::allocator<struct std::pair<class CryStringT<char> const ,class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_Source* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_DialogueHolder* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_CutsceneHolder* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_ConceptPath {
    //Getter: WHGame.dll+0x256f56c
    get : Path : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorMountState::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FollowTrail : int {
    None          = 0,
    Active        = 1,
    Done          = 2,
    FailedSvatava = 3,
    FailedVendula = 4,
    Aborted       = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_LastElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitForDecision : int {
    None       = 0,
    Accept     = 1,
    BackToBeta = 2,
    Complete   = 3,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::rpgmodule::C_DistinctCounter<struct CryGUID> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::rpgmodule::C_AddFactionRelation : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::rpgmodule::C_FactionRelationBase {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : RelationValue  : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x108 : Faction        : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::C_FactionBase *>*;
    0x148 : RelationTarget : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::C_FactionBase *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DobrosShootingAfterPlayerArrives : int {
    None      = 0,
    AreaCheck = 1,
    Shooting  = 2,
    Done      = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4478
enum enum wh::entitymodule::E_CartFollowerPart::Type : unsigned char {
    horsePivot     = 0,
    frontAxelPivot = 1,
    backAxelPivot  = 2,
};

//size in bytes: 0x170
//pointer dimension: 0
class wh::xgenaimodule::C_SetRelationContextPreset : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_RelationScriptContextPreset> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Preset       : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContextPreset>*;
    0xe0  : From         : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x120 : To           : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_HoleTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanTalkToFiolka : int {
    None               = 0,
    MoveToFiolka       = 1,
    BalsanTalkToFiolka = 2,
    Crime              = 3,
    Done               = 4,
    Canceled           = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulState> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TowerState : int {
    Fine             = 0,
    FineAndSmoulder  = 1,
    Ruined           = 2,
    RuinedAndBurning = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeBehaviorStateElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_AnyElementPreset {
    0x0  : Name                        : class CryStringT<char>;
    0x8  : DropHomeSlotAutoReturnLeft  : bool;
    0x9  : DropHomeSlotAutoReturnRight : bool;
    0x10 : Elements                    : class std::vector<enum wh::xgenaimodule::NPCState::E_ElementType::Type,class std::allocator<enum wh::xgenaimodule::NPCState::E_ElementType::Type> >;
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::combatmodule::C_CombatFragmentMetaData {
    0x8  : GUID                : struct CryGUID;
    0x18 : AnimDatabaseId      : unsigned int;
    0x1c : ObstacleTestEnabled : bool;
    0x20 : Hits                : class std::reference_wrapper<class std::vector<class wh::combatmodule::C_CombatHitInfo,class std::allocator<class wh::combatmodule::C_CombatHitInfo> > >;
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_Function : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Ambush : int {
    BeforeAndAfterAmbush = 0,
    Ambush               = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsLightSource* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ItemSlot* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SigismundCampNpcs : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::entitymodule::clothing::S_CharacterComponentName {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartResource {
    //Getter: WHGame.dll+0x9f8b94
    get : Name         : class CryStringT<char>;
    0x4 : MaxInstances : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HungerDespairInWorldQuestItem : int {
    None    = 0,
    InWorld = 1,
    Player  = 2,
    Used    = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyRecipe,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SigismundCampStreamingStates : int {
    Initial_AmmoDepotDoorClosed          = 0,
    Initial_AmmoDepotDoorOpen_CS         = 1,
    Initial_AmmoDepotDoorOpen            = 2,
    Initial_AmmoDepotDoorOpen_CannonGone = 3,
    Abandoned                            = 4,
    AbandonedAndAmmoExploded             = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_TriggerPointEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeOfDayInterval* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_SaveLockEffectReason {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mintRegisterHoldership : int {
    None               = 0,
    AtSecretLocation   = 1,
    AcquiredByPlayer   = 2,
    ShowToKristian     = 3,
    ReturnFromKristian = 4,
    HandedOut          = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::S_RotationAngleComputerParams* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SmartEntity* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MenhartovaZrada : int {
    None          = 0,
    ZdradilDuveru = 1,
};

//size in bytes: 0x318
//pointer dimension: 0
class wh::rpgmodule::C_AreaTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::rpgmodule::C_AreaTriggerBase {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0x100 : Areas        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > >*;
    0x140 : OnAllEnter   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : OnEnter      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c0 : OnAllLeave   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x200 : OnLeave      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x240 : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x280 : Area         : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::I_Area *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::I_Reward* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SharedResource* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceActionTransition* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_ClothingMaterial>,class std::vector> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartEntity *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressKrizovatkaOne : int {
    None             = 0,
    Tour             = 1,
    WaitingToTrialog = 2,
    TrialogFinished  = 3,
    Canceled         = 4,
    Finished         = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRidOfStalker : int {
    Nnone       = 0,
    Started     = 1,
    Updated     = 2,
    UpdatedFail = 3,
    Failed      = 4,
    Aborted     = 5,
    Completed   = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Hand_Content : int {
    EmptyHands = 0,
    Polearm    = 1,
    OneHand    = 2,
    LongSword  = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_WeaponPresetOverride> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_NoUnstanceCondition : class wh::xgenaimodule::NPCState::I_Condition, class wh::xgenaimodule::NPCState::C_UnstanceConditionBase {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressTalkWithGuests : int {
    None        = 0,
    Active      = 1,
    TrialogDone = 2,
    BrabantDone = 3,
    Done        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OpustOhradku : int {
    None            = 0,
    OpusOhradu      = 1,
    OhradkaOpustena = 2,
};

//size in bytes: 0x120
//pointer dimension: 0
class wh::entitymodule::C_ProjectileInAreaTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : Area         : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::I_Area *>*;
    0xd8 : OnProjectile : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::conceptmodule::C_ConstantInterfacePort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort, class wh::conceptmodule::C_InterfaceDataPort {
    0x28 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value     : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type      : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x30 : Direction : enum wh::conceptmodule::E_PortDirection;
    //Getter: WHGame.dll+0x256f654
    get  : Value     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitiazerChangeBehaviorState* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp2_ArrestPoacher : int {
    None                = 0,
    PoacherFound        = 1,
    PoacherKilled       = 2,
    PoacherDealAccepted = 3,
    PoacherIsFree       = 4,
    Completed           = 5,
    Failed              = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class CAttachmentSKIN* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavodNaKonich : int {
    None                                = 0,
    ZavodProbiha                        = 1,
    JindraDojelANepromluvilSZadavatelem = 2,
    PripravenoNaDalsiZavod              = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_GetModuleVersion* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimPutItemInHandRequest* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::entitymodule::C_LevelHolder {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MarkerTutorialFocusCamera : int {
    DefendFrontWall = 0,
    DefendGate      = 1,
    FollowCert      = 2,
    Done            = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::combatmodule::C_CombatTreeKeyIndexedDatabase<class wh::combatmodule::C_CombatAnimationStepData> {
};

//size in bytes: 0x8
//pointer dimension: 1
const unsigned char* {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::guimodule::C_UIHudStates : class wh::guimodule::C_UIBase {

    //non-vtable method: WHGame.dll+0xc3001c
    SetCrimeState( int );
    //non-vtable method: WHGame.dll+0xc3001c
    SetCrimeRecognizingValue( int );
    //non-vtable method: WHGame.dll+0xc3001c
    SetTrespassState( int );
    //non-vtable method: WHGame.dll+0xc3001c
    SetWantedState( int );
    //non-vtable method: WHGame.dll+0xc3001c
    SetGameMode( int );
    //non-vtable method: WHGame.dll+0xc3001c
    SetGameDude( int );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_WeaponItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_AutoTriggerPort> {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_StopUsingHorseAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_FaderCutscene* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DuelInArena : int {
    None        = 0,
    DuelPrepare = 1,
    DuelActive  = 2,
    PlayerWon   = 3,
    PlayerLost  = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorCrouchTrigger> {
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_EntityScriptContext> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_MusicMatrixCell* {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIFlashListSoulProperty : class wh::guimodule::C_UIFlashObject {
    0x8  : Id            : class CryStringT<char>;
    0x10 : Name          : class CryStringT<char>;
    0x18 : SoulId        : class CryStringT<char>;
    0x30 : BaseLevel     : int;
    0x34 : BuffedLevel   : int;
    0x38 : BuffedColor   : unsigned int;
    0x3c : LevelProgress : float;
    0x40 : PerkPoints    : unsigned int;
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ItemCategoryDescriptor : class wh::entitymodule::I_ItemDescriptor, class wh::entitymodule::C_HomogenousItemDescriptor, class wh::entitymodule::C_ItemPropertyDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_UnstanceData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::NPCState::S_UnstanceData,class std::allocator<struct wh::xgenaimodule::NPCState::S_UnstanceData> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::xgenaimodule::S_GameScriptContextPreset {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dieFromSecretMint : int {
    None        = 0,
    SecretMiner = 1,
    Player      = 2,
    Kristian    = 3,
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::rpgmodule::C_CombatSoul : class wh::rpgmodule::I_CombatSoul {
    //Getter: WHGame.dll+0x1edf338
    get : IsSoulCharged      : bool;
    //Getter: WHGame.dll+0x1edf3d4
    get : AttackersCount     : unsigned __int64;
    //Getter: WHGame.dll+0x1edf080
    get : SkirmishStatistics : class std::shared_ptr<struct wh::rpgmodule::S_SkirmishStatistics>;
    //Getter: WHGame.dll+0x1edf08c
    get : Target             : class wh::rpgmodule::I_Soul*;
    //Getter: WHGame.dll+0x1edf344
    get : IsUnarmed          : bool;
    //Getter: WHGame.dll+0x1edf35c
    get : HasMeleeWeapon     : bool;
    //Getter: WHGame.dll+0x1edf374
    get : HasMissileWeapon   : bool;

    //vtable offset: 0xc0
    HasWeaponInHand( wh::entitymodule::WeaponClass const & );
    //non-vtable method: WHGame.dll+0xffff8211b507ffff
    TakeDamage( float, float, classwh::rpgmodule::I_Soul*, bool, wh::entitymodule::BodyPartData const & );
    //vtable offset: 0xc8
    HasCombatHistoryWithSoul( classwh::rpgmodule::I_Soul*, float );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum streamingStatusErik : int {
    None             = 0,
    StreamedPogrom   = 1,
    UnstreamedPogrom = 2,
    Streamed         = 3,
    Unstreamed       = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HandContentElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonecZabomysichValek_ZaDrozdem : int {
    None        = 0,
    Started     = 1,
    Completed   = 2,
    DrozdIsDead = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PVDladderAttackProgress : int {
    None   = 0,
    Move   = 1,
    Ladder = 2,
    Done   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ptacekTactics : int {
    None         = 0,
    RunToTower   = 1,
    JoinSkirmish = 2,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HandContentElementDrawData : class wh::xgenaimodule::NPCState::I_Element, class wh::xgenaimodule::NPCState::C_HandContentElement {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HastalDied : int {
    None       = 0,
    HastalDied = 1,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::musicmodule::C_MusicMatrixCell {
    //Getter: WHGame.dll+0x2e4070c
    get : WorldStateToggle : class CryStringT<char>;
    //Getter: WHGame.dll+0x2e406b0
    get : Playlist         : class CryStringT<char>;
};

//size in bytes: 0x310
//pointer dimension: 0
class CCamera {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsItemClass* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_RandomEventTag> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum focusCameraExplosion : int {
    None             = 0,
    WaitingForPlayer = 1,
    WaitingForCamera = 2,
    Deactivated      = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_RandomEvent> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController>* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af70d0
enum enum wh::dialogmodule::data::E_RepairShopType::Type : unsigned char {
    None        = 0,
    Armorer     = 1,
    Weaponsmith = 2,
    Tailor      = 3,
    Shoemaker   = 4,
    Gunsmith    = 5,
    Bowmaker    = 6,
    Blacksmith  = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::I_Cutscene* {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIFlashContentRecipeBlacksmith : class wh::guimodule::C_UIFlashObject {
    0x8  : Id             : class CryStringT<char>;
    0x10 : Name           : class CryStringT<char>;
    0x18 : IconId         : class CryStringT<char>;
    0x20 : Desc           : class CryStringT<char>;
    0x40 : AvailableSkill : float;
    0x44 : RequiredSkill  : unsigned int;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_CharacterComponentTagAge {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PalenkaUmisteni : int {
    Stash = 0,
    Hrac  = 1,
    Csaba = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerAddContext* {
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::musicmodule::C_AddressKeywordsDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_AddressKeyword>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::musicmodule::C_AddressKeyword>,class std::allocator<class std::shared_ptr<class wh::musicmodule::C_AddressKeyword> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::conceptmodule::C_ProfileAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name          : class CryStringT<char>;
    0x10 : Target        : class CryStringT<char>;
    //Getter: WHGame.dll+0x262b854
    get  : AssetProfiles : class CryStringT<char>;
    0x30 : IsDynamic     : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseOrHorsemanDeath : int {
    None         = 0,
    HorseDead    = 1,
    HorsemanDead = 2,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::environmentmodule::C_TimeOfDayProfile {
    0x8 : Name : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum skirmishCamp1State : int {
    None             = 0,
    SaSBeziKTaboru   = 1,
    SkirmishOn       = 2,
    SkirmishBezHrace = 3,
    Done             = 4,
    DoneBezHrace     = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::questmodule::C_EnumLog : class wh::questmodule::C_Log {
    0x10 : Name      : class CryStringT<char>;
    0x8  : Type      : enum wh::questmodule::E_LogType;
    0x20 : Log       : class wh::framework::C_LocalizedString;
    0xc  : IsTracked : bool;
    0x18 : Marker    : class CryStringT<char>;
    0x40 : Hint      : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContextPreset>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GateControl : int {
    Open  = 0,
    Close = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7a578
enum enum wh::entitymodule::E_InteractionType : int {
    Press = 0,
    Hold  = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::E_HLodType {
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::dialogmodule::data::C_Decision {
    0x10 : Name                           : class CryStringT<char>;
    0x8  : Sequences                      : class std::reference_wrapper<struct DynArray<class std::shared_ptr<class wh::dialogmodule::data::C_Sequence>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > >;
    //Getter: WHGame.dll+0x27509b4
    get  : SequencesView                  : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class wh::dialogmodule::data::C_Sequence *,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class wh::dialogmodule::data::C_Sequence *> > >;
    0x39 : Priority                       : enum wh::dialogmodule::data::E_DecisionPriority::Type;
    0x18 : Alias                          : class CryStringT<char>;
    0x28 : TimeLimit                      : class tiny::optional<int,-2147483648,0>;
    0x3a : AutoSelect                     : bool;
    0x20 : CustomCamera                   : class CryStringT<char>;
    0x2c : ChatDistance                   : class tiny::optional<float,0,0>;
    0x30 : VoiceoverReductionMaxSequences : class tiny::optional<int,-2147483648,0>;
    0x34 : VoiceoverReductionRole         : class boost::optional<struct wh::rpgmodule::S_RoleId>;
    0x38 : EnableCrimeHud                 : bool;
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::conceptmodule::C_IfFunction : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x68 : Exec          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xa8 : True          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe8 : False         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmbushedPlace : int {
    None      = 0,
    Active    = 1,
    Completed = 2,
    Failed    = 3,
    Abort     = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a64980
enum enum wh::entitymodule::E_ActorAction::Type : unsigned char {
    idle       = 0,
    motion     = 1,
    transition = 2,
    jumpStart  = 3,
    jump       = 4,
    jumpEnd    = 5,
    ladder     = 6,
    ledge      = 7,
    dead       = 8,
    ai         = 9,
    mount      = 10,
    dismount   = 11,
    rear       = 12,
    fastStop   = 13,
    move2idle  = 14,
    idle2move  = 15,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::musicmodule::C_SkaldBoxProbe : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Toggle       : class wh::conceptmodule::C_TypedPortRef<struct wh::musicmodule::S_WorldStateToggleId>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x2
//pointer dimension: 0
class boost::optional<bool> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::scheduler::S_SchedulerLink* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ExtrasStreaming : int {
    streamed   = 0,
    unstreamed = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::framework::S_BaseExampleNode* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VratSeZaMenhartem : int {
    None                       = 0,
    PromluvSiSMenhartem        = 1,
    VratSeVeDne                = 2,
    HenrySiPromluvilSMenhartem = 3,
    Aborted                    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestionHerbalist : int {
    None                    = 0,
    AskHerbalistAboutMarika = 1,
    GotInformation_Loose    = 2,
    GotInformation_Exact    = 3,
    Failed                  = 4,
    Aborted                 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StalkerPostQuest_obsolete : int {
    None                      = 0,
    KatherineKilled           = 1,
    HenryKilledWithoutKnowing = 2,
    Resolved                  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum tasteWines : int {
    None         = 0,
    Started      = 1,
    knownWines   = 2,
    unknownWines = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_PortRef : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Node* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AddReward* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::E_AddRemove::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekArmor : int {
    None      = 0,
    Active    = 1,
    DontAgree = 2,
    Done      = 3,
    Hide      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum minesKillings : int {
    None                    = 0,
    DeadDuringShifts        = 1,
    DeadDuringConfrontation = 2,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::guimodule::C_UIHudHints : class wh::guimodule::C_UIBase, class wh::guimodule::I_UIDragAndDropViewer {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LadderProgress : int {
    None                = 0,
    TarasUpstairs       = 1,
    FocusCameraActive   = 2,
    FocusCameraInactive = 3,
    Done                = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::entitymodule::C_ItemManipulationDatabase : class wh::databasemodule::C_ObjectTreeDatabase<struct wh::entitymodule::S_ItemManipulationData,class std::vector>, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_ItemManipulationData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemManipulationData,class std::allocator<struct wh::entitymodule::S_ItemManipulationData> > >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VYsetrovaniVrazdyZdeny : int {
    None                = 0,
    PromluvSiSeZlodeji  = 1,
    JdiDoMlyna          = 2,
    JdiKMostku          = 3,
    NalezenyZdeninyVeci = 4,
    ZdenaProhledana     = 5,
    Failed              = 6,
    Aborted             = 7,
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::dialogmodule::data::C_DialogueWrapper : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_InstantSendMessage* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BathmaidsMigration : int {
    UnstreamedDefault              = 0,
    LivingInGrunta_QuestStart      = 1,
    LivingInKHBathhouse            = 2,
    LeavingLevel_QuestFailInGrunta = 3,
    Unstreamed_PlayerLeftThem      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateBase<class rttr::variant>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimerState::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefectorsState : int {
    None           = 0,
    PlayerWalkedIn = 1,
    UrgingDialogue = 2,
    Fight          = 3,
    Peace          = 4,
    Disabled       = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyRecipeStepType* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ModuleVersionState* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OnOffFocusCamControl : int {
    None                    = 0,
    FocusCamPromptOff       = 1,
    FocusCamPromptOn        = 2,
    FocusCamPromptOnLooking = 3,
    Finished                = 4,
    Canceled                = 5,
};

//size in bytes: 0x220
//pointer dimension: 0
class wh::xgenaimodule::C_RelationContextTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_RelationScriptContext> {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Context          : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContext>*;
    0x190 : From             : class wh::conceptmodule::C_TypedArrayPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x1d0 : To               : class wh::conceptmodule::C_TypedArrayPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x100 : OnContextAdded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x140 : OnContextRemoved : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct ICharacterManager* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Item *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::soundmodule::C_AudioRtpc> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_FilterInput* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_AddStashDefaultItem> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::navigation::C_PredefinedPath* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_GenericRandomEventType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_onPlayerLeft_waitMode : int {
    leaderTurnsOnPlayer    = 0,
    everybodyTurnsOnPlayer = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_RenderedCutscene* {
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::rpgmodule::C_BuffEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xd0 : BuffGUID     : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionId>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_AreaLabelEffect> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TorturingPrisoner : int {
    None                        = 0,
    EnterTheTortureChamber      = 1,
    CaponWaitedForTooLongHidden = 2,
    CaponWaitedForTooLong       = 3,
    TorturingDone               = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a22980
enum enum wh::playermodule::E_MinigameType::Type : unsigned char {
    Undefined     = 0,
    Sharpening    = 1,
    Reading       = 2,
    Alchemy       = 3,
    HerbGathering = 4,
    LockPicking   = 5,
    HoleDigging   = 6,
    Dice          = 7,
    Pickpocketing = 8,
    StoneThrowing = 9,
    BattleArchery = 10,
    Distract      = 11,
    Blacksmithing = 12,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::rpgmodule::I_Soul> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressAbortableFailable_classic : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
    Aborted  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TavernPortionActive : int {
    None                     = 0,
    InstantTavern            = 1,
    AfterDialogPtacek        = 2,
    AfterCutsceneOdjezdPosla = 3,
    Done                     = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SkirmishTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_MiscItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasScheduleItemCount* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsFromSlot* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gainingRespect2 : int {
    None                  = 0,
    Started               = 1,
    WinArchery            = 2,
    WinCrossCountry       = 3,
    UpdateWonArchery      = 4,
    UpdateWonCrossCountry = 5,
    UpdateWonBoth         = 6,
    FinishWithArcher      = 7,
    FinishWithRacer       = 8,
    CompletedAsArcher     = 9,
    CompletedAsRacer      = 10,
    CompletedAsNeutral    = 11,
    Cancelled             = 12,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_EnableBehavior> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulThreatsTrigger> {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_PlaceEventData : struct wh::xgenaimodule::I_EventData {
    0x8 : Slot : struct wh::framework::WUID;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::C_MethodsExample {

    //No-op method (instant return)
    DoNothing( );
    //non-vtable method: WHGame.dll+0x24b90e8
    SayHello( );
    //non-vtable method: WHGame.dll+0x24b910c
    SayHelloTo( classCryStringT<char> const & );
    //non-vtable method: WHGame.dll+0x19a4860
    MultiplyNumbers( float, float );
    //non-vtable method: WHGame.dll+0x24b8ce0
    DefaultArguments( classCryStringT<char>, int, wh::framework::E_EnumExample );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasVoice* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DopisProOpata : int {
    None  = 0,
    Henry = 1,
    Opat  = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3fc8
enum enum wh::playermodule::E_RandomEventOptionResult::Type : unsigned char {
    None    = 0,
    Fail    = 1,
    Success = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SermiriProgress : int {
    NoneOrActive  = 0,
    MenhartMaster = 1,
    MikulasMaster = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<unsigned char> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_PlaceSetAsideAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::soundmodule::S_SkaldAtlRtpcId>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UICompass* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::dialogmodule::data::S_IncludedDecisionAlias {
    0x8 : Decision : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
class tiny::optional<bool,0,0> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Strazci : int {
    None         = 0,
    CekaniNaAreu = 1,
    Chat         = 2,
    IngameDialog = 3,
    Done         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
enum rttr::E_PropertyMetadata {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_onPlayerLeft_wait : int {
    always               = 0,
    afterPlayerGetsClose = 1,
    never                = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_VoiceCategory {
};

//size in bytes: 0x360
//pointer dimension: 0
class wh::engine3d::C_HLodManager : class wh::I_HLodManager, class wh::engine3d::C_HLodManagerStreaming {
    0x8   : Config            : class std::reference_wrapper<struct wh::engine3d::S_HLodConfig>;
    //Getter: WHGame.dll+0x1edf65c
    get   : IsEnabled         : bool;
    //Getter: WHGame.dll+0x1eddb50
    get   : IsEnabledForLevel : bool;
    0x1b8 : SystemEnabled     : int;
    0x1c4 : LevelHash         : unsigned int;
    0x1c8 : HLodTree          : class std::shared_ptr<class wh::engine3d::C_HLod>;
    0x1f0 : Stats             : struct wh::engine3d::S_HLodStats;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanMoveToCimburk : int {
    None            = 0,
    MoveToCamp      = 1,
    MoveToWaitPoint = 2,
    Done            = 3,
    Canceled        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetTheWine : int {
    None      = 0,
    GetWine   = 1,
    GotWine   = 2,
    Delivered = 3,
    Abort     = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AddInventory* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_UseBookTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindHuntsman : int {
    None                        = 0,
    Started                     = 1,
    FoundHim                    = 2,
    FoundHimBeforeLookingForHim = 3,
    Aborted                     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BlockadeState : int {
    Unstreamed        = 0,
    StreamingUnloaded = 1,
    StreamedLoaded    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > >* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3bb8
enum enum wh::guimodule::E_PositioningStage::Type : unsigned char {
    None              = 0,
    InProgress        = 1,
    WaitingInPosition = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToInjured : int {
    None       = 0,
    Updated    = 1,
    Done       = 2,
    VydraDied  = 3,
    VlastaDied = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::entitymodule::S_ItemTransformation {
    0x0 : Position : struct Vec3_tpl<float>;
    0xc : Rotation : struct Ang3_tpl<float>;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_OutputDataPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsFromSlot : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x190
//pointer dimension: 0
class CAttachmentSKIN {
};

//size in bytes: 0x320
//pointer dimension: 0
class wh::entitymodule::C_AddQuestItem : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name                            : class CryStringT<char>;
    0x18  : RuntimeState                    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView                       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive                        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : ItemClassGUID                   : class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID>*;
    0xd0  : BackupLocation                  : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemHolder *>*;
    0x110 : StartingLocation                : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemHolder *>*;
    0x190 : Quality                         : class wh::conceptmodule::C_TypedPortRef<unsigned int>*;
    0x1d0 : Health                          : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x210 : Condition                       : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x150 : OnEquipBuff                     : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_BuffDefinitionId>*;
    0x250 : DoEquip                         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x290 : SuppressUINotificationOnAcquire : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x2d0 : SuppressUINotificationOnLost    : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_PatchTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerChangeEquipment* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrackviewStatus : int {
    None            = 0,
    RecordTrackview = 1,
    PlayTrackview   = 2,
    Done            = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::runtime::C_RuntimeType : class wh::conceptmodule::C_Resource {
    0x8  : TypeName  : class CryStringT<char>;
    0x10 : TypeClass : enum wh::conceptmodule::definition::E_TypeClass;
    0x18 : Enums     : class std::vector<struct wh::conceptmodule::definition::S_Enumeration,class std::allocator<struct wh::conceptmodule::definition::S_Enumeration> >;

    //vtable offset: 0x8
    OnBeforeSerialization( );
    //vtable offset: 0x8
    OnAfterSerialization( );
    //vtable offset: 0x8
    OnBeforeDeserialization( );
    //vtable offset: 0x8
    OnAfterDeserialization( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_PresetItem* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::soundmodule::C_AudioSustainedEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_followType : int {
    none                = 0,
    followableNpcCenter = 1,
    followableNpcLeft   = 2,
    followableNpcRight  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SkirmishManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum continueInTour : int {
    None                  = 0,
    Started               = 1,
    Completed             = 2,
    cameLateButInvited    = 3,
    cameLateAndNotInvited = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum meetingWithSamuel : int {
    None                    = 0,
    WaitTillEvening_Started = 1,
    WaitTillEvening_Updated = 2,
    GoToMeeting_InTime      = 3,
    AttendedMeeting         = 4,
    GoToMeeting_TimedOut    = 5,
    GoToSamuel              = 6,
    TalkedToSamuel          = 7,
    Aborted                 = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dice_minigameResult : int {
    playerWon       = 0,
    playerLost      = 1,
    playerLeft      = 2,
    gameInterrupted = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::combatmodule::E_BattleEvent::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourneyMainState : int {
    BeforeWelcome  = 0,
    TourneyWelcome = 1,
    TourneyActive  = 2,
    TourneyEnd     = 3,
    CrimeAborted   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KnockKnock : int {
    None      = 0,
    Knockable = 1,
    Chatting  = 2,
    Done      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kovar_navraty : int {
    none     = 0,
    Navrat1  = 1,
    Navrat2  = 2,
    Navrat3  = 3,
    Splneno1 = 4,
    Splneno2 = 5,
    Splneno3 = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CampSlatejov : int {
    None                 = 0,
    Started              = 1,
    UpdatedOnGravedigger = 2,
    UpdatedOnCorpse      = 3,
    UpdatedOnCamp        = 4,
    Done                 = 5,
    Failed               = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulPoolBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum recruitment_mariky : int {
    None                = 0,
    Active              = 1,
    UpdatedAfterTalk    = 2,
    UpdatedAfterSuccess = 3,
    UpdatedAfterFail    = 4,
    Done                = 5,
    Canceled            = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AlchemyTutorialProgress : int {
    None                    = 0,
    LookBook_starting       = 1,
    LookBook_active         = 2,
    LookRecipe_starting     = 3,
    LookRecipe_active       = 4,
    AddFoundation_starting  = 5,
    AddFoundation_active    = 6,
    MoveKettleDown_starting = 7,
    MoveKettleDown_active   = 8,
    Boil_starting           = 9,
    Boil_active             = 10,
    MoveKettleUp_starting   = 11,
    MoveKettleUp_active     = 12,
    OpenInventory_starting  = 13,
    OpenInventory_active    = 14,
    PrepareHerbs_starting   = 15,
    PrepareHerbs_active     = 16,
    AddChamomile_starting   = 17,
    AddChamomile_active     = 18,
    TurnClock_starting      = 19,
    TurnClock_active        = 20,
    BoilChamomile_starting  = 21,
    BoilChamomile_active    = 22,
    MoveKettleUp_2_starting = 23,
    MoveKettleUp_2_active   = 24,
    PrepareSage_starting    = 25,
    PrepareSage_active      = 26,
    AddSage_starting        = 27,
    AddSage_active          = 28,
    FinishPotion_starting   = 29,
    FinishPotion_active     = 30,
    Done                    = 31,
};

//size in bytes: 0x8
//pointer dimension: 0
struct IEntity {

    //vtable offset: 0x90
    GetName( );
};

//size in bytes: 0x8
//pointer dimension: 0
nullptr {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_HandContentConditionBase* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationResultKey* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::questmodule::C_Objective> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::NPCState::S_AnyElementPreset,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CraftAndDeliverSword : int {
    None       = 0,
    Active     = 1,
    Update     = 2,
    LowQuality = 3,
    Done       = 4,
};

//size in bytes: 0x158
//pointer dimension: 0
class wh::xgenaimodule::C_LinkEffectBase : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : From         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >*;
    0xd8 : To           : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_WeaponPreset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertovkaState : int {
    DefaultOpenWorld        = 0,
    MercenaryCamp           = 1,
    MercenaryCampAndCannon  = 2,
    AbandondedMercenaryCamp = 3,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_ActiveTriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_TriggerPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VysetriVrazduM44a : int {
    None            = 0,
    Started         = 1,
    UpdatedBookBody = 2,
    UpdatedZnamJed  = 3,
    Done            = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::entitymodule::S_QuestItemInfo {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum fakeThunderStoneHolder : int {
    None        = 0,
    Thomlin     = 1,
    Player      = 2,
    Confiscated = 3,
    ParlerU41   = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::I_ContinuousSwitchableNode : class wh::xgenaimodule::BehaviorTree::I_SwitchableNode {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FollowCapon : int {
    None          = 0,
    Follow        = 1,
    Discovered    = 2,
    Done          = 3,
    DoneDiscoverd = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudMessages* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LureKozina : int {
    None         = 0,
    LureKozina   = 1,
    CaughtKozina = 2,
    Canceled     = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29d20
enum enum wh::dialogmodule::data::E_CameraCommandType : unsigned char {
    Undefined = 0,
    Master    = 1,
    Medium    = 2,
    CloseShot = 3,
    CloseUp   = 4,
    Custom    = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_PlayerModule* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CenekAStulec : int {
    CenekAStulec        = 0,
    OdstreamovanyCenek  = 1,
    OdstreamovanyStulec = 2,
    CenekAniStulec      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindFirstCross : int {
    None                 = 0,
    Start                = 1,
    CrossFound           = 2,
    DoneWithoutObjective = 3,
    Aborted              = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindViktorkaSpot : int {
    None      = 0,
    Active    = 1,
    Completed = 2,
    Aborted   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum findingBones : int {
    None           = 0,
    woodcutterCamp = 1,
    firstClue      = 2,
    secondClue     = 3,
    ThirdClue      = 4,
    FourthClue     = 5,
    FifthClue      = 6,
    Done           = 7,
    Cancel         = 8,
    DoneAgain      = 9,
};

//size in bytes: 0x110
//pointer dimension: 0
struct wh::entitymodule::S_HerbItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass, struct wh::entitymodule::S_TypedItemClass, struct wh::entitymodule::S_CraftingMaterialItemClass {
    0x8   : Id                             : struct CryGUID;
    0x18  : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get   : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38  : Model                          : class CryStringT<char>;
    0x40  : Material                       : class CryStringT<char>;
    0x48  : EntityScript                   : class CryStringT<char>;
    0x50  : AttachmentName                 : class CryStringT<char>;
    0x58  : Weight                         : float;
    0x5c  : Price                          : unsigned int;
    0x60  : FadeCoef                       : float;
    0x64  : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68  : LightSourcePriority            : unsigned int;
    0x6c  : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70  : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88  : HomeSlotAutoReturn             : bool;
    0x89  : ProjectileCollisionWhenCarried : bool;
    0x8a  : PhaseResetOnDrop               : bool;
    0x8b  : PhaseResetOnSlotReturn         : bool;
    0x8c  : PhaseResetOnSlotAbandon        : bool;
    0x90  : IconId                         : class CryStringT<char>;
    0x98  : UIInfo                         : class CryStringT<char>;
    0xa0  : UIName                         : class CryStringT<char>;
    0xa9  : PickpocketInPouch              : bool;
    0xaa  : DisplayInShop                  : bool;
    0xa8  : IsQuestItem                    : bool;
    0xb0  : IsDivisible                    : bool;
    0xb8  : ContainerModel                 : class CryStringT<char>;
    0xc0  : ContainerMaterial              : class CryStringT<char>;
    0x8   : Type                           : int;
    0xc   : SubType                        : int;
    0xd8  : LatinName                      : class CryStringT<char>;
    0xe0  : Desc                           : class CryStringT<char>;
    0xe8  : Effect                         : class CryStringT<char>;
    0xf0  : Occur                          : class CryStringT<char>;
    0xf8  : Poisonous                      : bool;
    0xf9  : InHerbarium                    : bool;
    0xfc  : DecayTime                      : float;
    0x100 : DriedItemId                    : struct CryGUID;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_StanceElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CumansFoodObjective : int {
    None                            = 0,
    TalkToVaskoAboutOrder           = 1,
    GetFoodFromKitchen              = 2,
    ServeCumans                     = 3,
    Completed                       = 4,
    FightStartedWithoutFoodDelivery = 5,
    Aborted                         = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_NPCGameModeTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MiroslavInJail : int {
    None        = 0,
    Tied        = 1,
    FreeAndWait = 2,
    Done        = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3f28
enum enum wh::playermodule::E_AlchemyPotBoilingState::Type : unsigned char {
    NoBoiling     = 0,
    WeakBoiling   = 1,
    StrongBoiling = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::BehaviorTree::S_CallbackEvent* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::combatmodule::S_BattleSituation *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_AlchemyFeedbacks {
};

//size in bytes: 0x1e0
//pointer dimension: 0
class wh::entitymodule::C_InteractionTriggerNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name          : class CryStringT<char>;
    0x18  : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Interactors   : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::I_InteractionTrigger *,class std::allocator<class wh::entitymodule::I_InteractionTrigger *> > >*;
    0x100 : Type          : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_InteractionType>*;
    0x140 : OnInteraction : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : Interactor    : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::I_InteractionTrigger *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_GameReleaseVersion::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::I_MusicManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrackviewKomarAndCow : int {
    None              = 0,
    StreamKomarAndCow = 1,
    KomarAndCow       = 2,
    Done              = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithMartaAfterViktorkaDisappearence : int {
    None                           = 0,
    Started                        = 1,
    Completed                      = 2,
    FoundViktorka                  = 3,
    MartaDied                      = 4,
    Aborted                        = 5,
    PlayerKnowsViktorkaWhereabouts = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WeddingSwordLocation : int {
    None       = 0,
    Slot       = 1,
    Player     = 2,
    Blacksmith = 3,
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::entitymodule::S_WeaponEquipItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_EquippableItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : Visibility                     : float;
    0xb4 : Conspicuousness                : float;
    0xb8 : Charisma                       : float;
    0xbc : RPGBuffWeight                  : float;
    0xc0 : SocialClassId                  : int;
    0xc4 : WealthLevel                    : int;
    0xe0 : MaxQuality                     : unsigned int;
    0xc8 : UiSound                        : class CryStringT<char>;
    //Getter: WHGame.dll+0x1edee04
    get  : Clothing                       : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamingChickens : int {
    Streamed_initial            = 0,
    Unstreamed_duringLoot       = 1,
    Streamed_soldiersLeftOrFled = 2,
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab3d98
enum enum wh::rpgmodule::E_LocationMarkStates : int {
    Unknown           = 0,
    KnownUndiscovered = 1,
    Discovered        = 2,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_Crime,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum findWeapon : int {
    None                 = 0,
    findWeaponWithMarker = 1,
    Done                 = 2,
    Aborted              = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_AttachEventImplementation* {
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_OintmentItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass, struct wh::entitymodule::S_ConsumableItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
    0xc8 : BuffDefinitionId               : struct CryGUID;
    0xd8 : UiSound                        : class CryStringT<char>;
    0x8  : Type                           : int;
    0xc  : SubType                        : int;
    0xf0 : Efficiency                     : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CsabaHans : int {
    None               = 0,
    BeforeInteractions = 1,
    Dialog             = 2,
    WaitingForDrink    = 3,
    Drinking           = 4,
    Ragdoll            = 5,
    Done               = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Module* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_AmmoLength {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_HandContentElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseContestAvailability : int {
    None                = 0,
    IsAvailable         = 1,
    ActivityGiverIsDead = 2,
    OnGlobalCooldown    = 3,
    OnCrimeCooldown     = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionRequiresOtherHandEmpty : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
    0x18 : IsPicking  : bool;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<struct wh::entitymodule::S_ItemManipulationData,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Scene> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NemecTreasureQuestItems : int {
    None              = 0,
    InStash           = 1,
    InPlayerInventory = 2,
    Confiscated       = 3,
    SoldToTrader      = 4,
    SoldByTrader      = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AsiDoVeziStatus : int {
    None      = 0,
    Talismans = 1,
    Stone     = 2,
    Finished  = 3,
    Failed    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InvestigationCrimeScene : int {
    None        = 0,
    activeDusko = 1,
    hintStone   = 2,
    hintCloth   = 3,
    canceled    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AreaCheck : int {
    None       = 0,
    FleeArea   = 1,
    AttackArea = 2,
    Done       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum letterForBuresHolder : int {
    None   = 0,
    Player = 1,
    Bures  = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a9d8
enum enum wh::xgenaimodule::E_AddRemove::Type : unsigned char {
    Remove = 0,
    Add    = 1,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasSoulArchetype : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x2cc22b4
    get : name : class CryStringT<char>;
    0x8 : ID   : int;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::S_DialogParams* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<int> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum barkAndChatProgress : int {
    None = 0,
    Bark = 1,
    Chat = 2,
    Done = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_CatWaypointDefinition* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_LockpickableEntity* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_LockTrigger* {
};

//size in bytes: 0x1
//pointer dimension: 0
class wh::C_DebugDraw {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartEntityTemplate* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RuthardArmor : int {
    Default       = 0,
    ArmorNoHelmet = 1,
    Done          = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KristianState : int {
    None    = 0,
    Dead    = 1,
    GotInfo = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TowardsArenaTourPhase : int {
    None                 = 0,
    WaitForHorseMounting = 1,
    MoveToGate           = 2,
    MoveOutOfTheGate     = 3,
    MoveToArena          = 4,
    ArrivingToArena      = 5,
    Done                 = 6,
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::shopmodule::C_Shop {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CarriageProfile : int {
    None          = 0,
    CarriageJezdi = 1,
    KonecQuestu   = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_AddDefaultItemMode::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_CameraCommand* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoubleSucces : int {
    none    = 0,
    started = 1,
    aborted = 2,
    done1   = 3,
    done2   = 4,
};

//size in bytes: 0x148
//pointer dimension: 0
class wh::entitymodule::clothing::C_Body : class wh::entitymodule::clothing::C_Component {
    0x8   : Name                          : class CryStringT<char>;
    0x10  : Race                          : class std::optional<enum wh::entitymodule::E_Race::Type>;
    0x18  : Gender                        : class std::optional<enum wh::entitymodule::E_ActorGender>;
    0x20  : FilePath                      : class CryStringT<char>;
    //Getter: WHGame.dll+0x2830820
    get   : HidingGroups                  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x50  : Elements                      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_ElementBase> > > >;
    0x68  : Features                      : class std::reference_wrapper<class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> > >;
    //Getter: WHGame.dll+0x2830920
    get   : Morphs                        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x80  : DerivedComponents             : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::allocator<class std::shared_ptr<class wh::entitymodule::clothing::C_Component> > > >;
    0x98  : RepresentativeUberlodClothing : class CryStringT<char>;
    //Getter: WHGame.dll+0x19bc240
    get   : SourceForUberlodPart          : class CryStringT<char>;
    0xd8  : DistributionWeight            : float;
    //Getter: WHGame.dll+0x2830964
    get   : Paleness                      : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830a24
    get   : Roughness                     : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x283051c
    get   : Age                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x120 : ScratchLevel                  : class std::optional<float>;
    0x128 : Melanin                       : class std::optional<float>;
    0x130 : Diffuse                       : class std::optional<struct Color_tpl<float> >;
};

//size in bytes: 0x8
//pointer dimension: 1
float* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UseLambAsBait : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
    Aborted   = 3,
    Resetting = 4,
    Failed    = 5,
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::dialogmodule::data::C_Dialogue {
    0x8  : Decision                      : class std::reference_wrapper<class wh::dialogmodule::data::C_Decision>;
    0x90 : NonSpeakerRoles               : struct DynArray<struct wh::rpgmodule::S_RoleId,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
    0x70 : Type                          : enum wh::dialogmodule::data::E_BranchType;
    //Getter: WHGame.dll+0x19b0c60
    get  : Priority                      : int;
    0x68 : Hearing                       : class CryStringT<char>;
    0x72 : AllowGreeting                 : bool;
    0x73 : AllowFarewell                 : bool;
    0x76 : ClashPriority                 : enum wh::dialogmodule::data::E_ClashPriority::Type;
    0x78 : DefaultChatTimeLimit          : int;
    0x7c : DefaultMaxDistance            : float;
    0x74 : ChatSubtitlesDown             : bool;
    0x80 : ChatBubblesDistance           : float;
    0x84 : Initiator                     : enum wh::dialogmodule::data::E_DialogInitiator::Type;
    0x86 : ChatMainNPCRole               : struct wh::rpgmodule::S_RoleId;
    0x85 : TechnicalStatus               : enum wh::dialogmodule::data::E_TechnicalStatus::Type;
    0x88 : Props                         : struct DynArray<class std::shared_ptr<class wh::dialogmodule::data::C_DialogueProp>,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > >;
    0x75 : CreateCrucialDecisionSaveGame : bool;
    0x98 : ForceMood                     : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GraveLootersInTunnel : int {
    None             = 0,
    TalkWithLooters  = 1,
    FightWithLooters = 2,
    FreedLooters     = 3,
    KilledLooters    = 4,
    Aborted          = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_GameContextTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_RuntimeState* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::framework::C_LocalizedString {
    0x8 : StringName : class CryStringT<char>;
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::xgenaimodule::navigation::S_DeltaMovementParamsNode {
    0x0  : LogicalSpeedId                  : int;
    0x4  : RotationParams                  : struct wh::S_RotationAngleComputerParams;
    0x20 : SpeedParams                     : struct wh::S_DeltaMovementSpeedParams;
    0x38 : MoveTargetSmoothingAngularSpeed : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TavernWallState : int {
    Intact                       = 0,
    WaitForDisassembledStreaming = 1,
    Disassembled                 = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatSFouskem : int {
    None   = 0,
    Combat = 1,
    Done   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KonecZabomysichValek_aboutQuest : int {
    None      = 0,
    Available = 1,
    Started   = 2,
    Done      = 3,
    Failed1   = 4,
    Aborted   = 5,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class wh::framework::C_LocalizedString> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString> {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_GameScriptContext>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum nazProfile : int {
    UnstreamedInitial         = 0,
    StreamedS42SabotazLazni   = 1,
    UnstreamedS42SabotazLazni = 2,
    StreamedDebug             = 3,
    UnstreamedDebug           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::S_DialogueDubbing* {
};

//size in bytes: 0x8
//pointer dimension: 1
const unsigned int* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventFunction> {
};

//size in bytes: 0x8
//pointer dimension: 1
const short* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Event_BolekAdvice : int {
    First  = 0,
    Second = 1,
    Third  = 2,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::rpgmodule::C_TimeSamplingCounter<struct wh::rpgmodule::T_GameTimePolicy> : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SamplingCounter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_Timer> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertBehavior : int {
    None         = 0,
    Leaning      = 1,
    IngameDialog = 2,
    Done         = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_TutorialManager* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::conceptmodule::definition::S_Enumeration* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dice_betType : int {
    none  = 0,
    money = 1,
    token = 2,
    mixed = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ac7950
enum enum wh::combatmodule::E_CombatTutorialDomain::Type : unsigned char {
    Basic        = 0,
    Advanced     = 1,
    MasterStrike = 2,
    Generic      = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HorseUsageElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_DogPoint* {
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::framework::S_SaveGameDebugInfo {
    0x8  : BuildTime        : class CryStringT<char>;
    0x10 : BuildComputer    : class CryStringT<char>;
    0x18 : BuildDescription : class CryStringT<char>;
    0x20 : Configuration    : class CryStringT<char>;
    0x28 : BuildInfo        : class CryStringT<char>;
    0x30 : UserName         : class CryStringT<char>;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::rpgmodule::C_DocumentRarityDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::rpgmodule::S_DocumentRarity,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::rpgmodule::S_DocumentRarity,class std::allocator<struct wh::rpgmodule::S_DocumentRarity> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x110
//pointer dimension: 0
struct wh::entitymodule::S_EffectControlledItem : struct wh::entitymodule::S_QuestItemInfo, struct wh::entitymodule::S_ExistingQuestItem, struct wh::entitymodule::S_ActiveQuestItem {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Scene* {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeRightHandContentEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase, class wh::xgenaimodule::NPCState::C_ChangeHandContentEffectBase {
    0x8  : DataSource                   : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : LeavesEmpty                  : bool;
    0x11 : ValidationMode               : enum wh::xgenaimodule::NPCState::E_ValidationMode::Type;
    0x18 : LinkRuntimeInitSource        : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x38 : ExpectedItemClass            : struct CryGUID;
    0x48 : ExpectedItemClassEventSource : struct wh::xgenaimodule::NPCState::S_EffectObjectEventSource;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::I_UIDragAndDropViewer* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DocumentPhases : int {
    None                = 0,
    BeforeVavakOnFranta = 1,
    BeforeVavakOnPlayer = 2,
    Started             = 3,
    Confiscated         = 4,
    Done                = 5,
    NoLongerQuestItem   = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum moveBeforeLeavelevel : int {
    None       = 0,
    Moving     = 1,
    Formation  = 2,
    LeaveLevel = 3,
    Done       = 4,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_AlchemyPotionBaseDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyPotionBase,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_AlchemyPotionBase,class std::allocator<class wh::playermodule::C_AlchemyPotionBase> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct IPlatformOS* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GettingSafeConduct : int {
    None                              = 0,
    GetSafeConductFromMarika          = 1,
    RetrieveHiddenSafeConduct         = 2,
    SafeConductFound_WithInstructions = 3,
    SafeConductFound_ByAccident       = 4,
    SafeConductFound_BeforeVajdaAsked = 5,
    Failed                            = 6,
    Aborted                           = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PromluvSiSEldrisem : int {
    None                = 0,
    PromluvSiSEldrisem  = 1,
    NajdiDokumenty      = 2,
    HracMaInfoOdEldrise = 3,
    HracMaInfoDokumenty = 4,
    Aborted             = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum odnesFake : int {
    None      = 0,
    ZanesKone = 1,
    Zaneseno  = 2,
    Fail      = 3,
    Abort     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gate : int {
    Closed = 0,
    Opened = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OdmenaStraze : int {
    None            = 0,
    JdiSiProOdmenu  = 1,
    OdmenaPrijajata = 2,
    Canceled        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GluttonsBehaviorState : int {
    None                    = 0,
    Dialog                  = 1,
    GoingForFood            = 2,
    DeliveringFood          = 3,
    EatingFood              = 4,
    NoMoreFood              = 5,
    LamentingMissingGlutton = 6,
    GluttonIsMissing        = 7,
    NoMoreGluttons          = 8,
    EatenPoisonedFood       = 9,
    Done                    = 10,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::rpgmodule::storm::C_StormProgram {
    0x60 : tasks  : class std::reference_wrapper<class std::vector<class wh::rpgmodule::storm::C_Task,class std::allocator<class wh::rpgmodule::storm::C_Task> > >;
    0x48 : common : class std::reference_wrapper<class std::vector<class wh::rpgmodule::storm::C_Source,class std::allocator<class wh::rpgmodule::storm::C_Source> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyCrushableSpecialIngredient* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_AlchemyCrushableSpecialIngredientDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_AlchemyCrushableSpecialIngredient,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_AlchemyCrushableSpecialIngredient,class std::allocator<class wh::playermodule::C_AlchemyCrushableSpecialIngredient> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::rpgmodule::C_ProxyCounter<double> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_PlayerUIMapCharacter {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BergovHorseMounting : int {
    DismountedWithQuestStart        = 0,
    Mounted                         = 1,
    DismountedAndHorseCloseToHastal = 2,
    DismountedAndHorseFarFromHastal = 3,
    Finished                        = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
struct DynArray<struct wh::rpgmodule::S_RoleId,int,struct NArray::SmallDynStorage<struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> > > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::I_ReputationLog* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeItemSetAsideEffectGenerated* {
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_LockBase {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_GenericRandomEventVariant* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreleckaSoutez : int {
    None                  = 0,
    StrelivoNeprozkoumano = 1,
    StrelivoProzkoumano   = 2,
    HracViOSoutezi        = 3,
    Soutezi               = 4,
    PoSoutezi             = 5,
    Aborted               = 6,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashListRecipe : class wh::guimodule::C_UIFlashObject {
    0x8  : Id            : class CryStringT<char>;
    0x10 : Name          : class CryStringT<char>;
    0x18 : IconId        : class CryStringT<char>;
    0x20 : Category      : unsigned int;
    0x24 : Enable        : bool;
    0x28 : AveragePrice  : float;
    0x2c : EnabledAmount : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringTheBook : int {
    None          = 0,
    Started       = 1,
    GotTheBook    = 2,
    StoleTheBook  = 3,
    BoughtTheBook = 4,
    BookDelivered = 5,
    Aborted       = 6,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_BlacksmithRecipe,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kradezKnihy : int {
    None                     = 0,
    Active                   = 1,
    Updated                  = 2,
    UpdatedAfterConfiscation = 3,
    Done                     = 4,
    Canceled                 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProximityTriggeredDialog : int {
    None      = 0,
    Waiting   = 1,
    Dialog    = 2,
    Done      = 3,
    Cancelled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CampVezak : int {
    None            = 0,
    Accept          = 1,
    UpdatedOnClue   = 2,
    UpdatedOnCamp   = 3,
    PoacherKilled   = 4,
    DoneWithFreedom = 5,
    DoneWithArrest  = 6,
    Failed          = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SingleCartRide : int {
    None              = 0,
    WaitingOrMounting = 1,
    Driving           = 2,
    Done              = 3,
    Failed            = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LostSword : int {
    None                            = 0,
    Started                         = 1,
    FoundCapon                      = 2,
    SpokeWithBailifSonSucces        = 3,
    SpokeWithBailifSonFail          = 4,
    FoundSwordWithoutHelp           = 5,
    FoundSwordWithHelpFromCapon     = 6,
    FoundSwordWithHelpFromBailifSon = 7,
    Aborted                         = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Challenge : int {
    None       = 0,
    InProgress = 1,
    Won        = 2,
    Lost       = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::dialogmodule::data::C_DialogueNode>* {
};

//size in bytes: 0x1
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<struct wh::rpgmodule::S_SkillLessonLevel> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::entitymodule::S_Genderace {
    0x0 : Gender : enum wh::entitymodule::E_ActorGender;
    0x4 : Race   : enum wh::entitymodule::E_Race::Type;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_Stash *,class std::allocator<class wh::entitymodule::C_Stash *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_Stash *,class std::allocator<class wh::entitymodule::C_Stash *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_InterfaceTriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_TriggerPort, class wh::conceptmodule::C_ActiveTriggerPort {
    0x28 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value     : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type      : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x30 : Direction : enum wh::conceptmodule::E_PortDirection;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MigrationStatesVavak : int {
    VavaksHome     = 0,
    Ruthardka      = 1,
    RuthardkaDebug = 2,
    BackHome       = 3,
    BackHomeDebug  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleOfCimburk : int {
    None          = 0,
    Battle        = 1,
    FailedStealth = 2,
    CumansDead    = 3,
    PlayerLeft    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::combatmodule::E_BattleEvent::Type>* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::conceptmodule::C_InterfaceDataPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_DataPort {
    0x28 : Name      : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value     : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type      : class std::basic_string_view<char,struct std::char_traits<char> >;
    0x30 : Direction : enum wh::conceptmodule::E_PortDirection;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<bool> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_RiderActionIn : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_RiderActionBase {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_AndSelector : class wh::rpgmodule::storm::I_Selector, class wh::rpgmodule::storm::C_CompositeSelector {
    0x8 : selectors : class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector> > >;
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::entitymodule::C_ActionActor {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_FocusPriority {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::I_ItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudInteractiveDialog* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NebakovFaze : int {
    None                     = 0,
    PtacekJeUZizky           = 1,
    PtacekOdchaziACekaUStaji = 2,
    PtacekOdeselZNebakova    = 3,
    NebakovJeOdstreamovan    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BaslanTalkToPillager : int {
    None     = 0,
    Move     = 1,
    Dialog   = 2,
    Chat     = 3,
    Bark     = 4,
    Done     = 5,
    Canceled = 6,
};

//size in bytes: 0xf0
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimDropRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_StanceTrigger* {
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::rpgmodule::S_Crime {
    0x0  : label                  : class CryStringT<char>;
    0x8  : isCrime                : bool;
    0xc  : importance             : int;
    0x10 : fine                   : int;
    0x14 : jail                   : int;
    0x18 : confiscation           : bool;
    0x20 : metaroleLabel          : class CryStringT<char>;
    0x28 : isViolent              : bool;
    0x29 : scalingWithSocialClass : bool;
    0x2c : expiration             : float;
    0x30 : isSpreadable           : bool;
    0x38 : ui_name                : class CryStringT<char>;
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HandContentElementRequired : class wh::xgenaimodule::NPCState::I_Element, class wh::xgenaimodule::NPCState::C_HandContentElement {
};

//size in bytes: 0x1f8
//pointer dimension: 0
class wh::dialogmodule::data::C_FaderDialogueNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::dialogmodule::data::C_DialogueNode {
    0x10  : Name           : class CryStringT<char>;
    0x18  : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40  : Dialogue       : class std::reference_wrapper<class wh::dialogmodule::data::C_Dialogue>;
    0xf3  : VoiceNamespace : bool;
    0xf8  : PlayDialogue   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1b8 : AutoPlay       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x138 : BeforePlay     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : AfterPlay      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ac79a0
enum enum wh::playermodule::E_FTDisableRandomEvents::Type : unsigned char {
    None          = 0,
    NonGuaranteed = 1,
    Generic       = 2,
    All           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum stealthTakedown_stage : int {
    firstTakedown  = 0,
    secondTakedown = 1,
    repeatTakedown = 2,
    none           = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::I_ActorAction* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CombatAutomationsElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PassageEntrance : int {
    Before = 0,
    During = 1,
    After  = 2,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_CharacterOperator<struct wh::rpgmodule::storm::operation::Add> : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x199fb10
    get : pattern : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_DialogueWrapper* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourState : int {
    None               = 0,
    GoingToLeaningSpot = 1,
    Leaning            = 2,
    Done               = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
struct Color_tpl<float> {
    0x0 : R : float;
    0x4 : G : float;
    0x8 : B : float;
    0xc : A : float;
};

//size in bytes: 0x18
//pointer dimension: 0
class boost::container::flat_map<struct wh::xgenaimodule::navigation::S_NavMeshSource,struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationSerializedCheckResult,struct std::less<struct wh::xgenaimodule::navigation::S_NavMeshSource>,void> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkabandAfterAmbushStates : int {
    None                = 0,
    ZevlingAtAmbushSite = 1,
    GoneToCertovka      = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::musicmodule::C_Address {
    //Getter: WHGame.dll+0x2e4074c
    get : RenderAsString : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindBook : int {
    None            = 0,
    SpokeWithRoza   = 1,
    EnteredMaleshov = 2,
    FoundBook       = 3,
    DidntFindBook   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HealingMikus : int {
    None              = 0,
    Diagnose          = 1,
    NoDiagnosis       = 2,
    BadDiagnosis      = 3,
    PreciseDiagnosis  = 4,
    MikusNotCuredWell = 5,
    MikusCured        = 6,
    FailedSvatava     = 7,
    FailedVendula     = 8,
    FailedMikus       = 9,
    Aborted           = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrisonerState : int {
    None      = 0,
    InPillory = 1,
    Fleeing   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_BodyPart::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReachingVillage : int {
    None             = 0,
    PlayerIsRunning  = 1,
    WaitingForPlayer = 2,
    Done             = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_EnableBehavior* {
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimDropRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimDropRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimDropRequest> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::xgenaimodule::I_Area *,class std::allocator<class wh::xgenaimodule::I_Area *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerBase* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_PhaseItemEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::playermodule::C_Smithery {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeUnstanceEffect : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8  : DataSource                        : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : TargetUnstance                    : unsigned int;
    0x18 : Fragment                          : class CryStringT<char>;
    0x20 : Tags                              : class CryStringT<char>;
    0x28 : ValidationMode                    : enum wh::xgenaimodule::NPCState::E_ValidationMode::Type;
    0x29 : RequiresExplicitActionRuntimeInit : bool;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::C_SpawnItemEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SkillTeacherSoulComponent* {
};

//size in bytes: 0x10
//pointer dimension: 0
class boost::optional<struct wh::framework::S_TimeSpan> {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::guimodule::C_BasicFader<class wh::guimodule::C_FaderController> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OfkaAndGluttons : int {
    InitialPolylog       = 0,
    GluttonsGoingToFeast = 1,
    Done                 = 2,
    Failed               = 3,
    Canceled             = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MurderWeaponQI : int {
    None        = 0,
    AfterMurder = 1,
    Player      = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_ReputationPropagationKind {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum sound : int {
    invalid            = 0,
    combat             = 1,
    lockpick           = 2,
    movement           = 3,
    sharpener          = 4,
    whistle            = 5,
    combatScript       = 6,
    door               = 7,
    decoy_distract     = 8,
    smell              = 9,
    bio_hunger         = 10,
    bio_exhaustion     = 11,
    bio_drunkeness     = 12,
    bow_fired          = 13,
    gun_fired          = 14,
    arrow_hit          = 15,
    bullet_hit         = 16,
    speech             = 17,
    dramatic_bark      = 18,
    alarm              = 19,
    startled_critter   = 20,
    hunting_alarm      = 21,
    dog_bark           = 22,
    dog_attack_command = 23,
    dog_distract       = 24,
    thrash             = 25,
    lure_distract      = 26,
    photo_mode         = 27,
    perfume            = 28,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EnterToCamp : int {
    WithoutPasswordCheck = 0,
    InFrontOfTheCustoms  = 1,
    Customs              = 2,
    InCamp               = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SamuelAndMother : int {
    None               = 0,
    SamuelGoesToMother = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum kumaniNaTrosecku_pubFightEscalation : int {
    None               = 0,
    BarkingFromTable   = 1,
    CumansLeaving      = 2,
    ChasingOutCumans   = 3,
    BarkingNearPubExit = 4,
    Done               = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetPerfume : int {
    None                = 0,
    AcquirePerfume      = 1,
    AcquirePerfumeAgain = 2,
    PerfumeAcquired     = 3,
    Canceled            = 4,
    Aborted             = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_BattlementAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TemporaryImmortality : int {
    None                     = 0,
    PlayerIsInArea           = 1,
    PlayerIsCloseToCapon     = 2,
    PlayerIsFarAwayFromCapon = 3,
    TimeRunOut               = 4,
    Disabled                 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ButcherFight : int {
    None         = 0,
    WaitForFight = 1,
    PlayerFlee   = 2,
    Fight        = 3,
    Done         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum banditsTalking : int {
    None  = 0,
    Start = 1,
    Pause = 2,
    Stop  = 3,
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActionAdditiveAnimRequestImpl<struct wh::entitymodule::S_ActionAdditiveAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionAdditiveAnimRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActionAdditiveAnimRequest>, struct wh::entitymodule::S_ActionAnimRequestImpl<struct wh::entitymodule::S_ActionAdditiveAnimRequest> {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::playermodule::C_BlockTutorial : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Tutorial     : class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_TutorialName>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HanusStreaming : int {
    None                         = 0,
    StreamedRatborPolylog        = 1,
    UnstreamedRatborPolylogEnd   = 2,
    StreamedRatborGodwinGameplay = 3,
    UnstreamedRatborKonecRady    = 4,
    StreamedFinale               = 5,
    UnstreamedFinale             = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LostConcubine : int {
    None                = 0,
    Started             = 1,
    FailedSkillcheck    = 2,
    SuccesfulSkillcheck = 3,
    Aborted             = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Trace* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InvisibleActiveProgress : int {
    None            = 0,
    InvisibleActive = 1,
    VisibleActive   = 2,
    Done            = 3,
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimItemHandlingRequestImpl<struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest, struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPutItemInInventoryRequest> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamShorts : int {
    StreamedShorts = 0,
    StreamedFlag   = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GuardsOnPalisade : int {
    None          = 0,
    ChatOnPlayer  = 1,
    GuardsTalking = 2,
    Done          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dice_initDialogResultType : int {
    startMinigame = 0,
    npcOutOfMoney = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3992eb8
enum enum wh::xgenaimodule::scheduler::E_Aliveness::Type : unsigned char {
    Alive              = 0,
    Dead               = 1,
    Unconscious        = 2,
    DeadOrUnconscious  = 3,
    AliveOrUnconscious = 4,
    DeadOrAlive        = 5,
    Any                = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VazounEvent : int {
    None           = 0,
    EventMuzeZacit = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum rozhaneniDobytka : int {
    None          = 0,
    active        = 1,
    done          = 2,
    canceledMysi  = 3,
    bonz          = 4,
    ovceMrtve     = 5,
    someoneDied   = 6,
    olbramDied    = 7,
    canceledOther = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TournamentFightProgress : int {
    None               = 0,
    GetReady           = 1,
    Fight              = 2,
    AfterFight         = 3,
    Done               = 4,
    DoneDiskvalifikace = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum lekPrinesenState : int {
    None                = 0,
    PrinesenPoZadani    = 1,
    PrinesenPredZadanim = 2,
};

//size in bytes: 0xc8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::I_Element* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::I_Area *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MasterstrikeTutorialKH : int {
    None            = 0,
    Phase0_starting = 1,
    Phase0_active   = 2,
    Phase1_starting = 3,
    Phase1_active   = 4,
    Phase2_starting = 5,
    Phase2_active   = 6,
    Phase3_starting = 7,
    Phase3_active   = 8,
    Done            = 9,
    Failed          = 10,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulDeathTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZiskejMapuZpet : int {
    None                = 0,
    HracZtratilMapu     = 1,
    HracZnovuZiskalMapu = 2,
    Aborted             = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WoodcuttersGuarding : int {
    None                    = 0,
    GuardingWithTrespass    = 1,
    GuardingWithoutTrespass = 2,
    CurrentlyInSkirmish     = 3,
    Aborted                 = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > {
};

//size in bytes: 0x1a0
//pointer dimension: 0
class wh::xgenaimodule::C_ReadAIMessage : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xf8  : MailboxHost  : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0xb8  : OnMessage    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : Sender       : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    //Getter: WHGame.dll+0x3163f28
    get   : MessageType  : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::C_SoulPoolBase {
    0x8  : Name           : class CryStringT<char>;
    0x10 : CombatLevelMin : float;
    0x14 : CombatLevelMax : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7ad48
enum enum wh::conceptmodule::E_NodeUpdatePriority : int {
    Normal       = 0,
    AutoExecuted = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_VariableDecision* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionHomeSlotAutoReturnItemSetAside : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerAddBuff* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HelpBailiffToStopFights : int {
    None                                = 0,
    BailiffWantsHenryToHelp             = 1,
    BailiffDoesntWantHenryToHelp        = 2,
    FightsAreCanceledAndRewardIsWaiting = 3,
    Completed                           = 4,
    Aborted                             = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::game::C_ContentFilterSubstitution>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PathToPub : int {
    None                    = 0,
    GoToFightSpot           = 1,
    InFight                 = 2,
    FrancekIsUnconscious    = 3,
    FrancekIsNotUnconscious = 4,
    TheyAreAtPub            = 5,
    Done                    = 6,
    Fail                    = 7,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_StanceAnimData {
    0x0  : ActorClassName : class CryStringT<char>;
    0x8  : Stance         : enum wh::entitymodule::E_StanceCategory::Type;
    0x10 : LoopFragment   : class CryStringT<char>;
    //Getter: WHGame.dll+0x32ffa2c
    get  : LoopTags       : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zacniLecbu : int {
    None    = 0,
    Active  = 1,
    Done    = 2,
    Cancel  = 3,
    Cancel2 = 4,
    TooLate = 5,
    Aborted = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_IntermissionTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_Beard* {
};

//size in bytes: 0x2
//pointer dimension: 0
class boost::optional<enum wh::xgenaimodule::scheduler::E_Weather::Type> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SkirmishEventType::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum papezskyLegat_legateChase : int {
    Waiting = 0,
    Chasing = 1,
    Dying   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarelAndSack : int {
    None                    = 0,
    CarringSackWithJindrich = 1,
    CarringSackAlone        = 2,
    PlaceSack               = 3,
    SitAndWait              = 4,
    Completed               = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_SmartAreaAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::entitymodule::C_ActorActionFastTravel : class wh::framework::I_Action, class wh::framework::C_Action<class wh::entitymodule::I_ActorAction>, class wh::entitymodule::I_ActorAction, class wh::entitymodule::C_ActorAction<class wh::entitymodule::I_ActorAction,class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_RandomEventOption::Type>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_Body* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TemplatedNode* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LazarInteractions : int {
    None                          = 0,
    InspectionAvailable           = 1,
    InspectionAndHealingAvailable = 2,
    Solution1Attempt              = 3,
    Solution2Attempt              = 4,
    Solution3Attempt              = 5,
    LazarHealed                   = 6,
    Disabled                      = 7,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::C_SkillReward : class wh::rpgmodule::I_Reward {
    0x8  : Type             : class CryStringT<char>;
    0x10 : ExperienceChange : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_FilterInput> {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::entitymodule::C_ActorActionRider : class wh::framework::I_Action, class wh::entitymodule::I_ActorAction {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_StatisticTrigger> {
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_EntityScriptContextPreset> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_OrSelector : class wh::rpgmodule::storm::I_Selector, class wh::rpgmodule::storm::C_CompositeSelector {
    0x8 : selectors : class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SkirmishEventRole* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::rpgmodule::S_LocationId* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BalsanAndPlayerOnHorse : int {
    None          = 0,
    BalsanOnHorse = 1,
    PlayerOnHorse = 2,
    Done          = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightWithSlama : int {
    None                   = 0,
    Fight_withSurrender    = 1,
    Fight_withoutSurrender = 2,
    OpponentSurrender      = 3,
    PlayerWon              = 4,
    PlayerLost             = 5,
    Aborted                = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_GameOverId>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_SwitchItemDescriptor* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MysiFailujuValkami : int {
    None            = 0,
    QuestSeFailuje  = 1,
    QuestVyfailovan = 2,
};

//size in bytes: 0xc8
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartEntityTemplate : struct wh::xgenaimodule::S_DatabaseIDTemplate {
    //Getter: WHGame.dll+0x199fb10
    get  : DatabaseId               : struct CryGUID;
    0x48 : Name                     : class CryStringT<char>;
    //Getter: WHGame.dll+0x9f7d80
    get  : Resources                : class std::vector<struct wh::xgenaimodule::S_SmartResource,class std::allocator<struct wh::xgenaimodule::S_SmartResource> >;
    0x50 : BehaviorTemplates        : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_SmartBehaviorTemplate,class std::allocator<struct wh::xgenaimodule::S_SmartBehaviorTemplate> > >;
    0x18 : BrainId                  : struct CryGUID;
    0x28 : UpdatePriority           : bool;
    0x29 : ExpectedOnNavigationMesh : bool;
    //Getter: WHGame.dll+0x320c8dc
    get  : DefaultUnstanceResource  : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x320c8a4
    get  : DefaultStanceResource    : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x320c86c
    get  : DefaultOneshotResource   : class boost::optional<class CryStringT<char> >;
    //Getter: WHGame.dll+0x9f7944
    get  : UnstanceResources        : class std::vector<struct wh::xgenaimodule::S_SmartEntityTemplate::S_UnstanceResourceRecord,class std::allocator<struct wh::xgenaimodule::S_SmartEntityTemplate::S_UnstanceResourceRecord> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TournamentCrime : int {
    None          = 0,
    Attributed    = 1,
    NonAttributed = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum baraCurrentBehavior : int {
    None                           = 0,
    BarkAtPlayer                   = 1,
    WaitForPlayerToLeave           = 2,
    PostponingHibernationForOneDay = 3,
    Done                           = 4,
    Abort                          = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CertMigration : int {
    InCertovka                   = 0,
    CertovkaSetkaniVRatbori2     = 1,
    SuchdolPapezskyLegat         = 2,
    RuthardkaPapezskyLegat       = 3,
    SuchdolPapezskyLegatEndQuest = 4,
    CertovkaEndGame              = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekOdjezdNebakov : int {
    None                             = 0,
    VimZePtakJeReadyOdjet            = 1,
    HenryPrvniBarkNemamHoNechatCekat = 2,
    HenryUdelalFTaPtakJeNaTroskach   = 3,
    PtakOdjelSam                     = 4,
    CancelCombat                     = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SittingInPub : int {
    None                   = 0,
    InstantSittingEveryone = 1,
    SittingEveryone        = 2,
    SittingVillagers       = 3,
    Done                   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_Timer* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_DogPointLayer,class std::vector> {
};

//size in bytes: 0xc
//pointer dimension: 0
struct Vec3_tpl<float> {
    0x0 : X : float;
    0x4 : Y : float;
    0x8 : Z : float;
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::guimodule::C_UIPickpocketing : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::entitymodule::C_InventoryPreset : class wh::entitymodule::C_ItemHealthProvider {
    0x8  : Quality            : unsigned int;
    0xc  : Health             : float;
    0x10 : HealthVariation    : float;
    0x14 : Condition          : float;
    0x18 : ConditionVariation : float;
    0x20 : Name               : class CryStringT<char>;
    0x28 : PresetItems        : class std::reference_wrapper<class std::vector<class wh::entitymodule::C_PresetItemBase *,class std::allocator<class wh::entitymodule::C_PresetItemBase *> > >;
    0x40 : Mode               : enum wh::entitymodule::C_InventoryPreset::E_GeneratorMode::Type;
    0x44 : ModeValue          : float;
    0x48 : ModeValueVariation : float;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b20b58
enum enum wh::combatmodule::E_CombatTutorialPreset::Type : unsigned char {
    TutorAutomations = 0,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KasparRingHoldership : int {
    None               = 0,
    KasparOwner        = 1,
    PlayerOwner        = 2,
    CervenakOwner      = 3,
    PlayerWantToKeepIt = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DocumentItemClass* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::animationmodule::S_FragmentIdleStateData {
    0x0 : Fragment : class CryStringT<char>;
    0x8 : Stance   : enum wh::entitymodule::E_StanceCategory::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum bookDelivery : int {
    none      = 0,
    started   = 1,
    deliver   = 2,
    completed = 3,
    aborted   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FriendlyDuelAtWedding : int {
    None     = 0,
    Started  = 1,
    InDuel   = 2,
    Won      = 3,
    Lost     = 4,
    Canceled = 5,
    Aborted  = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::I_UIMenu {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KlaraOdmena : int {
    None                         = 0,
    CekaciBod                    = 1,
    Svlekani                     = 2,
    SexProbihaNaha               = 3,
    SexProbihaOblecena           = 4,
    SexProbehl                   = 5,
    VyhrozovaniProbehloUspesne   = 6,
    VyhrozovaniProbehloNeuspesne = 7,
    Canceled                     = 8,
    Aborted                      = 9,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeEquipmentCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8 : RequiredDefault : bool;
};

//size in bytes: 0x1
//pointer dimension: 0
struct rttr::detail::invalid_wrapper_type {
};

//size in bytes: 0xb0
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseManager {
    0x30 : Databases            : class std::reference_wrapper<class std::vector<class wh::databasemodule::C_ObjectDatabaseBase *,class std::allocator<class wh::databasemodule::C_ObjectDatabaseBase *> > >;
    0x60 : NameIndexedDatabases : class std::reference_wrapper<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class wh::databasemodule::C_ObjectDatabaseBase *,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class wh::databasemodule::C_ObjectDatabaseBase *> > > >;

    //non-vtable method: WHGame.dll+0x2665ea4
    LoadAll( bool );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PubQuest : int {
    None           = 0,
    Active         = 1,
    ChangedHisMind = 2,
    HunterDead     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SetOwner* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SkillReward* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KasparKontrolujePoklad : int {
    None        = 0,
    Kontroluje  = 1,
    PokladChybi = 2,
    KasparZuril = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NovaSpojenectvi : int {
    None    = 0,
    Started = 1,
    Done    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_GameOverTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::xgenaimodule::scheduler::E_Aliveness::Type>* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_OpenShopElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TourCourtyard : int {
    None             = 0,
    Smitny           = 1,
    CestaAChat       = 2,
    DialogWithCsaba  = 3,
    Csaba            = 4,
    SilentFinish     = 5,
    WaitingForDialog = 6,
    JeronymNervous   = 7,
    Done             = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::tests::Bar* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_CarryItemPileAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZjistovaniKone : int {
    None                                 = 0,
    ProzkoumejKone                       = 1,
    PoptejSePodkoniho                    = 2,
    PoptejSePodkonihoZnameInfoOdKapitana = 3,
    PoptejSeKapitanaZnameInfoOdPodkoniho = 4,
    MamePodezreniOKonich                 = 5,
    Canceled                             = 6,
    CanceledMichal                       = 7,
    CanceledPelcl                        = 8,
    Aborted                              = 9,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff150
enum enum wh::entitymodule::E_MovementSpeed::Type : unsigned char {
    idle   = 0,
    walk   = 1,
    run    = 2,
    sprint = 3,
    dash   = 4,
};

//size in bytes: 0xf8
//pointer dimension: 0
struct wh::entitymodule::S_ActiveQuestItem : struct wh::entitymodule::S_QuestItemInfo, struct wh::entitymodule::S_ExistingQuestItem {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasFaction : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_UseItemTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrackingClues : int {
    None                = 0,
    TrackingWagonTracks = 1,
    TrackingWagon       = 2,
    TrackingHensl       = 3,
    TrackingBanditCamp  = 4,
    TrackingFinished    = 5,
    Completed           = 6,
    Failed              = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_FactionBase* {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeAreaLabelElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekAndCertAfterBattle : int {
    None         = 0,
    Wait         = 1,
    IngameDialog = 2,
    AfterDialog  = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_ForcedDialogueNode* {
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::entitymodule::S_ItemClass {
    0x8  : Id   : struct CryGUID;
    0x18 : Name : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_TeleportAction* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_EquipmentSlot* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum bohutovaVlozka_erik_battlefieldPhases : int {
    None             = 0,
    WaitingForBohuta = 1,
    GivingOrders     = 2,
    Completed        = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetContest : int {
    None           = 0,
    Opening        = 1,
    HorseRacing    = 2,
    MountedArchery = 3,
    DecidingCombat = 4,
    ContestWon     = 5,
    ContestLost    = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hunterSearch : int {
    none      = 0,
    done      = 1,
    zlataHint = 2,
    vitekHint = 3,
    fail      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
unsigned long* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::combatmodule::C_CombatCombo {
    //Getter: WHGame.dll+0x5f0530
    get  : Id                : class CryStringT<char>;
    //Getter: WHGame.dll+0x10a0f10
    get  : RightWeapon       : class CryStringT<char>;
    //Getter: WHGame.dll+0x10a0f10
    get  : LeftWeapon        : class CryStringT<char>;
    0x28 : CombatTechniqueId : struct CryGUID;
    0x38 : UIGroup           : enum wh::combatmodule::E_UIComboGroup::Type;
    0x3c : UIOrder           : int;
    0x40 : CombatComboSteps  : class std::vector<class wh::combatmodule::C_CombatComboStep,class std::allocator<class wh::combatmodule::C_CombatComboStep> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamedStatusPetr : int {
    StreamedInitial                = 0,
    UnstreamedDebug                = 1,
    UnstreamedOblehani             = 2,
    UnstreamedAfterPointOfNoReturn = 3,
    LeftLevel                      = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GotoAmbushProgress : int {
    None            = 0,
    ActiveFar       = 1,
    ActiveFarMapa   = 2,
    ActiveNear      = 3,
    Done            = 4,
    CanceledSvatava = 5,
    CanceledVendula = 6,
    Aborted         = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeMinigameUsageEffect* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3afef20
enum enum wh::rpgmodule::E_RandomEventOption::Type : unsigned char {
    None      = 0,
    SureThing = 1,
    Evade     = 2,
    Ambush    = 3,
    Flee      = 4,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_EdgePort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamVranik : int {
    UnstreamedDefault = 0,
    StreamedU34       = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerAddMetaRole* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ForcedSleeping : int {
    None                  = 0,
    ListenPlayerLiedOnBed = 1,
    DuringSkiptime        = 2,
    GettingUp             = 3,
    Done                  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Obchodnici : int {
    None            = 0,
    Barkovani       = 1,
    Chat            = 2,
    PoChatu         = 3,
    PoIngameDialogu = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TavernBedStreaming : int {
    BedWithPillow   = 0,
    BedNoPillow     = 1,
    WaitForUnstream = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_Stash *,class std::allocator<class wh::entitymodule::C_Stash *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BailiffInvestigation : int {
    None               = 0,
    CheckBailiffHouse  = 1,
    CheckPond          = 2,
    CheckFarm          = 3,
    CheckTailor        = 4,
    CheckButcher       = 5,
    CheckBlacksmith    = 6,
    ReturnToTavern     = 7,
    InvestigationEnded = 8,
};

//size in bytes: 0x288
//pointer dimension: 0
class wh::playermodule::C_RandomEvent : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase, class wh::playermodule::C_RandomEventBase {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode    : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace   : class boost::optional<bool>;
    0x60  : Types            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC      : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x128 : Profile          : class std::optional<class CryStringT<char> >;
    0x138 : Cooldown         : class std::optional<struct wh::framework::S_TimeSpan>;
    0xa8  : OnSpawn          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xe8  : OnDespawn        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x270 : Tags             : class std::reference_wrapper<class std::vector<struct wh::playermodule::S_RandomEventTag,class std::allocator<struct wh::playermodule::S_RandomEventTag> > >;
    0x1f0 : ActivateCooldown : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x230 : IsEnabled        : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x2
//pointer dimension: 0
short {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_OrSelector* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BartosuvDenik : int {
    None     = 0,
    Precteny = 1,
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::conceptmodule::C_MemberFunction : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::entitymodule::clothing::C_ComponentAttachmentManager : class wh::entitymodule::I_ClothingAttachmentManager, class wh::entitymodule::C_ClothingAttachmentManager {
    //Getter: WHGame.dll+0x19ba500
    get : Features           : class std::vector<class wh::entitymodule::clothing::C_ClothingFeature,class std::allocator<class wh::entitymodule::clothing::C_ClothingFeature> >;
    //Getter: WHGame.dll+0x2830840
    get : HidingGroups       : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x2830940
    get : Morphs             : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x574ba8
    get : UberlodQuery       : struct wh::entitymodule::clothing::S_UberlodQuery;
    //Getter: WHGame.dll+0x3ed434
    get : UberlodQueryResult : struct wh::entitymodule::clothing::S_Uberlod;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_StatReward* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LootingSoldiersProgress : int {
    None    = 0,
    Looting = 1,
    Leaving = 2,
    Left    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
const void* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulStateEffectContextData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightInPubObjective : int {
    None       = 0,
    InProgress = 1,
    Won        = 2,
    Lost       = 3,
    Aborted    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::questmodule::C_Gameplay* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct E_ClothCollisionMode {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::rpgmodule::S_ReputationChangeRequest {
    0x8  : value           : float;
    0x10 : SourceChangeId  : int;
    0x18 : SourceFactionId : class CryStringT<char>;
    0x20 : Cap             : class boost::optional<float>;
    //Getter: WHGame.dll+0x2bda408
    get  : Name            : class CryStringT<char>;
};

//size in bytes: 0x80
//pointer dimension: 0
struct wh::engine3d::S_HLodConfig {
    0x8  : ClusterSwitchingDistanceMin              : float;
    0xc  : ClusterSwitchingDistanceMultiplier       : float;
    0x10 : ClusterSwitchingDistanceExponent         : float;
    0x14 : InteriorSwitchingDistance                : float;
    //Getter: WHGame.dll+0x33f8354
    get  : VegetationSwitchingDistances             : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x30 : SwitchingDistanceIn2D                    : int;
    0x34 : HysteresisDistance                       : float;
    0x38 : SignificantObjectRatio                   : float;
    0x3c : ViewDistRatioOverride                    : int;
    0x40 : ViewDistRatioOverrideRadiusThreshold     : float;
    0x44 : UseDissolve                              : int;
    0x48 : StreamBrushInstances                     : int;
    0x4c : StreamingFramesUntilUnload               : int;
    0x50 : StreamingMaxReleasedPerFrame             : int;
    0x54 : StreamingMaxUpdatedPerFrame              : int;
    0x58 : StreamingFramesUntilObjectLoadingTimeout : int;
    0x5c : SimulateSlowStreamingFrameCount          : int;
    0x60 : DebugDraw                                : int;
    0x64 : DebugSwitchingDistance                   : int;
    0x68 : DebugSelectedOnly                        : int;
    0x6c : DebugTypeFilter                          : int;
    0x70 : DebugColoring                            : int;
    0x74 : DebugLabel                               : int;
    0x78 : MaxStreamingTasks                        : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_FactionRelation* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_NotSelector : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0xcacbd0
    get : selector : class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::BehaviorTree::C_CallDecorator* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum followDrunkenUdo : int {
    None               = 0,
    FollowUdo          = 1,
    IntervenedInAmbush = 2,
    Failed             = 3,
    Canceled           = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AdditiveLog : int {
    None = 0,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InRomansRoom : int {
    None              = 0,
    AreaBarkActive    = 1,
    InteractorsActive = 2,
    Finished          = 3,
    Aborted           = 4,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_DoorAnimSet,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekShieldHoldership : int {
    Jezek          = 0,
    JezekInventory = 1,
    Henry          = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DonesSoudekTovarysum : int {
    None                 = 0,
    DonesSoudekTovarysum = 1,
    PoDialogu            = 2,
    NekdoUmrel           = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NomadsHonourQuestEnding : int {
    None                             = 0,
    BetWon_VajdaReconciledWithMarika = 1,
    BetLost_ArankaHelpedMarika       = 2,
    BetLost_SafeConductHandedOver    = 3,
    SafeConductGivenToVajda          = 4,
    AmuletStolen_VajdaHasBeenKilled  = 5,
    AmuletStolen_VajdaIsAlive        = 6,
};

//size in bytes: 0x60
//pointer dimension: 0
struct wh::entitymodule::S_ClothingPreset : class wh::entitymodule::C_ItemHealthProvider {
    0x8  : Quality              : unsigned int;
    0xc  : Health               : float;
    0x10 : HealthVariation      : float;
    0x14 : Condition            : float;
    0x18 : ConditionVariation   : float;
    0x20 : clothing_preset_id   : struct CryGUID;
    0x30 : clothing_preset_name : class CryStringT<char>;
    0x38 : gender               : enum wh::entitymodule::E_ActorGender;
    0x39 : prefers_hood_on      : bool;
    0x3c : social_class_id      : int;
    0x40 : wealth_level         : int;
    0x48 : Items                : class std::reference_wrapper<class std::vector<struct CryGUID,class std::allocator<struct CryGUID> > >;
};

//size in bytes: 0xe0
//pointer dimension: 0
class wh::xgenaimodule::C_SetGameContext : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_GameScriptContext> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Context      : class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_GameScriptContext>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_PoisonItemClass* {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::playermodule::C_DisableRandomEvent : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : RandomEventTag : class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_RandomEventTag>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7abb8
enum enum wh::entitymodule::E_CartSpeed::Type : unsigned char {
    normal = 0,
    fast   = 1,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::entitymodule::S_CatWaypointDefinition {
    0x8  : Position      : struct Vec3_tpl<float>;
    0x14 : Jumping       : bool;
    0x15 : FollowTerrain : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_WorldQuantity* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_DespawnItemEventImplementation* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::combatmodule::C_CombatHitInfo {
    0x8  : BodySubpartId : int;
    0xc  : AttackCoef    : float;
    0x10 : HandSlot      : int;
    0x18 : SubInfos      : class std::reference_wrapper<class std::vector<struct wh::combatmodule::S_CombatHitSubInfo,class std::allocator<struct wh::combatmodule::S_CombatHitSubInfo> > >;
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_BattlementAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_BlacksmithSong* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_theftMethod : int {
    unknown             = 0,
    loot                = 1,
    lootCorpse          = 2,
    lootUnconsciousBody = 3,
    kettleEating        = 4,
    pick                = 5,
    pickpocket          = 6,
    seenEquipped        = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ShopAsset* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::T_WorldTimePolicy {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ElementAt* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3af6ef0
enum enum wh::entitymodule::E_DeliveryResult::Type : unsigned char {
    Success         = 0,
    Canceled        = 1,
    WrongItems      = 2,
    MissingItems    = 3,
    StolenMismatch  = 4,
    QualityMismatch = 5,
    PriceMismatch   = 6,
    Invalid         = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DodelejCenka : int {
    None         = 0,
    DodelejCenka = 1,
    CenekDone    = 2,
    StulecDone   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChallengeFrantisekToNightFight : int {
    None           = 0,
    Started        = 1,
    ChallengeDay   = 2,
    ChallengeNight = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindTreasure : int {
    None     = 0,
    Active   = 1,
    Update   = 2,
    Done     = 3,
    Canceled = 4,
    Aborted  = 5,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<class std::shared_ptr<class wh::entitymodule::clothing::C_Component>,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_ClothingPresetOverride* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillingDog : int {
    None     = 0,
    Active   = 1,
    Done     = 2,
    Canceled = 3,
    Aborted  = 4,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::guimodule::C_UIFlashMapLocalMap : class wh::guimodule::C_UIFlashObject {
    0x8  : Id                : class CryStringT<char>;
    0x10 : Name              : class CryStringT<char>;
    0x18 : X                 : float;
    0x1c : Y                 : float;
    0x20 : Width             : float;
    0x24 : Height            : float;
    0x28 : ActiveX           : float;
    0x2c : ActiveY           : float;
    0x30 : ActiveWidth       : float;
    0x34 : ActiveHeight      : float;
    0x38 : ActiveAreaEllipse : bool;
    0x3c : TileWidth         : unsigned int;
    0x40 : TileHeight        : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ToSecretTunnel : int {
    None     = 0,
    Entrance = 1,
    Licht    = 2,
    Done     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MedicineForMarika : int {
    None                   = 0,
    GetMedicineFromAranka  = 1,
    GatherMedicine_Started = 2,
    GatherMedicine_Updated = 3,
    MedicineAcquired       = 4,
    MedicineDelivered      = 5,
    Failed                 = 6,
    Aborted                = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum rodinaUGoclina : int {
    None          = 0,
    GoclinVylecen = 1,
    GoclinUmrel   = 2,
    Done          = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_ScriptContextDatabaseNode* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_RelationshipFlagDefinitionID {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::environmentmodule::C_SunEffect* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoubleAbort : int {
    None         = 0,
    Started      = 1,
    Completed    = 2,
    AbortedDeath = 3,
    Aborted      = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AreInSameSkirmish* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DivisibleItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_TeleportFastForwardSyncAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayersAssaultResult : int {
    None              = 0,
    AttackedVillagers = 1,
    AttackedSoldiers  = 2,
    KilledVillageHead = 3,
    KilledCommander   = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_MetaRoleOperator<struct wh::rpgmodule::storm::operation::Add> : class wh::rpgmodule::storm::I_Operator {
    0x8 : ID   : class CryStringT<char>;
    //Getter: WHGame.dll+0x9a5924
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WorldTimePausing : int {
    None              = 0,
    QuestActive       = 1,
    BathActive        = 2,
    BathDone          = 3,
    fakeTimeskip      = 4,
    fakeTimeskipEnded = 5,
    NextDayMorning    = 6,
    QuestDone         = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIItemSelection {
};

//size in bytes: 0x158
//pointer dimension: 0
class wh::xgenaimodule::C_LinkEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::xgenaimodule::C_LinkEffectBase {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x98 : From         : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >*;
    0xd8 : To           : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > >*;
    //Getter: WHGame.dll+0x61a1d0
    get  : Tag          : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DialogInMetro : int {
    None     = 0,
    Ingame   = 1,
    Dialogue = 2,
    Finished = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum bookCollecting : int {
    None               = 0,
    FindAllBooks       = 1,
    FindRemainingBooks = 2,
    FoundAllBooks      = 3,
    DeliveredAllBooks  = 4,
    Canceled           = 5,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::C_SoulStateEffectContextData {
    0x8 : Id                   : enum wh::rpgmodule::E_SoulStateEffectContext::Type;
    0xc : StaminaRegenCooldown : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SaveTheMosquito : int {
    None                 = 0,
    Started              = 1,
    FightAfterCutscene   = 2,
    NoFightAfterCutscene = 3,
    FightWithoutCutscene = 4,
    WaitedTooLong        = 5,
    Completed            = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp1_Tanner : int {
    None                    = 0,
    ConfrontTanner          = 1,
    ConfrontTannerCompleted = 2,
    Failed                  = 3,
    Canceled                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BrabantHorseStreaming : int {
    None                                   = 0,
    StreamedNonameZachranaPtacka           = 1,
    UnstreamedRatbor1                      = 2,
    StreamedNamedSetkaniVRatbori           = 3,
    UnstreamedNamedZikmunduvTaborStart     = 4,
    StreamedNamedZikmunduvTaborEnd         = 5,
    UnstreamedNamedPrepadeniVlasskehoDvora = 6,
    StreamedNamedStealthMiseZaJindru       = 7,
    UnstreamedNamedStealthMiseZaJindru     = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::data::S_FastForwardRequest* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::C_LocalizedString* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KaterinaProgress : int {
    None            = 0,
    TalkToInnkeeper = 1,
    WaitForPlayer   = 2,
    Done            = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionSearchRequestFlags* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_AddMetaroleElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NightWatchPalisade : int {
    None             = 0,
    CheckingDistance = 1,
    ChatActive       = 2,
    Done             = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::framework::I_UIHudMessages {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FrenclChatBeforeBattle : int {
    None         = 0,
    ChatActive   = 1,
    MoveToBattle = 2,
    Done         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemLetterToMarkolt : int {
    None     = 0,
    Jindrich = 1,
    Markolt  = 2,
    Bailiff  = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum frenczlChatMove : int {
    None       = 0,
    ActiveChat = 1,
    ActiveMove = 2,
    Done       = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_PickableItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Prepadeni_findPathInRocks : int {
    None         = 0,
    FindPath     = 1,
    BackToPtacek = 2,
    Done         = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4428
enum enum wh::entitymodule::E_OutfittingMode::Type : unsigned char {
    Unequip    = 0,
    Equip      = 1,
    ForceEquip = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3993188
enum enum wh::conceptmodule::E_PortSpecification::Type : unsigned char {
    Unknown              = 0,
    InputDataPort        = 1,
    OutputDataPort       = 2,
    InterfaceDataPort    = 3,
    InputTriggerPort     = 4,
    OutputTriggerPort    = 5,
    InterfaceTriggerPort = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZiskejKoneOW : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_ScriptCommand : class wh::dialogmodule::data::C_Command {
    0x8  : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay      : float;
    0xe  : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : Lua        : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIApse* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_LastElement> {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct S_TriggerEffect,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasAFaction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Katakomby : int {
    Zed            = 0,
    NicProCS       = 1,
    ProkopanaZed   = 2,
    ZhroucenyTunel = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HandContentElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AlcoholSpeedBoosters : int {
    None            = 0,
    DigestBooster   = 1,
    AntidoteBooster = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AnnaFocusCam : int {
    None      = 0,
    CamActive = 1,
    CamDone   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LazarHealing : int {
    None               = 0,
    Started            = 1,
    OneAnswerSucces    = 2,
    TwoAnswersSucces   = 3,
    ThreeAnswersSucces = 4,
    Failed             = 5,
    Aborted            = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulUiNameOverride> {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_CheckEntityContextType {
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ForeignLevelItem : struct wh::entitymodule::S_QuestItemInfo, struct wh::entitymodule::S_ExistingQuestItem, struct wh::entitymodule::S_ActiveQuestItem {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::S_AIConceptSignal {
    0x0 : Name       : class CryStringT<char>;
    0x8 : Parameters : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_AIConceptSignalParameter,class std::allocator<struct wh::xgenaimodule::S_AIConceptSignalParameter> > >;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::scheduler::E_InitializationMode {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PickWine : int {
    None  = 0,
    Ready = 1,
    Red   = 2,
    White = 3,
    Done  = 4,
};

//size in bytes: 0x180
//pointer dimension: 0
class wh::conceptmodule::Haste::C_HasteTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x80  : ConsoleCommands : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >*;
    0xc0  : Prerequisites   : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::conceptmodule::C_ConceptPath,class std::allocator<class wh::conceptmodule::C_ConceptPath> > >*;
    0x140 : IsHidden        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x100 : OnTrigger       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SaveHunter : int {
    None         = 0,
    StartExplore = 1,
    StartWife    = 2,
    Done         = 3,
    Canceled     = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Inventory *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BorderPeg : int {
    None    = 0,
    Tachov  = 1,
    Center  = 2,
    Zelejov = 3,
    Player  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithViktorka : int {
    None                       = 0,
    Active                     = 1,
    PlayerLied                 = 2,
    PlayerBroughtSoldier       = 3,
    ViktorkaPersuaded          = 4,
    SoldierWantsViki           = 5,
    SoldierDoesntWantViki      = 6,
    SoldierIsDead              = 7,
    FailedSkillcheckGoodEnding = 8,
    ViktorkaMovesToCertovka    = 9,
    Aborted                    = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_DetachEventImplementation* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitForLichtLoad : int {
    None    = 0,
    Loading = 1,
    Done    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudMask* {
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::entitymodule::S_ActionIdleQueryData : struct wh::entitymodule::S_ActionQueryData {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::game::I_LevelData {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29be0
enum enum wh::rpgmodule::E_VoiceCategory::Type : unsigned char {
    generic   = 0,
    cuman     = 1,
    german    = 2,
    romani    = 3,
    jew       = 4,
    christian = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MillersAxe : int {
    Unequipped = 0,
    Equipped   = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class CCamera* {
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemDestructible : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Health           : float;
    0x54 : ItemHealthState  : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39931d8
enum enum AttachmentTypes : int {
    Bone       = 0,
    Face       = 1,
    Skin       = 2,
    Proxy      = 3,
    PendulaRow = 4,
    VCloth     = 5,
    Invalid    = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleProgress : int {
    None        = 0,
    PhaseOne    = 1,
    PhaseTwo    = 2,
    BattleEnded = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum wagonProgress : int {
    None      = 0,
    Loading   = 1,
    Departed  = 2,
    Unloading = 3,
    Done      = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::playermodule::C_AlchemyPotionBase {
    0x8  : BaseItemId : struct CryGUID;
    0x18 : BaseType   : enum wh::playermodule::E_AlchemyPotionBaseType::Type;
    0x1c : Quality    : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum streamedState : int {
    StreamedInitial = 0,
    Unstreamed      = 1,
    Streamed        = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_AmmoItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_AssetInterfacePort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VyberFighters : int {
    None        = 0,
    VybranPrvni = 1,
    VybranDruhy = 2,
    VybranTreti = 3,
    Done        = 4,
};

//size in bytes: 0x158
//pointer dimension: 0
class wh::dialogmodule::data::C_DialogueDataManager : class wh::conceptmodule::C_NodeManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum vokrakStreaming : int {
    StreamedInitial = 0,
    Unstreamed      = 1,
    Streamed        = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<double> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp1_ExamineCamp : int {
    None                 = 0,
    ExamineCamp          = 1,
    ExamineCampCompleted = 2,
    Failed               = 3,
    Abort                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum cheering_reactionType : int {
    Happy = 0,
    Sad   = 1,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_AnimationHeadCommand : class wh::dialogmodule::data::C_Command, class wh::dialogmodule::data::C_AnimationCommand {
    0x8 : Role            : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get : Delay           : float;
    0xe : TimingMode      : enum wh::dialogmodule::data::E_CommandTimingMode;
    //Getter: WHGame.dll+0x13f3434
    get : FragmentId      : class CryStringT<char>;
    //Getter: WHGame.dll+0x19b5470
    get : GUID            : struct CryGUID;
    //Getter: WHGame.dll+0x1eddb80
    get : DesiredDuration : float;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3b4fba8
enum enum wh::rpgmodule::E_SoulStateEffectContext::Type : unsigned char {
    Default                       = 0,
    WeaponRaised                  = 1,
    Attack                        = 2,
    Dodge                         = 3,
    Hit                           = 4,
    Block                         = 5,
    BrokenBlock                   = 6,
    CollisionHit                  = 7,
    Jump                          = 8,
    FallDamage                    = 9,
    ArcherySelfHarm               = 10,
    SharpeningDoPedal             = 11,
    BlacksmithingStroke           = 12,
    BlacksmithingExhaustingStroke = 13,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_informationDiffStatus : int {
    unknown = 0,
    Learned = 1,
    Forgot  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FastForwardSyncAction* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_ResourceRegistry {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dealWithSeekers : int {
    None          = 0,
    active        = 1,
    pobitiOba     = 2,
    pobitJeden    = 3,
    vyresenoNejak = 4,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<struct wh::playermodule::S_Tutorial>,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum OdevzdejTruhlicku : int {
    None              = 0,
    Active            = 1,
    OdevzdalMeInfo    = 2,
    OdevzdalNemelInfo = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum questionMari : int {
    None               = 0,
    inquiryAboutGirl   = 1,
    QuestionMari       = 2,
    LearnedAboutKozina = 3,
    LearnedNothing     = 4,
    Failed             = 5,
    Canceled           = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeathsSpravedlnost : int {
    None         = 0,
    VorsilaMrtva = 1,
    PivecMrtvy   = 2,
    PavelMrtvy   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomocBejkovi : int {
    None             = 0,
    CanStart         = 1,
    VyzvedniSiZbrane = 2,
    OdevzdejZbrane   = 3,
    Completed        = 4,
    FailedBejkDead   = 5,
    FailedBejkBeaten = 6,
    FailedHracBeaten = 7,
    Aborted          = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ConfrontLaszloFarkas : int {
    None                                = 0,
    ConfrontLaszlo_StartedWithoutMarker = 1,
    ConfrontLaszlo_StartedWithMarker    = 2,
    ConfrontLaszlo_UpdatedWithMarker    = 3,
    PactWasntEvenMentioned              = 4,
    MadePact                            = 5,
    LiedAboutMakingPact                 = 6,
    DeniedPact                          = 7,
    Failed                              = 8,
    Canceled                            = 9,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab43d8
enum enum wh::entitymodule::E_HandContextSerializationMode::Type : unsigned char {
    Serialized       = 0,
    NotSerialized    = 1,
    MoveToLinkedSlot = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HledaniDoprovodu : int {
    None    = 0,
    Lazne   = 1,
    Ennelyn = 2,
    Done    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ConceptPath* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::I_ActorActionCarry {
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::entitymodule::clothing::C_UberlodDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::clothing::S_Uberlod,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::clothing::S_Uberlod,class std::allocator<struct wh::entitymodule::clothing::S_Uberlod> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowOnBackyardWithWoman : int {
    None           = 0,
    Wait           = 1,
    BarkInside     = 2,
    Brutality      = 3,
    AfterBrutality = 4,
    AssaultPlayer  = 5,
    Finished       = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_InstantSendMessage> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIGameOver* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_FirstElement> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct Vec3_tpl<float> > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::clothing::C_ClothingAttachmentProxy::E_GameState {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_ItemSlot *,class std::allocator<class wh::entitymodule::C_ItemSlot *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_ItemSlot *,class std::allocator<class wh::entitymodule::C_ItemSlot *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ReadAIMessage> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulUiNameOverride* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::TypeDescriptors::S_Value {
    0x0 : Name  : class CryStringT<char>;
    0x8 : Value : int;
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::C_SoulLevelCounter : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SoulPropertyCounter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BergovMigration : int {
    Default = 0,
    Suchdol = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoorGuarding : int {
    None                      = 0,
    DoorClosed                = 1,
    DoorOpenedByPlayerNotSeen = 2,
    DoorOpenedSeen            = 3,
    DoorDontCare              = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_UIComboGroup {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DobreSeBav : int {
    None                   = 0,
    SpeakToAll             = 1,
    SpeakToCertAndBrabant  = 2,
    SpeakToCertAndBocek    = 3,
    SpeakToBrabantAndBocek = 4,
    SpeakToCert            = 5,
    SpeakToBocek           = 6,
    SpeakToBrabant         = 7,
    Done                   = 8,
    Aborted                = 9,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bd76a8
enum enum wh::entitymodule::clothing::C_ClothingAttachmentProxy::E_StreamingState::Type : unsigned char {
    Init      = 0,
    Loading   = 1,
    Streaming = 2,
    Error     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::framework::I_RestApiExample* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::framework::S_BaseExampleNode {
    0x8 : BaseContent : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayersCharisma : int {
    Disgusting = 0,
    Horrible   = 1,
    QuiteOk    = 2,
    Fancy      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FriendlyNpcDuelAtWedding : int {
    None    = 0,
    InDuel  = 1,
    Npc1Won = 2,
    Npc2Won = 3,
    Failed  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BlacksmithingTutorialProgress : int {
    None                     = 0,
    Vyhen_starting           = 1,
    Vyhen_active             = 2,
    NahratiObrobku_starting  = 3,
    NahratiObrobku_active    = 4,
    Teplota_starting         = 5,
    Teplota_active           = 6,
    NahratiMece_starting     = 7,
    NahratiMece_active       = 8,
    Posouvani_starting       = 9,
    Posouvani_active         = 10,
    PrvniUder_starting       = 11,
    PrvniUder_active         = 12,
    DalsiUder_starting       = 13,
    DalsiUder_active         = 14,
    Kovani_starting          = 15,
    Kovani_active            = 16,
    Otaceni_starting         = 17,
    Otaceni_active           = 18,
    Dokovani_starting        = 19,
    Dokovani_active          = 20,
    PosledniNahrati_starting = 21,
    PosledniNahrati_active   = 22,
    Konec_starting           = 23,
    Konec_active             = 24,
    Done                     = 25,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4338
enum enum wh::entitymodule::E_LoadingMovement::Type : unsigned char {
    Allow           = 0,
    AllowWhenCocked = 1,
    Disable         = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mountHorse : int {
    None          = 0,
    FirstMounting = 1,
    HorseMounted  = 2,
    Done          = 3,
    HorseDied     = 4,
    HunterDied    = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_MinigameTutorialNode> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetStrings : int {
    None                           = 0,
    Started_HuntsmanAtHome         = 1,
    Started_HuntsmanLostAndUnknown = 2,
    Started_HuntsmanLostAndKnown   = 3,
    Updated_HuntsmanAtHome         = 4,
    Done                           = 5,
    Canceled                       = 6,
    Aborted                        = 7,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<int> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<int> {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum streamTadeas : int {
    None       = 0,
    Streamed   = 1,
    Dead       = 2,
    Hung       = 3,
    Unstreamed = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SchedulerLinkActivation> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum frenczlKaterinaControl : int {
    None     = 0,
    Waiting  = 1,
    Chatting = 2,
    Duel     = 3,
    Activity = 4,
    Done     = 5,
};

//size in bytes: 0x70
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeItemSetAsideEffectGenerated : class wh::xgenaimodule::NPCState::I_Effect, class wh::xgenaimodule::NPCState::C_EffectBase {
    0x8  : DataSource                       : enum wh::xgenaimodule::NPCState::E_DataSource;
    0x10 : ItemRuntimeInitSource            : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x30 : SlotRuntimeInitSource            : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x50 : HandRuntimeInitSource            : enum wh::xgenaimodule::E_HandType::Type;
    0x54 : AllowItemInitFromHand            : bool;
    0x55 : AllowItemInitFromDataSourceState : bool;
    0x56 : AllowFindingSourceSlotOnly       : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_DogPointLayer* {
};

//size in bytes: 0xe8
//pointer dimension: 0
class wh::conceptmodule::C_PatchTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Node> {
    0x10 : Name                  : class CryStringT<char>;
    0x18 : RuntimeState          : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports                 : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView             : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x68 : OnPatch               : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xa8 : TransitionFromVersion : class wh::conceptmodule::C_TypedPortRef<enum wh::framework::E_GameReleaseVersion::Type>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::conceptmodule::C_SceneWrapper : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_OutfittingMode {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitializerAddContext* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulDerivedStat> > {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::guimodule::C_TrackViewCutscene : class wh::guimodule::I_Cutscene, class wh::guimodule::C_TrackViewBase {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
    //Getter: WHGame.dll+0x2a5d0ec
    get  : Checkpoints               : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x90 : CopySoulVisual            : class boost::optional<bool>;
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::combatmodule::S_CombatHitSubInfo {
    0x8  : OppGuardStanceId     : int;
    0x10 : OppWeaponCombination : class CryStringT<char>;
    0x18 : BodySubpartId        : int;
    0x1c : AttackCoef           : float;
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::I_StoredDecision {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_GenericRandomEventVariant> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CarryFakeFail : int {
    None         = 0,
    ActiveFirst  = 1,
    DoneFirst    = 2,
    ActiveSecond = 3,
    DoneSecond   = 4,
    Canceled     = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasCharacterName* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zakopanyZitrek_hankaProgress : int {
    None             = 0,
    NobodyDead       = 1,
    VendulaDead      = 2,
    BothDead         = 3,
    TimeLimitExpired = 4,
    CrisisAverted    = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::databasemodule::I_DatabaseModule {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PolylogAKatakomby : int {
    None         = 0,
    Polylog      = 1,
    Tour         = 2,
    Chat         = 3,
    FavorPolylog = 4,
    Cekani       = 5,
    Done         = 6,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_PerkOperator<struct wh::rpgmodule::storm::operation::Remove> : class wh::rpgmodule::storm::I_Operator {
    0x8 : ID   : struct CryGUID;
    //Getter: WHGame.dll+0x2c836c4
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeAreaLabelElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InnkeeperApology : int {
    None                                    = 0,
    BeforeApology                           = 1,
    ApologyHappenedAfterFight               = 2,
    ApologyHappenedInTimeFightNotStartedYet = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_InformationDiffTrigger* {
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::guimodule::C_UIGameOver : class wh::guimodule::C_UIBase {

    //vtable offset: 0x0
    Show( string const &, int, classstd::function<void__cdecl(void)> );
    //vtable offset: 0x8
    Hide( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AfterCeremony : int {
    None            = 0,
    Started         = 1,
    DidNotMeetDrunk = 2,
    MetDrunk        = 3,
    Aborted         = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::dialogmodule::C_DialogModule {
    0x10 : DialogManager : class wh::dialogmodule::C_DialogManager*;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WokeUpByVazoun : int {
    None   = 0,
    WokeUp = 1,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::playermodule::S_RandomEventOption,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetHead* {
};

//size in bytes: 0x98
//pointer dimension: 0
class wh::playermodule::C_PlayerModule {
    //Getter: WHGame.dll+0x8c3c80
    get : RandomEventManager : class wh::playermodule::C_RandomEventManager*;
    //Getter: WHGame.dll+0x18d4150
    get : TutorialManager    : class wh::playermodule::C_TutorialManager*;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_WeaponClass* {
};

//size in bytes: 0x8
//pointer dimension: 1
class CMatInfo* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ThroughThePassage : int {
    None                  = 0,
    StartedOutsidePassage = 1,
    StartedInsidePassage  = 2,
    EnterThePassage       = 3,
    PassageEntered        = 4,
    Done                  = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_TimerState {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_RandomEventManager* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_PropCommand : class wh::dialogmodule::data::C_Command {
    0x8 : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get : Delay      : float;
    0xe : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
};

//size in bytes: 0x1c8
//pointer dimension: 0
class wh::playermodule::C_LockpickingResultTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name               : class CryStringT<char>;
    0x18  : RuntimeState       : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports              : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView          : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive           : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : LockpickableEntity : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LockpickableEntity *>*;
    0xf8  : OnLockpicked       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnFailed           : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x178 : OnInterrupted      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_MonologByMetaroleEventImplementation* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CombatTutorialProgress : int {
    None                   = 0,
    Vytaseni_starting      = 1,
    Vytaseni_active        = 2,
    Utok_starting          = 3,
    Utok_active            = 4,
    ChainStrike_starting   = 5,
    ChainStrike_active     = 6,
    Blok_starting          = 7,
    Blok_active            = 8,
    PerfectBlock_starting  = 9,
    PerfectBlock_active    = 10,
    Riposta_starting       = 11,
    Riposta_active         = 12,
    ZasahMimoZonu_starting = 13,
    ZasahMimoZonu_active   = 14,
    Finished               = 15,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::clothing::C_ElementBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AlsikDryak : int {
    None                  = 0,
    Started               = 1,
    FoodReady             = 2,
    FoodTaken             = 3,
    WaitForFood           = 4,
    FoodPoisoned          = 5,
    Done                  = 6,
    CanceledSheepFinished = 7,
    CanceledOther         = 8,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3aff010
enum enum wh::entitymodule::E_ItemDeliveryMode::Type : unsigned char {
    CanMore     = 0,
    CanLess     = 1,
    Exactly     = 2,
    Any         = 3,
    AnyInfinite = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum InitializeBattleGroup : int {
    None                  = 0,
    Active                = 1,
    WeaponSetup           = 2,
    BattleCommandComplete = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressDoomed : int {
    None     = 0,
    Active   = 1,
    Canceled = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PoslechniSiStulce : int {
    None               = 0,
    PromluvSiSeStulcem = 1,
    Done               = 2,
    Canceled           = 3,
    Aborted            = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VezniTestingStage : int {
    None           = 0,
    ApolenaTesting = 1,
    CastleTesting  = 2,
    DoneTesting    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dluzniUpisIOUstate : int {
    None   = 0,
    Chest  = 1,
    Player = 2,
    Grozav = 3,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsLightSource : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource     : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate         : bool;
    0x10 : Hand           : enum wh::xgenaimodule::E_HandType::Type;
    0x18 : RequiresWeapon : bool;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorMountedTrigger> {
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::conceptmodule::I_Port>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZavodNaKonichHrac : int {
    None             = 0,
    DojedDoPrvniArey = 1,
    DojedDoCile      = 2,
    Hotovo           = 3,
};

//size in bytes: 0x150
//pointer dimension: 0
class wh::questmodule::C_Quest : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98  : HibernateMode    : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99  : VoiceNamespace   : class boost::optional<bool>;
    0x60  : Types            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78  : Assets           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48  : Nodes            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b  : RequiredDLC      : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get   : NodesView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0xf0  : Type             : enum wh::questmodule::E_QuestType;
    0xf8  : QuestName        : class wh::framework::C_LocalizedString;
    0x108 : QuestDescription : class wh::framework::C_LocalizedString;
    0x118 : Difficulty       : int;
    0x11c : IsImportant      : bool;
    //Getter: WHGame.dll+0x2a1df7c
    get   : Players          : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0xb0  : Progress         : class wh::conceptmodule::C_TypedPortRef<enum wh::questmodule::E_QuestProgress>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum bathhouse_barberTry : int {
    tryChosenHair  = 0,
    tryChosenBeard = 1,
    revert         = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::xgenaimodule::S_RelationScriptContext>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab3d48
enum enum wh::rpgmodule::E_SoulStaticStat : unsigned int {
    shadiness        = 0,
    combatLevel      = 1,
    initialDirtiness = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WithEmerichAboutDie : int {
    None       = 0,
    Started    = 1,
    FoundDie   = 2,
    WithoutDie = 3,
    Aborted    = 4,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingAttachmentProxy {
    //Getter: WHGame.dll+0x199fb10
    get : Description    : struct wh::entitymodule::clothing::S_ClothingAttachmentDesc;
    //Getter: WHGame.dll+0x19bc1c0
    get : GameState      : enum wh::entitymodule::clothing::C_ClothingAttachmentProxy::E_GameState::Type;
    //Getter: WHGame.dll+0x19a11a0
    get : StreamingState : enum wh::entitymodule::clothing::C_ClothingAttachmentProxy::E_StreamingState::Type;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_RuntimeState : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_CutsceneHolderAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::rpgmodule::S_CharacterBodyDescription {
    0x0  : Body      : class wh::databasemodule::T_TableString;
    0x8  : Head      : class wh::databasemodule::T_TableString;
    0x10 : Hair      : class wh::databasemodule::T_TableString;
    0x18 : Beard     : class wh::databasemodule::T_TableString;
    0x20 : Underwear : class wh::databasemodule::T_TableString;
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_HorseUsageElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LuteOwner : int {
    Woodworker = 0,
    Player     = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UmistiSoudek : int {
    None            = 0,
    PolozSoudek     = 1,
    SoudekPolozen   = 2,
    OdeselSeSoudkem = 3,
    Aborted         = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindTheHans : int {
    None                         = 0,
    SpokeWithMosquito            = 1,
    SpokeWithInnkeeperInMiskovic = 2,
    SpokeWithBailiff             = 3,
    FoundHans                    = 4,
    ReleasedHans                 = 5,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_EquipmentPresetFilter,class std::vector> {
};

//size in bytes: 0x158
//pointer dimension: 0
struct wh::rpgmodule::S_SoulStaticData : struct wh::rpgmodule::S_SoulStaticDBData {
    0x74 : CombatLevel              : class wh::databasemodule::T_TableDataType<float>;
    0x20 : CharacterBodyDescription : class std::reference_wrapper<struct wh::rpgmodule::S_CharacterBodyDescription>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mrtvolaNaRameni : int {
    Zadna  = 0,
    Kozlik = 1,
    Mikes  = 2,
    Bores  = 3,
};

//size in bytes: 0x230
//pointer dimension: 0
class wh::conceptmodule::C_RandomEventConceptStreaming {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EldrisoviDokumenty : int {
    None             = 0,
    DokumentyVTruhle = 1,
    DokumentyUHrace  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum bergovDebriefObjective : int {
    None                   = 0,
    Active                 = 1,
    DoneRaidToSeminGranted = 2,
    DoneRaidToSeminRefused = 3,
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::guimodule::C_UIBook : class wh::guimodule::C_UIBase {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::combatmodule::E_CombatTutorialDomain::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkWithBeruska : int {
    None                   = 0,
    Started                = 1,
    DiscussedHenrysVictory = 2,
    DiscussedHenrysLoss    = 3,
    Aborted                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum lovVlkuProgress : int {
    None    = 0,
    Active  = 1,
    Lurk    = 2,
    JobDone = 3,
    Done    = 4,
    TimesUp = 5,
    Died    = 6,
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::rpgmodule::C_TimeCounter<struct wh::rpgmodule::T_WorldTimePolicy> : class wh::rpgmodule::C_Counter {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::rpgmodule::C_SkirmishEventDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::rpgmodule::C_SkirmishEventTypeData,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::rpgmodule::C_SkirmishEventTypeData,class std::allocator<class wh::rpgmodule::C_SkirmishEventTypeData> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ItemHandlingAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitializerOpenShop* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::conceptmodule::C_ConceptPath,class std::allocator<class wh::conceptmodule::C_ConceptPath> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x30
//pointer dimension: 0
struct S_TriggerEffect {
    0x1  : TriggerEffectCommand : struct S_TriggerEffectCommand;
    0x20 : Action               : class CryStringT<char>;
    0x28 : RequiresActivation   : bool;
    0x29 : EffectType           : enum E_TriggerEffectType::Type;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ItemOnGroundAsset* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasLocation : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x2cc2014
    get : name : class CryStringT<char>;
    0x8 : ID   : struct wh::rpgmodule::S_LocationId;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetHair* {
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::playermodule::C_Pickpocketing : class wh::playermodule::I_Minigame, class wh::playermodule::C_Minigame {
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::playermodule::C_BlacksmithWorkpiece {
    0x8  : Id                : class CryStringT<char>;
    0x10 : Model             : class CryStringT<char>;
    0x18 : Tag               : class CryStringT<char>;
    0x20 : AudioSwitch       : class CryStringT<char>;
    0x28 : Zones             : unsigned int;
    0x2c : UseTongs          : bool;
    0x30 : RaycastAttachment : class CryStringT<char>;
    0x38 : InitialPosition   : struct Vec2_tpl<float>;
    0x40 : MapSize           : struct Vec2_tpl<float>;
    0x48 : MapOffset         : struct Vec2_tpl<float>;
    0x50 : MapRotation       : struct Ang3_tpl<float>;
    0x5c : StartMinPosition  : struct Vec2_tpl<float>;
    0x64 : EndMinPosition    : struct Vec2_tpl<float>;
    0x6c : StartMaxPosition  : struct Vec2_tpl<float>;
    0x74 : EndMaxPosition    : struct Vec2_tpl<float>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum maidChoose : int {
    None  = 0,
    Maid1 = 1,
    Maid2 = 2,
    Maid3 = 3,
    Maid4 = 4,
    Maid5 = 5,
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_Function> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_FunctionBase, class wh::conceptmodule::C_Function, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Function> {
    0x10 : Name          : class CryStringT<char>;
    0x18 : RuntimeState  : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports         : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView     : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : MethodName    : class CryStringT<char>;
    //Getter: WHGame.dll+0x25db4f8
    get  : DeclaringType : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_ContextPresetOperator<struct wh::rpgmodule::storm::operation::Add>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum feast4Wines : int {
    None    = 0,
    01Timer = 1,
    01      = 2,
    02Timer = 3,
    02      = 4,
    03Timer = 5,
    03      = 6,
    04Timer = 7,
    04      = 8,
    Done    = 9,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_MenuButtonDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuButton,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::guimodule::C_UIMenuButton,class std::allocator<class wh::guimodule::C_UIMenuButton> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_AlchemyState {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitializerChangeAreaLabel* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MotherStreaming : int {
    UnstreamedInitial = 0,
    StreamedDebug     = 1,
    UnstreamedDebug   = 2,
    StreamedFinale    = 3,
    UnstreamedFinale  = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PolylogTracking : int {
    None      = 0,
    Tracking  = 1,
    Available = 2,
    Done      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a29c30
enum enum wh::rpgmodule::E_SoulCrimeRole::Type : int {
    none     = 0,
    civilian = 1,
    soldier  = 2,
    renegade = 3,
    monk     = 4,
    circator = 5,
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_FaderCutscene : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemAmmo : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Slash            : float;
    0x58 : Stab             : float;
    0x60 : Smash            : float;
    0x68 : BuffName         : class CryStringT<char>;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_MenuPageDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::guimodule::C_UIMenuPage,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::guimodule::C_UIMenuPage,class std::allocator<class wh::guimodule::C_UIMenuPage> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_CombatAnimationStepData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillPlesnivec : int {
    None          = 0,
    KillBandits   = 1,
    BanditsKilled = 2,
    Fail          = 3,
    Aborted       = 4,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::entitymodule::C_EquipmentSlot,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_MonologByAliasEventImplementation* {
};

//size in bytes: 0x390
//pointer dimension: 0
class wh::combatmodule::C_CombatTutorialNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> > {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : Tutor           : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x100 : Domain          : class wh::conceptmodule::C_TypedPortRef<enum wh::combatmodule::E_CombatTutorialDomain::Type>*;
    0x140 : InitialPhase    : class wh::conceptmodule::C_TypedPortRef<int>*;
    0x300 : CustomStepEvent : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x180 : OnTutorialEnd   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1c0 : OnPhaseStart    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x200 : Phase           : class wh::conceptmodule::C_TypedPortRef<int>*;
    0x240 : OnSuccessEvent  : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x280 : OnFailEvent     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x2c0 : OnPhaseSkipped  : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x340 : Tracker         : class wh::conceptmodule::C_TypedPortRef<struct wh::questmodule::S_Tracker>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::dialogmodule::data::S_Response* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_ShopAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_RandomEventGlobalCooldown {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_SmartObjectAnimations,class std::vector> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_MaxCounter<double>* {
};

//size in bytes: 0x1d0
//pointer dimension: 0
class wh::rpgmodule::C_SoulSkirmishTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name            : class CryStringT<char>;
    0x18  : RuntimeState    : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports           : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView       : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive        : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Souls           : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xf8  : EventSoul       : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x138 : EventTargetSoul : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0x178 : SoulJoined      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DocumentsSwap : int {
    None                 = 0,
    HracMaFalesneDokunty = 1,
    HracVymenilDokumenty = 2,
    ObjectiveDone        = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasFactionLabel : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::playermodule::C_Smithery *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UnstanceCondition* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum animationApproach : int {
    dontPlayDialogAnimations          = 0,
    tryDialogAnimations               = 1,
    playDialogAnimationsIfFaderDialog = 2,
    ingameDialogPoseAndAnimations     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ItemManipulationVariation* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShootingTutorial : int {
    None       = 0,
    FirstShot  = 1,
    SecondShot = 2,
    Completed  = 3,
    Aborted    = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StashInHoleInspection : int {
    None             = 0,
    Diggable         = 1,
    StashInspectable = 2,
    StashInspected   = 3,
    Aborted          = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitializerHandContent* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PlayerMenBuffs : int {
    None      = 0,
    Slept     = 1,
    Exhausted = 2,
    Done      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FairChalenge : int {
    None        = 0,
    PreFight    = 1,
    InProgress  = 2,
    Won         = 3,
    Lost        = 4,
    LostByRules = 5,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::conceptmodule::E_TraceLevel> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x30
//pointer dimension: 0
struct wh::playermodule::S_RandomEventFastTravelData {
    0x0  : MapIcon     : enum wh::playermodule::E_RandomEventMapIcon::Type;
    0x8  : Caption     : class wh::framework::C_LocalizedString;
    0x18 : Description : class wh::framework::C_LocalizedString;
    //Getter: WHGame.dll+0x2dfd5d0
    get  : OptionSet   : class CryStringT<char>;
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::rpgmodule::C_FactionTreeDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::rpgmodule::C_Faction>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::C_Faction>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::C_Faction> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObjectiveTruce : int {
    None             = 0,
    Active           = 1,
    Done             = 2,
    FailNegotiation  = 3,
    FailJakesKilled  = 4,
    FailBozenaKilled = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_DecisionEntryGrayOutMode {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_Node : class wh::conceptmodule::C_SharedResource {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WoodcutterConfronting : int {
    None         = 0,
    Woodcutter_1 = 1,
    Woodcutter_2 = 2,
    Woodcutter_3 = 3,
    Woodcutter_4 = 4,
    Woodcutter_5 = 5,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<struct wh::rpgmodule::S_SkillTeacher,class std::vector> {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::playermodule::S_PlayerId {
    0x8 : PlayerId : int;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_CarryItemPile *,class std::allocator<class wh::entitymodule::C_CarryItemPile *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1420
//pointer dimension: 0
class wh::guimodule::C_UIShop : class wh::guimodule::C_UIBase, class wh::framework::I_UIShop {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::storm::operation::Modify {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DialogBetweenHankaSvatavaVendula : int {
    None            = 0,
    WaitForJindrich = 1,
    Dialog          = 2,
    Done            = 3,
    Canceled        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindGraves : int {
    None             = 0,
    FromVrba         = 1,
    FromKuratko      = 2,
    FromBynek        = 3,
    FromBynekUpdated = 4,
    LootFound        = 5,
    Canceled         = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::playermodule::I_Minigame {
};

//size in bytes: 0x8
//pointer dimension: 1
const double* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Wolves : int {
    None     = 0,
    Arriving = 1,
    Fighting = 2,
    Daycycle = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zbranePanaSemina_TalkInTroskovice : int {
    None             = 0,
    TrackingDistance = 1,
    BehaviorStarted  = 2,
    TurnToHenry      = 3,
    Done             = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum UnderArrest : int {
};

//size in bytes: 0x8
//pointer dimension: 1
struct QuatT_tpl<float>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SecondChurch : int {
    None                    = 0,
    FormationToSecondChurch = 1,
    AlignAtSecondChurch     = 2,
    Done                    = 3,
    Fail                    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_PickUpEventImplementation* {
};

//size in bytes: 0x38
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeBehaviorStateElementRequired : class wh::xgenaimodule::NPCState::I_Element, class wh::xgenaimodule::NPCState::C_ChangeBehaviorStateElement {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_RandomEventPlace> {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ForeignLevelItem* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum odevzdaniMajky : int {
    None        = 0,
    Active      = 1,
    Done        = 2,
    Canceled    = 3,
    Confiscated = 4,
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorIdleState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ziskavaniKnihy : int {
    None                 = 0,
    ActiveImmediate      = 1,
    Done                 = 2,
    DoneWithNikKnowledge = 3,
    Canceled             = 4,
    Lost                 = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum gatherEvidenceAgainstVavak : int {
    None                    = 0,
    Started                 = 1,
    UpdatedAfterMines       = 2,
    UpdatedInSecretMint     = 3,
    UpdatedSearchSecretMint = 4,
    UpdatedAfterSecretMint  = 5,
    Completed               = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum zastavKrvaceni : int {
    none     = 0,
    Active   = 1,
    Active2  = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightArenaBarrier : int {
    Unstreamed = 0,
    Streamed   = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_SkirmishEventRole {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum speech_ingameDialogType : int {
    Ingame = 0,
    Chat   = 1,
    Bark   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_EntityScriptContextPreset>* {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoSoulProperty : class wh::guimodule::C_UIFlashObject {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : IconId          : class CryStringT<char>;
    0x20 : Type            : int;
    0x28 : Description     : class CryStringT<char>;
    0x30 : BaseLevel       : int;
    0x34 : BuffedLevel     : int;
    0x38 : Maximum         : int;
    0x3c : LevelProgress   : float;
    0x40 : LevelProgressXP : int;
    0x44 : NextLevelXP     : int;
    0x48 : PerkPoints      : unsigned int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SchedulerLinkActivation* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FightInitiationMode : int {
    Once     = 0,
    Repeated = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetsSize : int {
    None      = 0,
    SmallBet  = 1,
    MediumBet = 2,
    BigBet    = 3,
    Failed    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_Stash>* {
};

//size in bytes: 0xe0
//pointer dimension: 0
struct wh::entitymodule::S_MiscItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass, struct wh::entitymodule::S_DivisibleItemClass, struct wh::entitymodule::S_TypedItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
    0xb0 : IsDivisible                    : bool;
    0xb8 : ContainerModel                 : class CryStringT<char>;
    0xc0 : ContainerMaterial              : class CryStringT<char>;
    0x8  : Type                           : int;
    0xc  : SubType                        : int;
    0xd8 : ManipulationType               : int;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_CarryItemTarget> {
};

//size in bytes: 0x198
//pointer dimension: 0
class wh::xgenaimodule::C_NonInteractiveLedgeTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Ledges       : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_LedgeObject *,class std::allocator<class wh::entitymodule::C_LedgeObject *> > >*;
    0xf8  : OnUsed       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : UsedLedge    : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_LedgeObject *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum woundedBeSick : int {
    None                   = 0,
    DialogBeforeTrialog    = 1,
    Assault                = 2,
    DialogAfterTrialogGood = 3,
    DialogAfterTrialogBad  = 4,
    BeSick                 = 5,
    Canceled               = 6,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3e87040
enum enum wh::guimodule::E_ButtonId::Type : unsigned char {
    Invalid                          = 0,
    Resume                           = 1,
    Apply                            = 2,
    Reset                            = 3,
    Back                             = 4,
    Continue                         = 5,
    TryAgain                         = 6,
    NewGame                          = 7,
    NewGameDebug                     = 8,
    NewGameDebugTrosecko             = 9,
    SaveGame                         = 10,
    LoadGame                         = 11,
    PreviouslyKCD                    = 12,
    Settings                         = 13,
    HelpOverlays                     = 14,
    DLC                              = 15,
    Credits                          = 16,
    Exit                             = 17,
    SaveExit                         = 18,
    SaveReset                        = 19,
    GameSettings                     = 20,
    GraphicSettings                  = 21,
    AdvancedGraphics                 = 22,
    SoundSettings                    = 23,
    Controls                         = 24,
    Keybinds                         = 25,
    PhotoMode                        = 26,
    LangVoice                        = 27,
    LangSubtitles                    = 28,
    EnableSubtitles                  = 29,
    EnableSubtitleBarks              = 30,
    EnableTutorials                  = 31,
    EnableTutorialsHC                = 32,
    EnableTelemetry                  = 33,
    CursorVisible                    = 34,
    Resolution                       = 35,
    WindowMode                       = 36,
    Quality                          = 37,
    ShowFPS                          = 38,
    VSync                            = 39,
    RefreshRate                      = 40,
    Gamma                            = 41,
    FOV                              = 42,
    ConsoleMode                      = 43,
    Antialiasing                     = 44,
    ObjectDetail                     = 45,
    ParticlesDetail                  = 46,
    LightDetail                      = 47,
    GlobalIlluminationDetail         = 48,
    PostProcessingDetail             = 49,
    ShadingDetail                    = 50,
    ShadowsDetail                    = 51,
    TextureDetail                    = 52,
    VolumetricEffectsDetail          = 53,
    VegetationDetail                 = 54,
    CharacterDetail                  = 55,
    MotionBlur                       = 56,
    NearDof                          = 57,
    MasterVolume                     = 58,
    MusicVolume                      = 59,
    SoundVolume                      = 60,
    TobiiMaster                      = 61,
    TobiiExtendedViewEnable          = 62,
    TobiiExtendedViewSens            = 63,
    TobiiLockTargetGaze              = 64,
    TobiiInteractGaze                = 65,
    TobiiCleanUI                     = 66,
    NormalMode                       = 67,
    HardcoreMode                     = 68,
    MouseSensitivity                 = 69,
    InvetrtMouse                     = 70,
    InvertMouseCombat                = 71,
    ControllerAdaptiveTriggerEffect  = 72,
    ControllerImmersiveTriggerEffect = 73,
    ControllerLightBarEffect         = 74,
    ControllerSpeakerEffect          = 75,
    ControllerVibrations             = 76,
    ControllerDeadZone               = 77,
    ControllerVerticalInvert         = 78,
    ControllerHorizontalInvert       = 79,
    ControllerVerticalSensitivity    = 80,
    ControllerHorizontalSensitivity  = 81,
    UpscalingTechnology              = 82,
    UpscalingMode                    = 83,
    UpscalingSharpness               = 84,
    EnableSubtitleSpeakerName        = 85,
    EnableSubtitleBg                 = 86,
    SubtitleSize                     = 87,
    AutomaticRoadMagnetism           = 88,
};

//size in bytes: 0xc
//pointer dimension: 0
struct wh::rpgmodule::S_SkillTeacherLesson {
    0x0 : Skill        : enum wh::rpgmodule::E_SoulSkill;
    0x4 : Level        : int;
    0x8 : DefaultOpen  : bool;
    0x9 : DefaultKnown : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FortressStaffControl : int {
    None                          = 0,
    StaffPresent                  = 1,
    Ratbor2OutsideStaffPresent    = 2,
    Ratbor2StaffWithoutChosenOnes = 3,
    ReadyToUnstream               = 4,
    StaffGone                     = 5,
};

//size in bytes: 0x140
//pointer dimension: 0
class wh::conceptmodule::C_If : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40  : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x80  : Condition    : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xc0  : True         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x100 : False        : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SVR1_glovesQuestItem : int {
    None             = 0,
    InSlot           = 1,
    PlayerQuestItem  = 2,
    Franz            = 3,
    PlayerAfterQuest = 4,
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_ItemReferenceVectorDescriptor : class wh::entitymodule::I_ItemDescriptor, class wh::entitymodule::C_HomogenousItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_SerializedInboxTemplate {
    0x8  : InboxId  : struct CryGUID;
    0x18 : Priority : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HoriciSoudek : int {
    None = 0,
    Hori = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HelpDrunkenHuntsmanToSober : int {
    None               = 0,
    Started            = 1,
    SpokeToHim         = 2,
    HelpedHim          = 3,
    ToldHisWifeInstead = 4,
    Aborted            = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashCharacterWeaponStatSub* {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemArmor : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemEquippable {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Condition        : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : Quality          : unsigned int;
    0x5c : Durability       : unsigned int;
    0x68 : Visibility       : float;
    0x70 : Conspicuousness  : float;
    0x78 : Noise            : float;
    0x80 : Charisma         : float;
    0x84 : OrigSlash        : float;
    0x8c : OrigStab         : float;
    0x94 : OrigSmash        : float;
    0xa4 : CurrSlash        : float;
    0xac : CurrStab         : float;
    0xb4 : CurrSmash        : float;
    0xbc : Blood            : float;
    0xc0 : Dirt             : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TagPointAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Enemies : int {
    None        = 0,
    Move        = 1,
    Attack      = 2,
    FleeOrFight = 3,
    Done        = 4,
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorFollowTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect>, class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul         : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : OnFollow     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x138 : OnUnfollow   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Zaby_MaypoleStatus : int {
    None         = 0,
    StolenSeen   = 1,
    StolenUnseen = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_StanceSide {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::storm::C_CustomSelector : class wh::rpgmodule::storm::I_Selector, class wh::rpgmodule::storm::C_CompositeSelector {
    0x8  : selectors : class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector> > >;
    0x20 : name      : class CryStringT<char>;
    0x28 : mode      : enum wh::rpgmodule::storm::C_CustomSelector::Mode;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_Item *,class std::allocator<class wh::entitymodule::C_Item *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::C_Item *,class std::allocator<class wh::entitymodule::C_Item *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_AttributeOperator<struct wh::rpgmodule::storm::operation::Modify>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Resource* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReedsPathSelector : int {
    None  = 0,
    Right = 1,
    Left  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_CharacterOperator<struct wh::rpgmodule::storm::operation::Add>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableHenik : int {
    None                  = 0,
    ActiveProcek          = 1,
    ActiveVojka           = 2,
    Done                  = 3,
    HenryFlee             = 4,
    HenryLost             = 5,
    CanceledMajkaFinished = 6,
    CanceledOther         = 7,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerChangeEquipment : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid           : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role                 : class CryStringT<char>;
    0x20 : FilterName           : class CryStringT<char>;
    0x28 : OutfittingMode       : enum wh::entitymodule::E_OutfittingMode::Type;
    0x18 : IsInInstantPreSearch : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Rikonaris : int {
    None                        = 0,
    PerfectSabreBlacksmithed    = 1,
    GoodSabreBlacksmithed       = 2,
    BadSabreBlacksmithed        = 3,
    WorstSabreBlacksmithed      = 4,
    AfterQuestGoodSabreOnAranka = 5,
    AfterQuestBadSabreOnAranka  = 6,
    AfterQuestGoodSabreOnHenry  = 7,
    AfterQuestBadSabreOnHenry   = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::entitymodule::clothing::C_Clothing* {
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_TeleportFastForwardSyncAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_FastForwardSyncAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29dc0
enum enum wh::combatmodule::E_WeaponSolverMode::Type : unsigned char {
    normal                = 0,
    normalWithPenetration = 1,
    stuck                 = 2,
    stuckWithPenetration  = 3,
    recoil                = 4,
    recoilWithPenetration = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum porazSilaka : int {
    None             = 0,
    TalkToThomlin    = 1,
    PlayerWasRefused = 2,
    FightArranged    = 3,
    DefeatThomlin    = 4,
    PlayerLost       = 5,
    PlayerWon        = 6,
    Aborted          = 7,
    Canceled         = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hledaniJamy : int {
    None                  = 0,
    Started               = 1,
    UpdatedAfterFail      = 2,
    UpdatedAfterDiscovery = 3,
    Completed             = 4,
    Aborted               = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::entitymodule::I_ClothingAttachmentManager {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum guardingBejkProgress : int {
    None       = 0,
    FirstSpot  = 1,
    SecondSpot = 2,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::rpgmodule::C_SoulPoolDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::rpgmodule::C_SoulPoolBase>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::C_SoulPoolBase>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::C_SoulPoolBase> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::NPCState::C_ExplicitItemPlacedElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PockejNaPtackaJednani : int {
    None               = 0,
    Start              = 1,
    UpdateNebakNalezen = 2,
    Done               = 3,
    DoneNebakNalezen   = 4,
    Canceled           = 5,
};

//size in bytes: 0x190
//pointer dimension: 0
class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorMountState::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemHolder : int {
    None   = 0,
    Cook   = 1,
    Player = 2,
    Ptacek = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3c493f0
enum enum wh::dialogmodule::data::E_SequenceEndType : unsigned char {
    EndTopic    = 0,
    EndDialogue = 1,
    GoTo        = 2,
    Decision    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum najdiJenika : int {
    None      = 0,
    Zadano    = 1,
    Completed = 2,
    Aborted   = 3,
    Canceled  = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_TreeLocation {
    0x0 : FileName : class CryStringT<char>;
    0x8 : TreeName : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MarketaInShed : int {
    None                 = 0,
    LepekGavePlayerInfo  = 1,
    PlayerWasAtShed      = 2,
    PlayerIgnoresMarketa = 3,
    PlayerOpenedDoor     = 4,
    Done                 = 5,
    Canceled             = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PubCumansAliveness : int {
    AllAlive        = 0,
    AnyDiedInPub    = 1,
    AnyDiedNotInPub = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ba73e0
enum enum wh::questmodule::E_QuestProgress : int {
    None   = 0,
    Active = 1,
    Done   = 2,
    Failed = 3,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_HoleAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TroskyDoorState : int {
    None     = 0,
    Unlocked = 1,
    Locked   = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_SaveGameWithNotification> {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceConditionBase : class wh::xgenaimodule::NPCState::I_Condition {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::C_ItemReward : class wh::rpgmodule::I_Reward {
    0x8  : ItemClass : struct wh::entitymodule::S_ItemClassGUID;
    0x18 : Amount    : int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeadBanditStreaming : int {
    None             = 0,
    WaitingForCorpse = 1,
    CorpseStreamed   = 2,
    GraveStreamed    = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_MetaRoleOperator<struct wh::rpgmodule::storm::operation::Remove> : class wh::rpgmodule::storm::I_Operator {
    0x8 : ID   : class CryStringT<char>;
    //Getter: WHGame.dll+0x9a5924
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4518
enum enum wh::entitymodule::E_MovementDirection::Type : unsigned char {
    none     = 0,
    forward  = 1,
    backward = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BookOfPoisonQI : int {
    None    = 0,
    InChest = 1,
    Player  = 2,
    Musa    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WaitAndEnterToTunnels : int {
    None        = 0,
    SkipGroup   = 1,
    GoToTunnels = 2,
    Wait        = 3,
    Done        = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::C_AddSoulDefaultItem::E_Purpose::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_CutsceneHandler* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorIdleState::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PomozTovarysum : int {
    None            = 0,
    PomozTovarysum  = 1,
    StrazeJsouMrtve = 2,
    Canceled        = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringWater : int {
    None         = 0,
    FillFlask    = 1,
    DeliverFlask = 2,
    Done         = 3,
    Canceled     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum tour_forceLookEnabled : int {
    always        = 0,
    inDestination = 1,
    never         = 2,
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::entitymodule::S_WeaponPresetGUID {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulReputationReward* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamableCartState : int {
    NotStreamed       = 0,
    StreamRequested   = 1,
    Streamed          = 2,
    UnstreamRequested = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3e86fa0
enum enum wh::guimodule::E_ConfirmationId::Type : unsigned char {
    Invalid                   = 0,
    NewGameLostProgress       = 1,
    ExitGameLostProgress      = 2,
    SaveExitGame              = 3,
    SaveResetGame             = 4,
    ExitGame                  = 5,
    LoadSavedGame             = 6,
    DeleteSavedGame           = 7,
    Reset                     = 8,
    Apply                     = 9,
    ApplyWarningUltraSettings = 10,
    BackWarningUltraSettings  = 11,
    Back                      = 12,
    ControlsConflict          = 13,
    LanguageNotDownloaded     = 14,
    LanguageCantDownloaded    = 15,
    LoadFailed                = 16,
    GameSaved                 = 17,
    GameSavedFailed           = 18,
    OverwriteSave             = 19,
    OverwritePlayline         = 20,
    LoadOutdatedSave          = 21,
    ApplyWarningUpscaling     = 22,
    BackWarningUpscaling      = 23,
    SaveManualGame            = 24,
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::conceptmodule::C_Scene : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
struct wh::rpgmodule::S_AngrinessChangeDefinitionID {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hledaniLichtenstejna_udo_goingToGetAmbushed : int {
    None            = 0,
    GoingFromBaths  = 1,
    BeingConfronted = 2,
    GotToSafety     = 3,
    Canceled        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum shootingContest_result : int {
    FirstTime     = 0,
    Won           = 1,
    Lost          = 2,
    WaitForResult = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<struct wh::playermodule::S_RandomEventTag>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a29eb0
enum enum wh::conceptmodule::definition::E_TypeClass : int {
    ValueType     = 0,
    ReferenceType = 1,
    Enumeration   = 2,
    Sequential    = 3,
    Associative   = 4,
    Trigger       = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MysekHealingResult : int {
    None        = 0,
    HighQuality = 1,
    LowQuality  = 2,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_MinigameElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::guimodule::C_UIFlashListObjective : class wh::guimodule::C_UIFlashObject {
    0x8  : Id         : class CryStringT<char>;
    0x10 : Name       : class CryStringT<char>;
    0x18 : Index      : int;
    0x20 : Tracker    : class CryStringT<char>;
    0x28 : IsOptional : bool;
    0x29 : IsArea     : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zoufalaObranaZaBohutu_prazanSituation : int {
    None              = 0,
    ClimbingLadder    = 1,
    JumpingFromLadder = 2,
    Done              = 3,
    PrazanDied        = 4,
};

//size in bytes: 0xa8
//pointer dimension: 0
class wh::rpgmodule::C_CompanionManager {

    //non-vtable method: WHGame.dll+0x9a6994
    GetPrimaryCompanion( wh::rpgmodule::CompanionType );
    //non-vtable method: WHGame.dll+0x2c58cf0
    HasPrimaryCompanion( wh::rpgmodule::CompanionType );
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::dialogmodule::S_DecisionAlias {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_XGenAIModule* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CumanPartyPhase : int {
    BeforeStart = 0,
    PhaseOne    = 1,
    PhaseTwo    = 2,
    PartyOver   = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::NPCState::S_AnyElementPreset* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::environmentmodule::C_MoonEffect> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<bool>* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_StanceCategory {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KarelStreaming : int {
    None         = 0,
    Stream       = 1,
    Unstream     = 2,
    StreamDead   = 3,
    UnstreamDead = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_MissileWeaponClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NightAttackInitAndStart : int {
    None         = 0,
    Init         = 1,
    InitDone     = 2,
    InitAndStart = 3,
    AttackStarts = 4,
    Done         = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::scheduler::C_ElementInitiazerEnableBehaviorForNPC* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringHorseToMalesov : int {
    None                                 = 0,
    Started                              = 1,
    Completed                            = 2,
    AbortedQuestFailed                   = 3,
    AbortedPlayerDismountedHorseOnTheWay = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextBaseTrigger<struct wh::xgenaimodule::S_EntityScriptContext>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::C_ClearRoles : class wh::rpgmodule::storm::I_Operator {

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DoorInJewishBackyard : int {
    Closed   = 0,
    Openable = 1,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_ScriptParam,class std::vector> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::clothing::S_BloodMaskName> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_UseHandContext {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum buddyAntonKaspar : int {
    None                = 0,
    StartChurch         = 1,
    UpdatePoSpodky      = 2,
    UpdatePoDarku       = 3,
    CompleteFinishQuest = 4,
    FailedQuest         = 5,
    Hide                = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkAfterUnconscious : int {
    None       = 0,
    StandingUp = 1,
    Chat       = 2,
    Dialog     = 3,
    Done       = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_DisableDoorInteractivity> {
};

//size in bytes: 0x4
//pointer dimension: 0
enum wh::conceptmodule::E_ConceptNodeMemberMetadata {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VydraBehavior : int {
    None            = 0,
    NeedsHealing    = 1,
    PrepareForFight = 2,
    FightingWolves  = 3,
    AfterFight      = 4,
    LeaveLevel      = 5,
    Die             = 6,
};

//size in bytes: 0x1b8
//pointer dimension: 0
class wh::entitymodule::C_EntityModule {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum hasekSword : int {
    None             = 0,
    UnequipBeforeDlg = 1,
    EquipAfterDlg    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_SetReincarnationParams* {
};

//size in bytes: 0x100
//pointer dimension: 0
struct wh::entitymodule::S_MissileWeaponClass : struct wh::entitymodule::S_WeaponClass {
    0x8  : id                          : int;
    0x10 : name                        : class CryStringT<char>;
    0x18 : skill                       : enum wh::rpgmodule::E_SoulSkill;
    0x1c : attachment_slot_id          : int;
    0x20 : equip_slot                  : enum wh::entitymodule::E_WeaponEquipSlot;
    0x25 : in_right_hand               : bool;
    0x28 : holster_slot_id             : int;
    0x24 : is_twohanded                : bool;
    0x2c : gender_id                   : unsigned char;
    0x30 : item_manipulation_type      : int;
    0x34 : primary_attack_type_id      : int;
    0x38 : secondary_attack_type_id    : int;
    0x3c : attack_distance             : float;
    0x40 : is_blocking                 : bool;
    0x44 : sync_guard_distance         : float;
    0x48 : sync_guard_priority         : int;
    0x4c : max_attack_distance         : float;
    0x50 : collision_mode              : int;
    0x54 : anim_collision_mode         : int;
    0x58 : combat_priority             : int;
    0x5c : horse_pull_down_distance    : float;
    0x60 : horse_pull_down_max_speed   : float;
    0x64 : horse_pull_down_z_tolerance : float;
    0x68 : hunt_attack_distance        : float;
    0x6c : zone_change_timeout_coef    : float;
    0x70 : draw_buff_id                : struct CryGUID;
    0x80 : alternative_draw_buff_id    : struct CryGUID;
    0x90 : sharpening_zone_count       : int;
    //Getter: WHGame.dll+0x29bee40
    get  : ammo_class                  : class CryStringT<char>;
    0x99 : auto_load                   : bool;
    0x9a : requires_charging           : bool;
    0x9b : requires_cocking            : bool;
    0x9c : keep_loaded                 : bool;
    0x9d : keep_loaded_in_inventory    : bool;
    0xa0 : loading_item_first          : struct CryGUID;
    0xb0 : loading_item_second         : struct CryGUID;
    0xc0 : firing_item                 : struct CryGUID;
    0x9e : fire_on_hit                 : enum wh::entitymodule::E_FireOnHitMode::Type;
    0xd0 : animation_tag               : class CryStringT<char>;
    0xd8 : lever_animation_tag         : class CryStringT<char>;
    0xe0 : attach_lever_to_weapon      : bool;
    0xe1 : loading_movement            : enum wh::entitymodule::E_LoadingMovement::Type;
    0xe2 : movement_crouch             : bool;
    0xe3 : ammo_length                 : enum wh::entitymodule::E_AmmoLength::Type;
    0xe4 : battlement_offset           : float;
    0xe8 : min_aim_pitch               : float;
    0xec : max_aim_pitch               : float;
    0xf0 : min_aim_pitch_mounted       : float;
    0xf4 : max_aim_pitch_mounted       : float;
    0xf8 : min_aim_yaw_mounted         : float;
    0xfc : max_aim_yaw_mounted         : float;
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::animationmodule::JointPoseMorphData::S_Model* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b50150
enum enum wh::xgenaimodule::activitysystem::E_DogCompanionPriority::Type : int {
    Impossible     = 0,
    Lowest         = 1,
    Doable         = 2,
    BestFun        = 3,
    Duty           = 4,
    Follow         = 5,
    Attack         = 6,
    ExecutingOrder = 7,
    Hit            = 8,
    GettingOrder   = 9,
    RunAway        = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
class CObjManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeliveryHandling : int {
    None             = 0,
    CanBeDelivered   = 1,
    DeliveredWolfram = 2,
    DeliveredDobros  = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_MinigameTutorialDomain {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TemporaryUnstream : int {
    Streamed         = 0,
    WaitingForStream = 1,
    Unstreamed       = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bc0dd8
enum enum wh::playermodule::E_AlchemyTutorialFeature::Type : unsigned char {
    PourLiquidsDisabled    = 0,
    ResetDisabled          = 1,
    ShiftCauldronDisabled  = 2,
    BlowBellowsDisabled    = 3,
    InventoryDisabled      = 4,
    AddHerb1Disabled       = 5,
    AddHerb2Disabled       = 6,
    AddHerb3Disabled       = 7,
    TurnHourglassDisabled  = 8,
    CrushDisabled          = 9,
    TakeFlaskDisabled      = 10,
    FinishPotionDisabled   = 11,
    CauldronDisabled       = 12,
    BackDisabled           = 13,
    AbortDisabled          = 14,
    RecipeSelectDisabled   = 15,
    OthersDisabled         = 16,
    PourLiquidsInvisible   = 17,
    ResetInvisible         = 18,
    ShiftCauldronInvisible = 19,
    BlowBellowsInvisible   = 20,
    InventoryInvisible     = 21,
    AddHerb1Invisible      = 22,
    AddHerb2Invisible      = 23,
    AddHerb3Invisible      = 24,
    TurnHourglassInvisible = 25,
    CrushInvisible         = 26,
    TakeFlaskInvisible     = 27,
    FinishPotionInvisible  = 28,
    CauldronInvisible      = 29,
    BackInvisible          = 30,
    AbortInvisible         = 31,
    RecipeSelectInvisible  = 32,
    OthersInvisible        = 33,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_ConceptAIWuidType {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_RandomEventOption::Type> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmuletForMarika : int {
    None                        = 0,
    AskForAmulet                = 1,
    VajdaWontGiveAmulet_Started = 2,
    VajdaWontGiveAmulet_Updated = 3,
    TradeSafeConductForAmulet   = 4,
    VajdaWontTradeAmulet        = 5,
    LearnedAboutBetting         = 6,
    Failed                      = 7,
    Aborted                     = 8,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::combatmodule::S_BattleSituation {
    0x8  : TotalCount : int;
    0xc  : AliveCount : int;
    0x10 : DeadCount  : int;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionTenseCircumstance* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum scuffleWithSamuelsMen : int {
    None       = 0,
    GetOut     = 1,
    PlayerWon  = 2,
    PlayerLost = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_RelationScriptContextPreset> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRecipe : int {
    None               = 0,
    Started            = 1,
    InnkeeperGotRecipe = 2,
    Failed             = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_ContentFilter {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dice_badgeEffects : int {
    formations = 0,
    headstart  = 1,
    null       = 2,
    extraValue = 3,
    antibust   = 4,
    doubleTake = 5,
    multiplier = 6,
    extraDice  = 7,
    rerollDice = 8,
    setDice    = 9,
    rerollPips = 10,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::environmentmodule::C_WeatherProfileDatabase : class wh::databasemodule::C_ObjectTreeDatabase<struct wh::environmentmodule::S_WeatherProfileData,class std::vector>, class wh::databasemodule::C_ObjectDatabase<struct wh::environmentmodule::S_WeatherProfileData,class std::vector> {
    0x30 : WeatherProfiles : class std::vector<struct wh::environmentmodule::S_WeatherProfileData,class std::allocator<struct wh::environmentmodule::S_WeatherProfileData> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RareBook : int {
    None                = 0,
    Bandita             = 1,
    Player              = 2,
    Rychtar             = 3,
    Hejtman             = 4,
    PlayerNotQuestItem  = 5,
    BanditaNotQuestItem = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_LinkEffectNoData> {
};

//size in bytes: 0x258
//pointer dimension: 0
class wh::animationmodule::C_FocusCameraNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name             : class CryStringT<char>;
    0x18  : RuntimeState     : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports            : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView        : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive         : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Target           : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0xd0  : HorizontalLimits : class wh::conceptmodule::C_TypedPortRef<struct Vec2_tpl<float> >*;
    0x110 : VerticalLimits   : class wh::conceptmodule::C_TypedPortRef<struct Vec2_tpl<float> >*;
    0x150 : DampingFactor    : class wh::conceptmodule::C_TypedPortRef<float>*;
    0x190 : FocusMode        : class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_FocusMode::Type>*;
    0x1d0 : OnEnter          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x210 : OnLeave          : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Stream : int {
    Deactivate = 0,
    Load       = 1,
    Unload     = 2,
};

//size in bytes: 0x128
//pointer dimension: 0
class CMatMan {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::game::C_ContentFilterSubstitution* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectTreeDatabase<struct wh::entitymodule::S_CarryItemPileGeom,class std::vector> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<enum wh::rpgmodule::E_SoulCounter> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::game::C_ContentFilterSubstitutionsDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::game::C_ContentFilterSubstitution>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::game::C_ContentFilterSubstitution>,class std::allocator<class std::shared_ptr<class wh::game::C_ContentFilterSubstitution> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StreamGraffity : int {
    Streamed   = 0,
    Unstreamed = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::I_InteractionTrigger *,class std::allocator<class wh::entitymodule::I_InteractionTrigger *> > >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ChytVraha : int {
    None                = 0,
    ZacatekUtela        = 1,
    ZacatekUSvedka      = 2,
    MluvilSeSvedkem     = 3,
    MluvilSKolemjdoucim = 4,
    MluvilSVrhame       = 5,
    ZabilVraha          = 6,
    PremluvilVraha      = 7,
    Failed              = 8,
    Aborted             = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetsOn : int {
    None = 0,
    Npc1 = 1,
    Npc2 = 2,
};

//size in bytes: 0x118
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimPlaceRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimPlaceRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToSvatavaProgress : int {
    None                        = 0,
    Started                     = 1,
    DoneNormal                  = 2,
    DoneNoTreasure              = 3,
    DoneSvatavaAngry            = 4,
    DoneEarlyHenryKeepsTreasure = 5,
    DoneEarlyHenryGivesTreasure = 6,
    DoneHankaHasTreasure        = 7,
    DoneTreasureForVendula      = 8,
    FailedSvatava               = 9,
    FailedVendula               = 10,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::storm::C_Task {
    0x18 : sources : class std::reference_wrapper<class std::vector<class wh::rpgmodule::storm::C_Source,class std::allocator<class wh::rpgmodule::storm::C_Source> > >;
    0x8  : name    : class CryStringT<char>;
    0x10 : class   : enum wh::rpgmodule::storm::E_TaskClass;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_CarryItemSource> {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::storm::C_AttributeOperator<struct wh::rpgmodule::storm::operation::Modify> : class wh::rpgmodule::storm::I_Operator {
    0x8  : skill     : enum wh::rpgmodule::E_SoulProperty::Type;
    0x8  : stat      : enum wh::rpgmodule::E_SoulProperty::Type;
    0xc  : mod       : class boost::optional<float>;
    0x14 : minMod    : class boost::optional<float>;
    0x1c : maxMod    : class boost::optional<float>;
    0x24 : scaleWith : class boost::optional<enum wh::rpgmodule::E_SoulProperty::Type>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReturnToRuthardka : int {
    None                   = 0,
    LegateIsDead           = 1,
    FastTraveledWithOthers = 2,
    WentByMyself           = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AreInSameSkirmish> {
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::guimodule::C_UIHudInteractiveDialog : class wh::guimodule::C_UIBase {

    //vtable offset: 0x50
    ShowSkillCheckResult( string const &, bool );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum combatAttackKind : int {
    none          = 0,
    missile       = 1,
    stealthAction = 2,
    unarmed       = 3,
    melee         = 4,
    dogBite       = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionIsFromMyInventory* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetContest_HorseRaceRide : int {
    None               = 0,
    RideToCheckpoint_1 = 1,
    RideToCheckpoint_2 = 2,
    RideToCheckpoint_3 = 3,
    RideToCheckpoint_4 = 4,
    RideToCheckpoint_5 = 5,
    RideToCheckpoint_6 = 6,
    RideToCheckpoint_7 = 7,
    RideToCheckpoint_8 = 8,
    RideToFinish       = 9,
    Finished           = 10,
    Aborted            = 11,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextBaseEffect<struct wh::xgenaimodule::S_RelationScriptContext>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailAbortHiddenComp : int {
    None      = 0,
    Started   = 1,
    Completed = 2,
    Failed    = 3,
    Aborted   = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BoozeHoldership : int {
    None       = 0,
    InStash    = 1,
    OnPlayer   = 2,
    WithCumans = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_ContainsElement> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_WeaponActionBase* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum bohutovaVlozka_playerFollowsErikToNebakov : int {
    None              = 0,
    GetHorse          = 1,
    MoveToDestination = 2,
    Completed         = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetTheBooze : int {
    None        = 0,
    Started     = 1,
    GuardGone   = 2,
    GotTheBooze = 3,
    Completed   = 4,
    Aborted     = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ListOfPlayerMembers : int {
    None               = 0,
    JanekOrJaroslav    = 1,
    Mikes              = 2,
    Kozlik             = 3,
    Dobros             = 4,
    Wolfram            = 5,
    AlternativeSoldier = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeerBehavior : int {
    Posing   = 0,
    RunAway  = 1,
    Daycycle = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_findStolenItems_wuidFilterType : int {
    none      = 0,
    relation  = 1,
    inventory = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RuzenecCycle : int {
    Den = 0,
    Noc = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum alternativeQuestGiving : int {
    None         = 0,
    Alternative1 = 1,
    Alternative2 = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_LedgeObject *,class std::allocator<class wh::entitymodule::C_LedgeObject *> > >* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::clothing::S_ClothingMorph* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasFactionLabel* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KlaraHealing : int {
    None            = 0,
    Started         = 1,
    KnowHealing     = 2,
    UpdateHealing   = 3,
    EverybodyHealed = 4,
    DoneKlara       = 5,
    Aborted         = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestRideProgress : int {
    None        = 0,
    RideStarted = 1,
    FirstTask   = 2,
    SecondTask  = 3,
    ThirdTask   = 4,
    FourthTask  = 5,
    Done        = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Tidying : int {
    None            = 0,
    Started         = 1,
    Done            = 2,
    Fail            = 3,
    Fail_PlayerLeft = 4,
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::entitymodule::C_ItemDelivery {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum RatborFortressState : int {
    DefaultPhase       = 0,
    DuringPartyRatbor1 = 1,
    DuringPartyRatbor2 = 2,
    DuringBattleBohuta = 3,
    DuringBattleHenry  = 4,
    AfterBattleHenry   = 5,
    RightAfterQuest    = 6,
    LongTimeAfterQuest = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FriendlyVIPsEquip : int {
    Default            = 0,
    Confrontation      = 1,
    AfterConfrontation = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JdiDoDiry : int {
    None                   = 0,
    PromluvSiSCenkem       = 1,
    PromluvenoAleNenabrano = 2,
    QuestZadan             = 3,
    Canceled               = 4,
    VazounJeMrtvy          = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_RepairShopType {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum recipe : int {
    None                    = 0,
    failedDinner            = 1,
    Started                 = 2,
    foundRecipeForInnkeeper = 3,
    foundRecipeAlone        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3a7aa78
enum enum wh::xgenaimodule::NPCState::E_DataSource : int {
    CurrentState  = 0,
    RequiredState = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_MissileWeaponItemClass* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PrankFight : int {
    None                       = 0,
    FightInProgressUnderground = 1,
    FightInProgress            = 2,
    FightWon                   = 3,
    PlayerLostByUncounscious   = 4,
    PlayerLostByFleeding       = 5,
};

//size in bytes: 0x270
//pointer dimension: 0
class wh::xgenaimodule::C_SmartArea : class wh::xgenaimodule::C_LinkableObject, class wh::xgenaimodule::C_SmartEntity, class wh::xgenaimodule::I_Area {
    //Getter: WHGame.dll+0x3377ed0
    get : Position : struct Vec3_tpl<float>;

    //vtable offset: 0x10
    GetName( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::dialogmodule::data::C_ForcedDialogueNode> {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_FilteringConditionIsFromMyInventory : class wh::xgenaimodule::NPCState::I_FilteringCondition, class wh::xgenaimodule::NPCState::C_FilteringConditionBase, class wh::xgenaimodule::NPCState::C_FilteringConditionHandContentBase {
    0x8  : DataSource : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : Negate     : bool;
    0x10 : Hand       : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum redHerring : int {
    None              = 0,
    vrazdaStreamed    = 1,
    hracVyresil       = 2,
    hractoNechalBezet = 3,
    Aborted           = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HungerDespairQuestItem : int {
    None   = 0,
    Player = 1,
    Used   = 2,
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::guimodule::C_UIFlashBodyPart : class wh::guimodule::C_UIFlashObject {
    0x8  : Id           : class CryStringT<char>;
    0x10 : Name         : class CryStringT<char>;
    0x18 : IconId       : class CryStringT<char>;
    0x20 : Bleeding     : float;
    0x24 : NeededAmount : unsigned int;
};

//size in bytes: 0x70
//pointer dimension: 0
struct wh::rpgmodule::I_ReputationLog::S_RepChangeRec {
    0x8  : seqId         : unsigned __int64;
    0x38 : changeRequest : struct wh::rpgmodule::S_ReputationChangeRequest;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::musicmodule::C_WorldStateToggle* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Investigation : int {
    None                        = 0,
    InitialInfo                 = 1,
    Interrogation_gertaOrSmolik = 2,
    Evidence_crossOrHorse       = 3,
    Interrogation_all           = 4,
    Evidence_all                = 5,
    Done                        = 6,
    Canceled                    = 7,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::conceptmodule::C_InputTriggerPort : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_EdgePort, class wh::conceptmodule::C_TriggerPort {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<struct wh::playermodule::S_RandomEventTag,class std::vector> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum objeNajdiZapisnik : int {
    None                          = 0,
    NajdiZapisnikKonradDead       = 1,
    NajdiZapisnikKonradUnstreamed = 2,
    Completed                     = 3,
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::musicmodule::C_MusicMatrixRow>,class std::vector> {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::playermodule::C_AlchemyRecipeProduct {
    0x8  : ProductItemId : struct CryGUID;
    0x18 : Quality       : unsigned int;
    0x1c : MaxYield      : unsigned int;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum diagnosis : int {
    correctDiagnosis  = 0,
    almostDiagnosis   = 1,
    wrongDiagnosis    = 2,
    deliverDigestivum = 3,
};

//size in bytes: 0xc0
//pointer dimension: 0
class wh::guimodule::C_RenderedCutscene : class wh::guimodule::I_Cutscene {
    0x8  : Name                      : class CryStringT<char>;
    0x11 : InterruptsIngameMusic     : bool;
    0x12 : ForcesAsapSilence         : bool;
    0x18 : PreemptedMusicStateToggle : class CryStringT<char>;
    0x14 : PreemptedMusicDuration    : float;
    0x30 : Events                    : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneEventDesc,class std::allocator<struct wh::guimodule::S_CutsceneEventDesc> > >;
    0x10 : SkipReadinessWait         : bool;
    0x78 : Profiles                  : class std::reference_wrapper<class std::vector<struct wh::guimodule::S_CutsceneProfile,class std::allocator<struct wh::guimodule::S_CutsceneProfile> > >;
    0x68 : Subtitles                 : class CryStringT<char>;
    0x70 : Root                      : class CryStringT<char>;
    0x90 : UseAudioSnapshot          : bool;
    0x91 : StopWorldTime             : bool;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::entitymodule::C_LedgeObject {
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_LoadWeaponAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_TemplatedNode> >* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_MemberFunction>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulCounter>* {
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::conceptmodule::C_ElementAt : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode, class wh::conceptmodule::C_ElementAtBase {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Array        : class wh::conceptmodule::C_PortRef*;
    0x88 : Value        : class wh::conceptmodule::C_PortRef*;
    0xc8 : Index        : class wh::conceptmodule::C_TypedPortRef<int>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetRewardFromKrejzl : int {
    None                 = 0,
    DefeatedVira         = 1,
    GotInfoAboutZelejov  = 2,
    GotInfoAboutChampion = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum whiteDeerHideHoldership : int {
    None               = 0,
    StolenByPoachers   = 1,
    AcquiredByPlayer   = 2,
    DeliveredToDobros  = 3,
    DeliveredToWolfram = 4,
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::rpgmodule::storm::C_AttributeOperator<struct wh::rpgmodule::storm::operation::Remove> : class wh::rpgmodule::storm::I_Operator {
    0x8 : skill : enum wh::rpgmodule::E_SoulProperty::Type;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FreeHans : int {
    None                                          = 0,
    Started                                       = 1,
    KilledVillagerAfterCuringHim                  = 2,
    LockpicekedHansFromPillory                    = 3,
    GotKeyFromPilloryForCuringTheVillager         = 4,
    ReleasedHansWithKeyForCuringTheVillager       = 5,
    GotKeyFromPilloryButNotForCuringTheVillager   = 6,
    ReleasedHansWithKeyButNotForCuringTheVillager = 7,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7aca8
enum enum wh::dialogmodule::data::E_TechnicalStatus::Type : unsigned char {
    Disabled = 0,
    Enabled  = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::I_InteractionTrigger *>* {
};

//size in bytes: 0x20
//pointer dimension: 0
struct wh::conceptmodule::C_Node::S_Hint {
    0x8  : Type      : enum wh::conceptmodule::E_HintType;
    0x10 : TimeStamp : __int64;
    0x18 : Msg       : class CryStringT<char>;
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::playermodule::C_BlacksmithRecipe {
    0x8  : Id                : class CryStringT<char>;
    0x10 : UIName            : class wh::framework::C_LocalizedString;
    0x20 : UIIcon            : class CryStringT<char>;
    0x28 : UIDesc            : class wh::framework::C_LocalizedString;
    0x38 : Category          : enum wh::playermodule::E_BlacksmithRecipeCategory;
    0x3c : MinSkillLevel     : unsigned int;
    0x40 : PerkId            : struct CryGUID;
    0x50 : CompletionGainMod : float;
    0x54 : QualityLossMod    : float;
    0x58 : Ingredients       : class std::vector<class wh::playermodule::C_BlacksmithRecipeIngredient,class std::allocator<class wh::playermodule::C_BlacksmithRecipeIngredient> >;
    //Getter: WHGame.dll+0x2d8517c
    get  : WorkpieceId       : class CryStringT<char>;
    0x78 : Products          : class std::vector<class wh::playermodule::C_BlacksmithRecipeProduct,class std::allocator<class wh::playermodule::C_BlacksmithRecipeProduct> >;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_Race {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::soundmodule::S_SkaldAtlTriggerId {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Camp3_Clues : int {
    None      = 0,
    Completed = 1,
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::rpgmodule::C_MaxProxyCounter<int> : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_ProxyCounter<int> {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_MemberFunction> {
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::conceptmodule::definition::C_TypeDefinition::S_TemplateType {
    0x10 : Id   : int;
    0x8  : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ExternalPartialActivationEffect<class wh::entitymodule::C_ItemSlot>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DefeatJan : int {
    None            = 0,
    FightInProgress = 1,
    JanIsDefeated   = 2,
    LaszloWasKilled = 3,
};

//size in bytes: 0x10
//pointer dimension: 0
class boost::optional<struct wh::framework::S_TimeOfDay> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_UnionItemDescriptor* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZabijCenka : int {
    None        = 0,
    ZabijCenka  = 1,
    CenekZemrel = 2,
    Canceled    = 3,
    Aborted     = 4,
};

//size in bytes: 0x200
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_UnstanceActionTransition : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ChangeUnstanceActionBase {
    0x8   : Name                               : class CryStringT<char>;
    0x10  : Urgency                            : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority                           : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies               : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions                         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects                            : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions                : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : RequiresRuntimeDataInitFromRequest : bool;
    0x1a1 : UseUrgencyTag                      : bool;
    0x1b8 : SourceUnstanceId                   : unsigned int;
    0x1bc : TargetUnstanceId                   : unsigned int;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_BlacksmithingTutorialNumericFeature {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TrialWaiting : int {
    None             = 0,
    WaitingForStibor = 1,
    StiborPresent    = 2,
    TrialStarted     = 3,
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::BehaviorTree::S_CallbackEvent : struct wh::xgenaimodule::BehaviorTree::S_Event {
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_CartActionBase : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 39ce9d8
enum enum wh::xgenaimodule::NPCState::E_AnimEventContextSource::Type : unsigned char {
    CurrentRequest = 0,
    Stance         = 1,
    Unstance       = 2,
    ActionSpecific = 3,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemMelee : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemEquippable, class wh::guimodule::C_UIFlashInfoItemWeapon {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Condition        : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : Quality          : unsigned int;
    0x5c : Durability       : unsigned int;
    0x68 : StrengthReq      : unsigned int;
    0x6c : DiffStrength     : int;
    0x74 : CurrAgility      : int;
    0x78 : MaxSlash         : float;
    0x80 : MaxStab          : float;
    0x88 : MaxSmash         : float;
    0x90 : CurSlash         : float;
    0x98 : CurStab          : float;
    0xa0 : CurSmash         : float;
    0xa8 : Defense          : float;
    0xb0 : Blood            : float;
    0xb8 : BuffName         : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::game::C_ExtraRewardData* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetHair : class wh::rpgmodule::storm::I_Operator, class wh::rpgmodule::storm::C_SetCharacterComponentBase {
    //Getter: WHGame.dll+0x199fb10
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x40
//pointer dimension: 0
struct wh::S_ModInfo {
    0x8  : Folder        : class CryStringT<char>;
    0x10 : Name          : class CryStringT<char>;
    0x20 : Author        : class CryStringT<char>;
    0x28 : Version       : class CryStringT<char>;
    0x30 : CreatedOn     : class CryStringT<char>;
    0x38 : ModifiesLevel : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DebatesOrder : int {
    None         = 0,
    TeamBarbora  = 1,
    AlbikAndMusa = 2,
    Citizens     = 3,
    TeamSedlec   = 4,
    Ended        = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TaborCertovkaInnkeeperDied : int {
    None          = 0,
    InnkeeperDied = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitializerAddMetaRole* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zakopanyZitrek_killingSvatavaProgress : int {
    Talking   = 0,
    Attacking = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ExpectedVavak : int {
    None     = 0,
    Expected = 1,
    Extended = 2,
    Done     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::questmodule::C_Quest>* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::entitymodule::clothing::C_Hair* {
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabase<class wh::game::C_CVarOverrideData,class std::vector> {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a7f8
enum enum wh::playermodule::E_RandomEventOptionAction::Type : unsigned char {
    Continue = 0,
    Stop     = 1,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::rpgmodule::C_TimeResetSamplingCounter<struct wh::rpgmodule::T_WorldTimePolicy> : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SamplingCounter, class wh::rpgmodule::C_TimeSamplingCounter<struct wh::rpgmodule::T_WorldTimePolicy> {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0xb0
//pointer dimension: 0
struct wh::entitymodule::S_KeyItemClass : struct wh::entitymodule::S_ItemClass, struct wh::entitymodule::S_PickableItemClass, struct wh::entitymodule::S_PlayerItemClass {
    0x8  : Id                             : struct CryGUID;
    0x18 : Name                           : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags                           : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : Model                          : class CryStringT<char>;
    0x40 : Material                       : class CryStringT<char>;
    0x48 : EntityScript                   : class CryStringT<char>;
    0x50 : AttachmentName                 : class CryStringT<char>;
    0x58 : Weight                         : float;
    0x5c : Price                          : unsigned int;
    0x60 : FadeCoef                       : float;
    0x64 : VisibilityCoef                 : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::Clamp<0,1,float,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x68 : LightSourcePriority            : unsigned int;
    0x6c : HandContentSerializationMode   : enum wh::entitymodule::E_HandContextSerializationMode::Type;
    0x70 : Phases                         : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_ItemClassPhase,class std::allocator<struct wh::entitymodule::S_ItemClassPhase> > >;
    0x88 : HomeSlotAutoReturn             : bool;
    0x89 : ProjectileCollisionWhenCarried : bool;
    0x8a : PhaseResetOnDrop               : bool;
    0x8b : PhaseResetOnSlotReturn         : bool;
    0x8c : PhaseResetOnSlotAbandon        : bool;
    0x90 : IconId                         : class CryStringT<char>;
    0x98 : UIInfo                         : class CryStringT<char>;
    0xa0 : UIName                         : class CryStringT<char>;
    0xa9 : PickpocketInPouch              : bool;
    0xaa : DisplayInShop                  : bool;
    0xa8 : IsQuestItem                    : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringTheMace : int {
    None                        = 0,
    GetTheProof                 = 1,
    BringIt                     = 2,
    DeliveredIt                 = 3,
    DeliveredItButBanditIsAlive = 4,
    Aborted                     = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a29cd0
enum enum wh::entitymodule::E_CartState::Type : unsigned char {
    idle              = 0,
    blocked           = 1,
    waitingForCaravan = 2,
    needConfirmation  = 3,
    moving            = 4,
    stopping          = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KomoriAnimation : int {
    None   = 0,
    Idle   = 1,
    Active = 2,
    Dead   = 3,
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::rpgmodule::C_Calendar {
    0x58 : GameplayTime : __int64;
};

//size in bytes: 0x8
//pointer dimension: 0
struct Vec2_tpl<int> {
    0x0 : X : int;
    0x4 : Y : int;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_OutputDataPort> {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_RandomEventOptionSetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::playermodule::S_RandomEventOptionSet,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::playermodule::S_RandomEventOptionSet,class std::allocator<struct wh::playermodule::S_RandomEventOptionSet> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ArenaFighterKutnaHora : int {
    None           = 0,
    Damian         = 1,
    Zavis          = 2,
    Vazoun         = 3,
    ZavisAndDamian = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::questmodule::C_Objective>* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_StormProgram* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::game::C_LevelData : class wh::game::I_LevelData {
    0x8  : LevelId        : int;
    0x10 : LevelName      : class CryStringT<char>;
    0x1c : KeepNestedSave : bool;
    0x18 : CompassOffset  : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIHudEvents* {
};

//size in bytes: 0xe8
//pointer dimension: 0
struct wh::entitymodule::S_ActionAdditiveAnimRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_EnableRoleOnHubElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorActionInteractiveScene* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::environmentmodule::S_WeatherProfileData::S_Condition* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::E_PortSpecification {
};

//size in bytes: 0x108
//pointer dimension: 0
class wh::xgenaimodule::C_InstantSendMessage : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : Exec         : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc0 : Receiver     : class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_LinkableObject *>*;
    0x80 : OnExec       : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    //Getter: WHGame.dll+0x31b11b0
    get  : MessageType  : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZacniBoj : int {
    None              = 0,
    ZacniBoj          = 1,
    PockejNaVyhlaseni = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::navigation::S_DeltaMovementParamsEntityClassNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ConstantInterfacePort* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_HasContext : class wh::rpgmodule::storm::I_Selector {
    //Getter: WHGame.dll+0x2c835f8
    get : name : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::E_UnknownWeaponSetMode {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::effects::C_SchedulerEffectDrink : class wh::xgenaimodule::scheduler::C_SchedulerEffectBase {
    //Getter: WHGame.dll+0x330fd2c
    get : Role     : class CryStringT<char>;
    //Getter: WHGame.dll+0x330fcc8
    get : SoilRate : class CryStringT<char>;
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemWeapon : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemEquippable {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Condition        : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : Quality          : unsigned int;
    0x5c : Durability       : unsigned int;
    0x68 : StrengthReq      : unsigned int;
    0x6c : DiffStrength     : int;
    0x74 : CurrAgility      : int;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_StaticInstancePlaceholder : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : Definition   : class CryStringT<char>;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_attackKind : int {
    unknown              = 0,
    pebble               = 1,
    collision            = 2,
    playerHorseCollision = 3,
    unarmed              = 4,
    dog                  = 5,
    stealth              = 6,
    missile              = 7,
    armed                = 8,
    stone                = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SoubojState : int {
    Start                = 0,
    CategoryAnnouncement = 1,
    FightAnnouncement    = 2,
    WaitOnSpots          = 3,
    FightStart           = 4,
    FightResult          = 5,
    Aborted              = 6,
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_SwapWeaponAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_WeaponActionBase {
    0x8  : Name                 : class CryStringT<char>;
    0x10 : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14 : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get  : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20 : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38 : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50 : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0xc0 : Stance               : enum wh::entitymodule::E_StanceCategory::Type;
};

//size in bytes: 0x50
//pointer dimension: 0
struct wh::entitymodule::S_EquipmentPresetFilter {
    0x0 : Name               : class CryStringT<char>;
    //Getter: WHGame.dll+0x2908688
    get : EquipmentSlotNames : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x293b18c
    get : MeleeClassNames    : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x293b1ac
    get : MissileClassNames  : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::conceptmodule::E_CallbackSceneState {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::rpgmodule::storm::C_ClearScheduleItems : class wh::rpgmodule::storm::I_Operator {

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_SmartArea* {
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::rpgmodule::storm::C_Rule {
    0x10 : name       : class CryStringT<char>;
    0x18 : operations : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Operator>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Operator> > > >;
    0x48 : order      : int;
    0x30 : selectors  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::storm::I_Selector> > > >;

    //non-vtable method: WHGame.dll+0x19da220
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_PhaseItemEventImplementation* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::C_PickUpEventImplementation : class wh::xgenaimodule::I_AnimEventImplementation {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::dialogmodule::data::C_DialogueNode> {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::rpgmodule::S_FactionDefinitionID {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JostArmyTourPhase : int {
    None                   = 0,
    WaitingForStreaming    = 1,
    WaitingForPlayer       = 2,
    WalkingOutsideFortress = 3,
    Unstreamed             = 4,
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_AssignVoiceGroupOperator : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x9a5924
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::I_HLodManager* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_MoodCommand* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_CharacterCreation {
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::shared::C_WeakPtrId<class _smart_ptr<class wh::conceptmodule::C_EdgePort>,unsigned int,class wh::conceptmodule::C_ConceptResourceResolver<class _smart_ptr<class wh::conceptmodule::C_SharedResource>,unsigned int> > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DocumentContentImage* {
};

//size in bytes: 0x108
//pointer dimension: 0
struct wh::entitymodule::S_ActorAnimPlaceRequest : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BringTheHat : int {
    None                 = 0,
    GetHat               = 1,
    BringHat             = 2,
    Dilivered            = 3,
    DeliveredBanditAlive = 4,
    Aborted              = 5,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::dialogmodule::data::E_ItemAttachmentHand {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_AlchemyTableAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
unsigned int {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BudovaniLazni_OnWagon : int {
    None                                   = 0,
    GetOnWagon                             = 1,
    RideBeforeBandits_AllOnWagon           = 2,
    RideBeforeBandits_AllOnWagon_chatting  = 3,
    RideBeforeBandits_AllOnWagon_afterChat = 4,
    ArrivalToKH                            = 5,
    JourneyFinished                        = 6,
    JourneyAborted_PlayerIgnoredQuest      = 7,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_Output> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_AreaUnion* {
};

//size in bytes: 0x10
//pointer dimension: 0
struct wh::xgenaimodule::S_PickUpEventData : struct wh::xgenaimodule::I_EventData {
    0x8 : Slot : struct wh::framework::WUID;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KapitanMichaUvod : int {
    None      = 0,
    Started   = 1,
    Updated   = 2,
    Completed = 3,
    Aborted   = 4,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::E_SmartBehaviorState {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::framework::S_TimeSpan {
    0x0 : Value : __int64;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StateBase<enum wh::rpgmodule::E_TimeOfDayState::Type>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillingSvatava : int {
    None      = 0,
    Attacking = 1,
    Done      = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3992f08
enum enum wh::playermodule::E_RandomEventMapIcon::Type : unsigned char {
    None      = 0,
    Combat    = 1,
    Wanderer  = 2,
    Encounter = 3,
    Camp      = 4,
    City      = 5,
    Quest     = 6,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetRelationContext> {
};

//size in bytes: 0x1c8
//pointer dimension: 0
class wh::entitymodule::C_ClothingSystem {
};

//size in bytes: 0x10
//pointer dimension: 0
struct TElementCounts<float> : struct TElementCountsBase<float> {
    0x0 : alloc    : float;
    0x4 : alive    : float;
    0x8 : updated  : float;
    0xc : rendered : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ProfileEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::entitymodule::E_InteractionType>* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_AreaUnionAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemEquippable : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Condition        : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : Quality          : unsigned int;
    0x5c : Durability       : unsigned int;
};

//size in bytes: 0x188
//pointer dimension: 0
class wh::rpgmodule::C_StatisticTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name              : class CryStringT<char>;
    0x18  : RuntimeState      : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports             : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView         : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive          : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Threshold         : class wh::conceptmodule::C_TypedPortRef<double>*;
    0xf8  : Statistic         : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_StatWrapper>*;
    0x138 : OnThresholdPassed : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GaveUp : int {
    None     = 0,
    GaveUp   = 1,
    Continue = 2,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get : Role       : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kradeniMece : int {
    None            = 0,
    UkrastMec       = 1,
    VystavitMec     = 2,
    ZpetZaMenhartem = 3,
    Done            = 4,
    Fail            = 5,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_StashAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorFollowTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StolenShoeQI_obslete : int {
    None            = 0,
    InTent          = 1,
    Henry           = 2,
    BackToKatherine = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::scheduler::S_SchedulerLinkParameters* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartChange {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::entitymodule::I_ActorAction : class wh::framework::I_Action {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum kh2CouncilPhasesV2 : int {
    None                       = 0,
    ForcedDialoguesWithCouncil = 1,
    CouncilCleanupDialogue     = 2,
    ZikmundsDateWithAulitz     = 3,
    Done                       = 4,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::xgenaimodule::S_DatabaseIDTemplate {
    //Getter: WHGame.dll+0x199fb10
    get : DatabaseId : struct CryGUID;
};

//size in bytes: 0x60
//pointer dimension: 0
class wh::guimodule::C_UIShootingContest : class wh::guimodule::C_UIBase {

    //vtable offset: 0x0
    ShowShootingContestTable( string const &, string const &, string const &, int, int, int, bool );
    //vtable offset: 0x8
    HideShootingContestTable( );
    //vtable offset: 0x10
    UpdateShootingContestTable( int, int, int, int, int, int );
    //vtable offset: 0x18
    ShowShootingHit( float, float );
    //vtable offset: 0x20
    ShowHorseShootingContestTable( string const &, string const &, int, int, string const & );
    //vtable offset: 0x8
    HideHorseShootingContestTable( );
    //vtable offset: 0x30
    UpdateHorseShootingContestTable( int );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3af6fe0
enum enum wh::entitymodule::E_ActorStance : int {
    ACTORSTANCE_NULL          = -1,
    ACTORSTANCE_NORMAL        = 3,
    ACTORSTANCE_COMBAT        = 0,
    ACTORSTANCE_CROUCH        = 1,
    ACTORSTANCE_CARRYCORPSE   = 9,
    ACTORSTANCE_STONETHROWING = 2,
    ACTORSTANCE_INJURED       = 7,
    ACTORSTANCE_LAST          = 10,
};

//size in bytes: 0x8
//pointer dimension: 1
const class std::vector<float,class std::allocator<float> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BanditRelation : int {
    None              = 0,
    AreInSameSkirmish = 1,
    Enemy             = 2,
    Bandit1IsDead     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DisguiseLocation : int {
    NotInGame               = 0,
    OnFranta                = 1,
    OnTailor                = 2,
    OnPlayer                = 3,
    InBackupLocation        = 4,
    Nowhere_PlayingAsBohuta = 5,
    BackOnPlayer            = 6,
    NoLongerQuestItem       = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
struct S_TriggerEffectCommand* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ItemClassGUID> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x1
//pointer dimension: 0
struct NAlloc::AllocCompatible<struct NAlloc::ModuleAlloc> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BranaKPasti : int {
    Opened = 0,
    Closed = 1,
};

//size in bytes: 0x18
//pointer dimension: 0
struct wh::xgenaimodule::NPCState::S_EffectObjectEventSource {
    0x0  : AnimEventContextSource         : enum wh::xgenaimodule::NPCState::E_AnimEventContextSource::Type;
    0x1  : GameLoadAnimEventContextSource : enum wh::xgenaimodule::NPCState::E_AnimEventContextSource::Type;
    0x8  : EventTypeName                  : class CryStringT<char>;
    0x10 : EventName                      : class CryStringT<char>;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Pray : int {
    None     = 0,
    GoToPray = 1,
    Wait     = 2,
    Done     = 3,
    Canceled = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WallDisassemble : int {
    None                          = 0,
    WallIsBeingDisassembled       = 1,
    DisassemblingBehaviorFinished = 2,
    WallIsDisassembled            = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3992ff8
enum enum wh::entitymodule::E_CartPosition::Type : unsigned char {
    driver     = 0,
    codriver   = 1,
    teamster   = 2,
    leftFront  = 3,
    rightFront = 4,
    leftBack   = 5,
    rightBack  = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<enum wh::guimodule::E_BlockUINotificationType::Type>* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_ContextOperator<struct wh::rpgmodule::storm::operation::Add> : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x2c835f8
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIFlashListCodexRecord* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_ItemSlotAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DamaVNesnazichKonec : int {
    None              = 0,
    SouhlasiSeSexem   = 1,
    NesouhlasiSeSexem = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FrantaMeetsHadraba : int {
    None                  = 0,
    MetAndGotClothes      = 1,
    MetAndDidntGetClothes = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_CarryItemTarget* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::I_Port> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BruncvikZbrojPrvni : int {
    None             = 0,
    FoundBeforeQuest = 1,
    Started          = 2,
    CompletedClassic = 3,
    CompletedBefore  = 4,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::entitymodule::I_TagPoint *,class std::allocator<class wh::entitymodule::I_TagPoint *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CheckUnconscious : int {
    CheckUnconscious   = 0,
    AddBuffUnconscious = 1,
    Heal               = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum leceniUncelar : int {
    None      = 0,
    Active    = 1,
    Done      = 2,
    Canceled  = 3,
    Canceled2 = 4,
    Canceled3 = 5,
    TooLate   = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PolylogNPCsPresence : int {
    Nobody      = 0,
    OnlyAnton   = 1,
    OnlyFrancek = 2,
    BothPresent = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KillKaspar : int {
    None          = 0,
    KillBandits   = 1,
    BanditsKilled = 2,
    Fail          = 3,
    Aborted       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SpeakWithDicePlayers : int {
    None                 = 0,
    SpokeWithInnkeeper   = 1,
    SpokeWithDicePlayers = 2,
    DicePlayersAreDead   = 3,
    PlayerKnowsTruth     = 4,
    FoundArcherMyself    = 5,
};

//size in bytes: 0x288
//pointer dimension: 0
class wh::entitymodule::C_WeaponDrawTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect, class wh::conceptmodule::C_EventNode<class wh::conceptmodule::C_Effect> {
    0x10  : Name                    : class CryStringT<char>;
    0x18  : RuntimeState            : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports                   : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView               : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive                : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0xb8  : Soul                    : class wh::conceptmodule::C_TypedPortRef<class wh::rpgmodule::I_Soul *>*;
    0xf8  : IncludeNonCombatWeapons : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x138 : TriggerForMainHand      : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x178 : TriggerForOffHand       : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x1b8 : OnDraw                  : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x1f8 : OnHolster               : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x238 : Item                    : class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Item *>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DitrichDiceGame : int {
    None       = 0,
    PlayerWon  = 1,
    PlayerLost = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimDrawRequest* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::questmodule::C_Log* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum naTroskach_ProgressAbortable : int {
    None    = 0,
    Active  = 1,
    Done    = 2,
    Aborted = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_HasPerk* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_Function> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum mysiTaskType : int {
    None         = 0,
    Normal       = 1,
    AsPunishment = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BattleGroupProgressAdvanced : int {
    None       = 0,
    FirstMove  = 1,
    FirstWait  = 2,
    SecondMove = 3,
    SecondWait = 4,
    Fight      = 5,
    Flee       = 6,
    Done       = 7,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::playermodule::C_BlacksmithRecipeDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class wh::playermodule::C_BlacksmithRecipe,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class wh::playermodule::C_BlacksmithRecipe,class std::allocator<class wh::playermodule::C_BlacksmithRecipe> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum AmbushPrepare : int {
    None   = 0,
    Stream = 1,
    Done   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum VillageReinforcementsBehavior : int {
    None           = 0,
    ToVillageEntry = 1,
    Barking        = 2,
    ToVillageEnd   = 3,
    Done           = 4,
};

//size in bytes: 0x110
//pointer dimension: 0
class wh::entitymodule::C_ProfileEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Profiles     : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::entitymodule::S_LayerProfile,class std::allocator<struct wh::entitymodule::S_LayerProfile> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class wh::xgenaimodule::C_SmartObject *> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestItemReacquire : int {
    None         = 0,
    AcquireItem  = 1,
    AcquiredItem = 2,
    Aborted      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseCompetition : int {
    None       = 0,
    Available  = 1,
    InProgress = 2,
    InCooldown = 3,
    Won        = 4,
    Failed     = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_ActorCrouchTrigger* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum trespassLevel : int {
    public       = 0,
    semipublic   = 1,
    semipersonal = 2,
    personal     = 3,
    prohibited   = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::I_Effect {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SigismundCampObjective : int {
    Present   = 0,
    Abandoned = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SingleReinforcementGroup : int {
    None                  = 0,
    AskForHelp            = 1,
    ArrangedReinforcement = 2,
    Failed                = 3,
    Canceled              = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
struct IRenderer* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressUpdatableAbortableFailable : int {
    None      = 0,
    Started   = 1,
    Updated   = 2,
    Completed = 3,
    Failed    = 4,
    Aborted   = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CitizensState : int {
    None       = 0,
    Talk       = 1,
    CallPlayer = 2,
    Drink      = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Attack : int {
    None          = 0,
    Bark          = 1,
    DiggerAttack  = 2,
    AttackersMove = 3,
    EnemyAttack   = 4,
    Done          = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetWine : int {
    None           = 0,
    Active         = 1,
    Done           = 2,
    DoneWineStolen = 3,
};

//size in bytes: 0xf8
//pointer dimension: 0
class wh::dialogmodule::data::C_DialogueNode : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : Dialogue       : class std::reference_wrapper<class wh::dialogmodule::data::C_Dialogue>;
    0xf3 : VoiceNamespace : bool;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_MoneyReward* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::framework::E_AutoSaveType {
};

//size in bytes: 0x4
//pointer dimension: 0
class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > > {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::BehaviorTree::S_TreeSignature {
    0x18 : Name           : class CryStringT<char>;
    //Getter: WHGame.dll+0x308e854
    get  : CallBehavior   : class boost::optional<bool>;
    //Getter: WHGame.dll+0x308e890
    get  : IncludeTree    : class boost::optional<bool>;
    //Getter: WHGame.dll+0x308e868
    get  : Callback       : class boost::optional<bool>;
    //Getter: WHGame.dll+0x308e840
    get  : AtomicCallback : class boost::optional<bool>;
    //Getter: WHGame.dll+0x308e82c
    get  : AddInterrupt   : class boost::optional<bool>;
    //Getter: WHGame.dll+0x308e87c
    get  : EnableBehavior : class boost::optional<bool>;
    0x0  : Parameters     : class std::vector<struct wh::xgenaimodule::S_VariableInfo,class std::allocator<struct wh::xgenaimodule::S_VariableInfo> >;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DeathStateCheck : int {
    None      = 0,
    SoulAlive = 1,
    SoulDeath = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_PlaceEventImplementation* {
};

//size in bytes: 0x30
//pointer dimension: 0
class wh::playermodule::C_PlayerData {
    0x8  : PlayerId               : int;
    0xc  : SoulGuid               : struct CryGUID;
    0x1c : UIMapCharacter         : enum wh::playermodule::E_PlayerUIMapCharacter::Type;
    0x20 : GameContext            : class CryStringT<char>;
    0x28 : FreezeReputation       : bool;
    0x29 : ShelveData             : bool;
    0x2a : FastTravelEnabled      : bool;
    0x2b : ChangingClothesEnabled : bool;
    0x2c : QuestGiversEnabled     : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum assaultGroup : int {
    None             = 0,
    WaitBeforeBattle = 1,
    TorchBefore      = 2,
    Wait             = 3,
    MoveToVillage    = 4,
    Unstream         = 5,
    TorchAfter       = 6,
    MoveBack         = 7,
    Done             = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum EnterToTunnels : int {
    None        = 0,
    GoToTunnels = 1,
    Wait        = 2,
    Done        = 3,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::rpgmodule::C_TimeResetSamplingCounter<struct wh::rpgmodule::T_GameTimePolicy> : class wh::rpgmodule::C_Counter, class wh::rpgmodule::C_SamplingCounter, class wh::rpgmodule::C_TimeSamplingCounter<struct wh::rpgmodule::T_GameTimePolicy> {
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;
    //Getter: WHGame.dll+0x1ede060
    get : Value : double;

    //vtable offset: 0x98
    Reset( );
    //vtable offset: 0x98
    Reset( );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_SmartBehaviorTemplate::S_SerializedInboxTemplate* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CestaPokoj : int {
    None                = 0,
    KomoriPtakDialog    = 1,
    BarkNaHrace         = 2,
    KomoriCeka          = 3,
    CestaKZabradliBark1 = 4,
    CestaKZabradliBark2 = 5,
    CestaKZabradliChat1 = 6,
    CestaKZabradliChat2 = 7,
    ZabradliBark        = 8,
    CestaKolemVezeni    = 9,
    PredKomorou         = 10,
    CestaKomora         = 11,
    Done                = 12,
    Aborted             = 13,
};

//size in bytes: 0x8
//pointer dimension: 1
struct Ang3_tpl<float>* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::C_UnionItemDescriptor : class wh::entitymodule::I_ItemDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3e7d580
enum enum wh::guimodule::E_BlockUINotificationType::Type : unsigned char {
    Common     = 0,
    Compass    = 1,
    Crime      = 2,
    StaminaBar = 3,
    Buffs      = 4,
    Cursor     = 5,
    LevelUp    = 6,
    Flush      = 7,
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::dialogmodule::data::C_PointAtCommand : class wh::dialogmodule::data::C_Command {
    0x8  : Role       : struct wh::rpgmodule::S_RoleId;
    //Getter: WHGame.dll+0x1ede048
    get  : Delay      : float;
    0xe  : TimingMode : enum wh::dialogmodule::data::E_CommandTimingMode;
    0x10 : CustomName : class CryStringT<char>;
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7a848
enum enum wh::playermodule::E_MinigameTutorialDomain::Type : unsigned char {
    Blacksmithing = 0,
    Alchemy       = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SecondPack : int {
    None               = 0,
    CutsceneBeforePlay = 1,
    CutsceneAfterPlay  = 2,
    CutsceneFinished   = 3,
    DogsUnstreamed     = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ManInYellow : int {
    None           = 0,
    Started        = 1,
    Updated        = 2,
    KnowAboutCapon = 3,
    SpokeWithCapon = 4,
    Aborted        = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_PlayTrackView* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GetTipOfArrow : int {
    None          = 0,
    Started       = 1,
    ExactPosition = 2,
    Completed     = 3,
    Failed        = 4,
    ZajicRobbed   = 5,
    Aborted       = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum CekamNaDialog : int {
    None       = 0,
    MuzuMluvit = 1,
    Cekam      = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_ActorAction {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZjistiKdeJeSam : int {
    None           = 0,
    Active         = 1,
    HracNaselStopu = 2,
    HracNaselSama  = 3,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_SoulNumericPropertyTrigger<enum wh::rpgmodule::E_SoulCounter> > {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_CraftingMaterialItemClass* {
};

//size in bytes: 0x8
//pointer dimension: 0
struct wh::soundmodule::S_SkaldAtlRtpcId {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::conceptmodule::C_SkirmishStatisticsAsset : class wh::conceptmodule::C_BaseAsset {
    0x8  : Name   : class CryStringT<char>;
    0x10 : Target : class CryStringT<char>;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0xf0
//pointer dimension: 0
class wh::entitymodule::C_DisableDoorInteractivity : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Doors        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::entitymodule::C_AnimDoor *,class std::allocator<class wh::entitymodule::C_AnimDoor *> > >*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum whatPainkiller : int {
    None       = 0,
    Wine       = 1,
    Spirit     = 2,
    Beer       = 3,
    Painkiller = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum crime_arrestChatResult : int {
    accept = 0,
    reject = 1,
    evade  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum learnAboutChamberlain : int {
    None      = 0,
    Started   = 1,
    Updated   = 2,
    Completed = 3,
    Aborted   = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_StanceCondition* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3a7ab68
enum enum wh::entitymodule::clothing::C_ClothingAttachmentProxy::E_GameState::Type : unsigned char {
    Show   = 0,
    Delete = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HorseTracking : int {
    None        = 0,
    Active      = 1,
    Done        = 2,
    FirstTrack  = 3,
    SecondTrack = 4,
    ThirdTrack  = 5,
    FourthTrack = 6,
    FifthTrack  = 7,
    Fail        = 8,
    CampFinal   = 9,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ShowInHouse : int {
    None          = 0,
    Dialog        = 1,
    VictimDeath   = 2,
    CheckDeadBody = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum zachranaPtacka_prisonersWithdrawnItemMode : int {
    None                = 0,
    TorchBeforeMovement = 1,
    Weapon              = 2,
    Done                = 3,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::clothing::S_CharacterComponentName> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3ab3c58
enum enum wh::guimodule::E_CutsceneEventType::Type : int {
    SkipPoint  = 0,
    CustomText = 1,
    Subtitle   = 2,
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef, class wh::conceptmodule::C_TypedPortRef<class std::vector<class wh::xgenaimodule::C_LinkableObject *,class std::allocator<class wh::xgenaimodule::C_LinkableObject *> > > {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum pobijJeVsechny : int {
    None         = 0,
    Active       = 1,
    Done         = 2,
    doneAleUtekl = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct Color_tpl<float>* {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab4018
enum enum wh::xgenaimodule::E_InformationMessageStatus::Type : unsigned char {
    Created  = 0,
    Received = 1,
    Deleted  = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ClothOwnership : int {
    Dorota = 0,
    Henry  = 1,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3bb9fe0
enum enum wh::xgenaimodule::activitysystem::E_DogObjective::Type : unsigned char {
    Wait        = 0,
    Mark        = 1,
    Bark        = 2,
    Dig         = 3,
    Follow      = 4,
    FollowHeel  = 5,
    FollowRider = 6,
    Search      = 7,
    MeleeCombat = 8,
    Fetch       = 9,
    Hunt        = 10,
    Runaway     = 11,
    Alarm       = 12,
    Fail        = 13,
    Move        = 14,
    FunMove     = 15,
    FunOnSo     = 16,
    FunOnPoint  = 17,
    Chase       = 18,
    Eat         = 19,
    ShakeOut    = 20,
    Distract    = 21,
    Pet         = 22,
    SearchItem  = 23,
    Teleport    = 24,
    Invalid     = 25,
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3e88
enum enum wh::playermodule::E_SaveGameWithNotificationState::Type : unsigned char {
    None    = 0,
    Pending = 1,
    Done    = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class _smart_ptr<class wh::playermodule::C_GenericRandomEvent>* {
};

//size in bytes: 0x208
//pointer dimension: 0
struct wh::entitymodule::S_ActionRequestImpl<struct wh::entitymodule::S_ActorAnimRequest> : struct wh::entitymodule::S_ActionRequest, struct wh::entitymodule::S_ActionAnimRequest, struct wh::entitymodule::S_ActionFullBodyAnimRequest, struct wh::entitymodule::S_ActorAnimRequest {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::rpgmodule::C_AddReward : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x40 : AddReward    : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x80 : OnAdded      : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0xc0 : Rewards      : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::rpgmodule::I_Reward>,class std::allocator<class std::shared_ptr<class wh::rpgmodule::I_Reward> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LovSPtackemPlayerThreats : int {
    None            = 0,
    ActiveThreats   = 1,
    InactiveThreats = 2,
    Finished        = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_MinigameTutorialNode* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct IParticleManager* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_InteractionTriggerNode> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_StaticDataPort* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum dogWithBonka : int {
    None            = 0,
    Started         = 1,
    searchingForDog = 2,
    dogFound        = 3,
    dogLives        = 4,
    dogDies         = 5,
    Canceled        = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TaborCertovkaFindCap : int {
    None                   = 0,
    Started                = 1,
    Completed              = 2,
    CompletedBeforeStarted = 3,
    Aborted                = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum WeddingFood : int {
    None                    = 0,
    Started                 = 1,
    GotEnoughFood           = 2,
    FoodDelivered           = 3,
    FoodDeliveredAnotherWay = 4,
    Aborted                 = 5,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_DisableSkipTime> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<class std::vector<class CryStringT<char>,class std::allocator<class CryStringT<char> > > > : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_ScriptContextPresetBaseEffect<struct wh::xgenaimodule::S_GameScriptContextPreset>* {
};

//size in bytes: 0x1a8
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ActionDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::xgenaimodule::NPCState::C_Action>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::C_Action>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::C_Action> > > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_CutsceneHolderAsset* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PohybMapy : int {
    None        = 0,
    Krizan      = 1,
    Hrac        = 2,
    KrizanStash = 3,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::databasemodule::C_ObjectDatabaseKeyIndexed<class wh::databasemodule::C_ObjectTreeDatabase<struct wh::rpgmodule::S_SkillTeacher,class std::vector>,class wh::databasemodule::C_ObjectDatabaseDefaultKeyExtractor<struct wh::rpgmodule::S_SkillTeacher> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::entitymodule::C_StashManager* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::framework::S_DerivedExampleNode* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SigismundCampMoving : int {
    Present   = 0,
    Abandoned = 1,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindArcherAlone : int {
    None               = 0,
    SpokeWithInnkeeper = 1,
    InspectedLatrine   = 2,
    BehindeLatrine     = 3,
    FoundArcherAlone   = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_FactionVisibility> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum dogObjective : int {
    wait        = 0,
    mark        = 1,
    bark        = 2,
    dig         = 3,
    follow      = 4,
    followHeel  = 5,
    followRider = 6,
    search      = 7,
    meleeCombat = 8,
    fetch       = 9,
    hunt        = 10,
    runaway     = 11,
    alarm       = 12,
    fail        = 13,
    move        = 14,
    funMove     = 15,
    funOnSo     = 16,
    funOnPoint  = 17,
    chase       = 18,
    eat         = 19,
    shakeOut    = 20,
    distract    = 21,
    pet         = 22,
    searchItem  = 23,
    teleport    = 24,
    invalid     = 25,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_RPGModule* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum hledaniLichtenstejna_vsivaMari_warningKozina : int {
    None                  = 0,
    WaitingToGo           = 1,
    GoingToWarn           = 2,
    Returning             = 3,
    ConfrontedNearHideout = 4,
    YellingAtPlayer       = 5,
    Done                  = 6,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressAbortableRotatable : int {
    None        = 0,
    Active      = 1,
    DoneOnSteal = 2,
    DoneOnSwap  = 3,
    Rotated     = 4,
    Aborted     = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StartDialogWith : int {
    Chat       = 0,
    Interactor = 1,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_UseMinigameAction* {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_CartHorseSlot {
};

//size in bytes: 0x70
//pointer dimension: 0
struct wh::entitymodule::S_ItemClassAlias : struct wh::entitymodule::S_ItemClass {
    0x8  : Id           : struct CryGUID;
    0x18 : Name         : class CryStringT<char>;
    //Getter: WHGame.dll+0x295f8c4
    get  : Tags         : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x38 : SourceItemId : struct CryGUID;
    0x48 : IconId       : class CryStringT<char>;
    0x50 : UIInfo       : class CryStringT<char>;
    0x58 : UIName       : class CryStringT<char>;
    0x60 : Weight       : float;
    0x64 : IsQuestItem  : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_DisableActionEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_ChangeStanceAction* {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::xgenaimodule::scheduler::C_ElementInitializerAddBuff : class wh::xgenaimodule::scheduler::C_ElementInitializerBase {
    //Getter: WHGame.dll+0x330fd54
    get  : TargetGuid : unsigned __int64;
    //Getter: WHGame.dll+0x330fd2c
    get  : Role       : class CryStringT<char>;
    0x18 : BuffId     : struct CryGUID;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::combatmodule::C_BattleRegistrationEffect* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_SwapWeaponAction* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindBeer : int {
    None                = 0,
    FromVrba            = 1,
    FromKuratko         = 2,
    SmilToldMeAboutBeer = 3,
    BeerFound           = 4,
    Canceled            = 5,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SoulDerivStatCounter* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressFailableBejk : int {
    None          = 0,
    Active        = 1,
    Done          = 2,
    Bonz          = 3,
    Canceled      = 4,
    CancelZaby    = 5,
    CancelNestihl = 6,
    Aborted       = 7,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::dialogmodule::data::C_Dialogue* {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::framework::S_TimeOfDay> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaStreaming : int {
    None                              = 0,
    StreamedSedmStatecnych            = 1,
    UnstreamedPapezskyLegat           = 2,
    StreamedPapezskyLegat             = 3,
    UnstreamedPrepadeniVlasskehoDvora = 4,
    StreamedErik                      = 5,
    UnstreamedOblehaniSuchdole        = 6,
    StreamedOblehaniSuchdole          = 7,
    UnstreamedRutinaAVypad            = 8,
    StreamedRutinaAVypad              = 9,
    UnstreamedHladAZmar               = 10,
    StreamedHladAZmar                 = 11,
    UnstreamedStealthMiseZaJindru     = 12,
    StreamedFinale                    = 13,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SaveCertovka : int {
    None       = 0,
    FastTravel = 1,
    Teleport   = 2,
    EndTour    = 3,
    Done       = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ActorStateTrigger<enum wh::entitymodule::E_ActorState::Type> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_TimeCounter<struct wh::rpgmodule::T_WorldTimePolicy>* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::shopmodule::C_AddShopDefaultItem> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SwordPartsProgress : int {
    None   = 0,
    Jimram = 1,
    Jindra = 2,
    Used   = 3,
};

//size in bytes: 0x88
//pointer dimension: 0
class wh::guimodule::C_UIFlashInfoItemMissile : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashInfoItem, class wh::guimodule::C_UIFlashInfoItemEquippable, class wh::guimodule::C_UIFlashInfoItemWeapon {
    0x8  : Id               : class CryStringT<char>;
    0x10 : Name             : class CryStringT<char>;
    0x18 : IconId           : class CryStringT<char>;
    0x20 : ItemInfoCategory : class CryStringT<char>;
    0x28 : Desc             : class CryStringT<char>;
    0x30 : Stolen           : unsigned int;
    0x38 : StolenLocation   : class CryStringT<char>;
    0x40 : Weight           : float;
    0x48 : Price            : float;
    0x4c : IsQuestItem      : bool;
    0x50 : Condition        : float;
    0x54 : ItemHealthState  : unsigned int;
    0x58 : Quality          : unsigned int;
    0x5c : Durability       : unsigned int;
    0x68 : StrengthReq      : unsigned int;
    0x6c : DiffStrength     : int;
    0x74 : CurrAgility      : int;
    0x78 : Power            : float;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum doublefail : int {
    None           = 0,
    Started        = 1,
    Completed      = 2,
    Failed_prohral = 3,
    Failed_utekl   = 4,
};

//size in bytes: 0xa0
//pointer dimension: 0
class wh::questmodule::C_Gameplay : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_ModuleBase {
    0x10 : Name           : class CryStringT<char>;
    0x18 : RuntimeState   : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x98 : HibernateMode  : enum wh::conceptmodule::E_HibernateMode::Type;
    0x99 : VoiceNamespace : class boost::optional<bool>;
    0x60 : Types          : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::runtime::C_RuntimeType> > > >;
    0x78 : Assets         : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset>,class std::allocator<class std::shared_ptr<class wh::conceptmodule::C_BaseAsset> > > >;
    0x48 : Nodes          : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::C_Node>,class std::allocator<class _smart_ptr<class wh::conceptmodule::C_Node> > > >;
    0x9b : RequiredDLC    : enum wh::shared::E_DLC::Type;
    //Getter: WHGame.dll+0x25fe5ec
    get  : NodesView      : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::C_Node>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::C_Node> > > >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::framework::C_Action<class wh::entitymodule::I_ActorAction> : class wh::framework::I_Action {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::entitymodule::E_HorseState {
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::playermodule::E_BlacksmithConceptEvent {
};

//size in bytes: 0x1
//pointer dimension: 0
//enum vtable: 3ab3c08
enum enum wh::framework::E_ItemTransferDirection::Type : unsigned char {
    ToPlayer     = 0,
    FromPlayer   = 1,
    Confiscation = 2,
};

//size in bytes: 0x1c
//pointer dimension: 0
struct QuatT_tpl<float> {
    0x0  : Rotation : struct Quat_tpl<float>;
    0x10 : Position : struct Vec3_tpl<float>;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::shared::E_DLC {
};

//size in bytes: 0x8
//pointer dimension: 1
char* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KrystofSurrendering : int {
    None         = 0,
    Surrendering = 1,
    MovedOn      = 2,
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::xgenaimodule::C_XGenAIModule {
    //Getter: WHGame.dll+0x30e0708
    get : SmartEntityDatabase : class wh::xgenaimodule::C_SmartEntityDatabase*;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum movementDoorClosingPolicy : int {
    automatic   = 0,
    leaveClosed = 1,
    leaveOpened = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_LinkableObject* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_FactionReputationReward* {
};

//size in bytes: 0x1
//pointer dimension: 0
enum wh::entitymodule::E_ActorIdleState::Type {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum openWorld_cooldownEventType : int {
    dialogPlayerGreeting  = 0,
    playerGreeting        = 1,
    playerCrimeReaction   = 2,
    situation_npcGreeting = 3,
    situation_other       = 4,
    soliloquy             = 5,
    playerSoliloquy       = 6,
    commentCompanionHorse = 7,
    commentCompanionDog   = 8,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum HalberdPatrol : int {
    None       = 0,
    MovePoint1 = 1,
    LookAt     = 2,
    MovePoint2 = 3,
    Done       = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TarasDistanceAmbience : int {
    TooFar  = 0,
    InRange = 1,
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::dialogmodule::C_DialogueDubbingDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::dialogmodule::S_DialogueDubbing,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::dialogmodule::S_DialogueDubbing,class std::allocator<struct wh::dialogmodule::S_DialogueDubbing> > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::entitymodule::C_DoorAnimSetDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<struct wh::entitymodule::S_DoorAnimSet,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_DoorAnimSet,class std::allocator<struct wh::entitymodule::S_DoorAnimSet> > >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_PlayerOutfitOverride* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Treasure : int {
    Burried     = 0,
    WithPlayer  = 1,
    WithHanka   = 2,
    WithSvatava = 3,
    None        = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::shopmodule::C_Shop *,class std::allocator<class wh::shopmodule::C_Shop *> > >* {
};

//size in bytes: 0x210
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_AnimAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1f0 : RequiresMovement     : bool;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ZizkasHorseMigration : int {
    Default                      = 0,
    Certovka_SedmStatecnychStart = 1,
    Suchdol_UtokNaMalesovEnd     = 2,
};

//size in bytes: 0xd0
//pointer dimension: 0
class wh::conceptmodule::C_Switch : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_TemplatedNode {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x25db540
    get  : TypeT        : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x25ae4e4
    get  : ValueTypes   : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    //Getter: WHGame.dll+0x25ae49c
    get  : SwitchValues : class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;
    0x48 : Switch       : class wh::conceptmodule::C_PortRef*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MonologOnTrigger : int {
    None             = 0,
    TriggerActive    = 1,
    RequestMonolog   = 2,
    MonologCompleted = 3,
};

//size in bytes: 0x80
//pointer dimension: 0
class wh::guimodule::C_UIFlashListItemSelectionCost : class wh::guimodule::C_UIFlashObject, class wh::guimodule::C_UIFlashListItem, class wh::guimodule::C_UIFlashListItemSelection {
    0x8  : Id              : class CryStringT<char>;
    0x10 : Name            : class CryStringT<char>;
    0x18 : ClassId         : int;
    0x20 : Category        : class CryStringT<char>;
    0x28 : IconId          : class CryStringT<char>;
    0x30 : Amount          : float;
    0x34 : MainStat        : float;
    0x38 : Health          : float;
    0x3c : Quality         : unsigned int;
    0x40 : ItemHealthState : unsigned int;
    0x44 : Weight          : float;
    0x48 : Price           : float;
    0x4c : IsEnable        : bool;
    0x50 : OutfitPresence  : unsigned int;
    0x54 : IsQuestItem     : bool;
    0x58 : Stolen          : unsigned int;
    0x5c : Dirt            : float;
    0x60 : Blood           : float;
    0x64 : BuffIcon        : unsigned int;
    0x68 : BuffDefId       : class CryStringT<char>;
    0x70 : IsSelected      : bool;
    0x78 : Cost            : float;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_LinkEffectBase> {
};

//size in bytes: 0x68
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_ChangeEquipmentElement : class wh::xgenaimodule::NPCState::I_Element {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Pillagers : int {
    Looting = 0,
    Barking = 1,
    Done    = 2,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::combatmodule::E_CombatTutorialPreset {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NebakovPodezreni : int {
    None                   = 0,
    ZakladniPodezdreni     = 1,
    VelkePodezdreni        = 2,
    NebakNalezen           = 3,
    ZakladniPodezdreniDone = 4,
    VelkePodezdreniDone    = 5,
};

//size in bytes: 0x58
//pointer dimension: 0
class wh::entitymodule::C_WeaponPreset : class wh::entitymodule::C_ItemHealthProvider {
    0x8  : Quality            : unsigned int;
    0xc  : Health             : float;
    0x10 : HealthVariation    : float;
    0x14 : Condition          : float;
    0x18 : ConditionVariation : float;
    0x20 : weapon_preset_id   : struct CryGUID;
    0x30 : weapon_preset_name : class CryStringT<char>;
    0x38 : social_class_id    : int;
    0x3c : wealth_level       : int;
    0x40 : items              : class std::reference_wrapper<class std::vector<struct wh::entitymodule::S_WeaponPresetItem,class std::allocator<struct wh::entitymodule::S_WeaponPresetItem> > >;
};

//size in bytes: 0x48
//pointer dimension: 0
class wh::xgenaimodule::BehaviorTree::C_CallDecorator : class wh::xgenaimodule::BehaviorTree::I_Node {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ObjectiveKillJakes : int {
    None                            = 0,
    Active                          = 1,
    Done                            = 2,
    Canceled_PlayerDoesntWantToKill = 3,
    Canceled_BozenaDead             = 4,
    Aborted                         = 5,
};

//size in bytes: 0x50
//pointer dimension: 0
class wh::entitymodule::C_ItemClassDescriptor : class wh::entitymodule::I_ItemDescriptor, class wh::entitymodule::C_HomogenousItemDescriptor, class wh::entitymodule::C_ItemPropertyDescriptor {

    //non-vtable method: WHGame.dll+0xd7cca0
    GetMatchingItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
    //non-vtable method: WHGame.dll+0xd7d114
    FullyMatchesItems( classstd::vector<classwh::entitymodule::C_Item*,classstd::allocator<classwh::entitymodule::C_Item*> > const & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Fog : int {
    None                      = 0,
    StreamedZachranaPtacka    = 1,
    UnstreamedSetkaniVRatbori = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_CombatHistoryTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressHidenDone : int {
    None   = 0,
    Active = 1,
    Done   = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum prepadeni_ptacekInFormation : int {
    None     = 0,
    Chat     = 1,
    Polylog  = 2,
    Complete = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PtacekPreset : int {
    PosledniPomazani_BattleWithHelmet         = 0,
    ZachranaPtacka_Civil                      = 1,
    SetkaniVRatbori_CivilWithSword            = 2,
    UtokNaMalesov_BattleWithHelmet            = 3,
    PapezskyLegat_Civil                       = 4,
    HladAZmar_BattleNoHelmet                  = 5,
    HladAZmar_BattleWithHelmet                = 6,
    RutinaAVypad_BattlePresetWithHelmetAndBow = 7,
    ZoufalaObranaZaBohutu_BattleNoHelmet      = 8,
    ZoufalaObranaZaBohutu_BattleWithHelmet    = 9,
    EndGame_Civil                             = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum aliveState : int {
    None  = 0,
    Alive = 1,
    Dead  = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_AddBuffElement* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FriendsSupportProgress : int {
    None            = 0,
    RunAmbush       = 1,
    ClimbDownLadder = 2,
    GuardAmbush     = 3,
    RunLastStand    = 4,
    ClimbUpLadder   = 5,
    GuardLastStand  = 6,
    Done            = 7,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Progress : int {
    None   = 0,
    Active = 1,
    Done   = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_FactionManager* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum fightResult : int {
    None       = 0,
    PlayerWon  = 1,
    PlayerLost = 2,
    PlayerFled = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
struct IRenderNode* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FindAndDigGraveObjective : int {
    None      = 0,
    Active    = 1,
    AltActive = 2,
    Done      = 3,
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::xgenaimodule::activitysystem::E_DogCompanionMode {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_SetOwner> {
};

//size in bytes: 0x28
//pointer dimension: 0
struct wh::xgenaimodule::TypeDescriptors::S_Enum {
    0x0  : Name            : class CryStringT<char>;
    0x20 : ExportToConcept : bool;
    0x8  : Values          : class std::vector<struct wh::xgenaimodule::TypeDescriptors::S_Value,class std::allocator<struct wh::xgenaimodule::TypeDescriptors::S_Value> >;
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::rpgmodule::storm::C_ContextPresetOperator<struct wh::rpgmodule::storm::operation::Add> : class wh::rpgmodule::storm::I_Operator {
    //Getter: WHGame.dll+0x2c83608
    get : name : class CryStringT<char>;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3bc0058
enum enum wh::dialogmodule::E_DialogCameraType : int {
    BONE_MASTER     = 0,
    BONE_MEDIUM     = 1,
    BONE_CLOSE_SHOT = 2,
    BONE_CLOSEUP    = 3,
    CUSTOM          = 4,
    LAST            = 5,
    OBSOLETE        = 6,
    BONE_FIRST      = 1,
    BONE_LAST       = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MatkaADite : int {
    VykopatelnyHrob         = 0,
    DialogSHrobnikemAktivni = 1,
    ChcemeObeLebky          = 2,
    LebkyCekajiNaSpojeni    = 3,
    LebkyJsouSpolu          = 4,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::playermodule::C_PlayerSwitcherConceptNode> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum talkToBarbora : int {
    None    = 0,
    Done    = 1,
    Aborted = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_Stash *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum StealthMalesov : int {
    None          = 0,
    Active        = 1,
    LadderIsReady = 2,
    Completed     = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_RoleOperator<struct wh::rpgmodule::storm::operation::Add>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ProgressPanna : int {
    None                = 0,
    UdelejOhnisteNaBabe = 1,
    PannaHotova         = 2,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BardIsMurderer : int {
    None                                = 0,
    BardDenounced                       = 1,
    BardKilled                          = 2,
    SpokeWithKaterinaAboutDenouncedBard = 3,
    SpokeWithKaterinaAboutDeathBard     = 4,
    Aborted                             = 5,
    Failed                              = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::C_DistanceTrigger* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_HoodItemClass* {
};

//size in bytes: 0x20
//pointer dimension: 0
class wh::entitymodule::clothing::C_ClothingHidingGroup {
    0x8  : Name          : class CryStringT<char>;
    0x10 : Index         : unsigned char;
    //Getter: WHGame.dll+0x2830774
    get  : EquipmentPart : class CryStringT<char>;
    0x18 : SystemOnly    : bool;
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::xgenaimodule::scheduler::C_ElementInitializerEnableRoleOnHub* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b07948
enum HitReactionType : int {
    Melee        = 1,
    MeleeStealth = 2,
    Collision    = 3,
    Fall         = 5,
    Bullet       = 6,
    Decoy        = 8,
    Stone        = 9,
    Shock        = 10,
};

//size in bytes: 0x10
//pointer dimension: 0
class boost::optional<struct Vec3_tpl<float> > {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum NPCDialogProgress : int {
    None    = 0,
    Waiting = 1,
    Active  = 2,
    Done    = 3,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::storm::C_NotSelector* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_TimeOfDayWatch> {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_DistanceTrigger> {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum JezekTeleport : int {
    None                = 0,
    WaitForEnteringCamp = 1,
    WaitingForDistance  = 2,
    Teleporting         = 3,
    Done                = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_UIProgress* {
};

//size in bytes: 0x8
//pointer dimension: 1
const class wh::dialogmodule::data::C_PropCommand* {
};

//size in bytes: 0x8
//pointer dimension: 1
struct Color_tpl<unsigned char>* {
};

//size in bytes: 0xb8
//pointer dimension: 0
class wh::xgenaimodule::C_AIConceptSignalDatabase : class wh::databasemodule::C_ObjectTreeDatabase<struct wh::xgenaimodule::S_AIConceptSignal,class std::vector>, class wh::databasemodule::C_ObjectDatabase<struct wh::xgenaimodule::S_AIConceptSignal,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<struct wh::xgenaimodule::S_AIConceptSignal,class std::allocator<struct wh::xgenaimodule::S_AIConceptSignal> > >;
};

//size in bytes: 0x1
//pointer dimension: 0
struct wh::rpgmodule::E_SkirmishEventFlag {
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_DoorThroughData* {
};

//size in bytes: 0x128
//pointer dimension: 0
class wh::rpgmodule::C_TemporaryFactionEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : Souls        : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<class wh::rpgmodule::I_Soul *,class std::allocator<class wh::rpgmodule::I_Soul *> > >*;
    0xd0 : Faction      : class wh::conceptmodule::C_TypedPortRef<struct wh::rpgmodule::S_FactionDefinitionID>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::xgenaimodule::NPCState::C_FilteringConditionBelongsToInventory* {
};

//size in bytes: 0x18
//pointer dimension: 0
class wh::guimodule::C_UIFlashObject {
    0x8  : Id   : class CryStringT<char>;
    0x10 : Name : class CryStringT<char>;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_DisableSkipTime* {
};

//size in bytes: 0xd8
//pointer dimension: 0
class wh::entitymodule::C_ShowPlayerChatActionHintEffect : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90 : ActionPrompt : class wh::conceptmodule::C_TypedPortRef<class wh::framework::C_LocalizedString>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_ActorAnimPickUpRequest* {
};

//size in bytes: 0x78
//pointer dimension: 0
class wh::playermodule::C_BlacksmithSongDatabase : class wh::databasemodule::C_ObjectDatabaseBase, class wh::databasemodule::C_ObjectDatabase<class std::shared_ptr<class wh::playermodule::C_BlacksmithSong>,class std::vector> {
    0x30 : Objects : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::playermodule::C_BlacksmithSong>,class std::allocator<class std::shared_ptr<class wh::playermodule::C_BlacksmithSong> > > const >;

    //non-vtable method: WHGame.dll+0x2665f6c
    Rebuild( );
    //vtable offset: 0x48
    Load( );
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::conceptmodule::C_TypedPortRef<struct wh::entitymodule::S_ClothingPresetGUID> : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::I_Port, class wh::conceptmodule::C_PortRef {
    0x28 : Name  : class CryStringT<char>;
    //Getter: WHGame.dll+0x262bb84
    get  : Value : class CryStringT<char>;
    //Getter: WHGame.dll+0x19a0470
    get  : Type  : class std::basic_string_view<char,struct std::char_traits<char> >;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //vtable offset: 0x88
    Trigger( );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KomplikovanaSpagetovina : int {
    None                                             = 0,
    ZacatekHorniciDead                               = 1,
    ZacatekHorniciNazivu                             = 2,
    DopisOdevzdanOk                                  = 3,
    DopisOdevzdanMehAVykecan                         = 4,
    DopisOdevzdanMehANevykecan                       = 5,
    VydiraniUspech                                   = 6,
    VydiraniNeuspech                                 = 7,
    HracSePridalKMajiteli                            = 8,
    HracZabilHornikyAOdevzdalDopisMarkoltoviPoDobrem = 9,
    HracZabilHornikyIMarkolta                        = 10,
    HracZabilMarkoltaPredOdevzdanimDopisu            = 11,
    Canceled                                         = 12,
    Failed                                           = 13,
    Aborted                                          = 14,
};

//size in bytes: 0x8
//pointer dimension: 0
struct I3DEngine {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum TalkToVaskoObjective : int {
    None               = 0,
    FoundAbandonedCamp = 1,
    FoundCumansInCamp  = 2,
    Completed          = 3,
    Aborted            = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_AlchemyRecipeStep* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedArrayPortRef<class CryStringT<char> >* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum DesperateDefenseAsBohuta_CertCommands : int {
    None                   = 0,
    NoBark                 = 1,
    PlayerStaysAtCourtyard = 2,
    PlayerIsNotComing      = 3,
    PlayerCame             = 4,
    PlayerCameDone         = 5,
    ReturnFire             = 6,
    AttackOnGateUnderway   = 7,
    OilSpilled             = 8,
    CertLeaving            = 9,
    Done                   = 10,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 3b9d670
enum enum wh::rpgmodule::E_CompanionEvent : int {
    Hit            = 0,
    Kill           = 1,
    AnimalKill     = 2,
    Feed           = 3,
    POIDiscovery   = 4,
    Play           = 5,
    ContextCommand = 6,
    Fetch          = 7,
    Distraction    = 8,
    Praise         = 9,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::xgenaimodule::S_MonologByAliasEventData* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum ReportToGuards : int {
    None           = 0,
    ReportToGuards = 1,
    Reported       = 2,
    Failed         = 3,
    Aborted        = 4,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum QuestFailsWithZikmundCampEnd : int {
    None                       = 0,
    Aborted_ZikmundCampEnd     = 1,
    Aborted_AttackOnMalesovEnd = 2,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::playermodule::C_PlayerData* {
};

//size in bytes: 0x90
//pointer dimension: 0
class wh::playermodule::C_DisableSkipTime : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10 : Name         : class CryStringT<char>;
    0x18 : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28 : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get  : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48 : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum BetContest_FighterSabotage : int {
    None          = 0,
    PoisonFighter = 1,
    StartFight    = 2,
    Done          = 3,
    PotionLost    = 4,
    Failed        = 5,
    Aborted       = 6,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::entitymodule::S_WeaponPresetItem* {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_Function* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum inspectNewMudder : int {
    None        = 0,
    bodyInspect = 1,
    witnessChat = 2,
    doneAll     = 3,
    Aborted     = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_SumCounter<int>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LadderClimbingProgress : int {
    None             = 0,
    PtacekIsClimbing = 1,
    HansIsClimbing   = 2,
    SamIsClimbing    = 3,
    KomarIsClimbing  = 4,
    Done             = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FriarKnightsBehavs : int {
    None                = 0,
    Initial             = 1,
    AnyCombatInProgress = 2,
    IncidentResolved    = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum potion : int {
    None                              = 0,
    Started                           = 1,
    poison                            = 2,
    deliveredPoison                   = 3,
    deliveredHealthPotion             = 4,
    deliberatelyDeliveredPoison       = 5,
    deliberatelyDeliveredHealthPotion = 6,
    spokeWithKubaAboutPoison          = 7,
    spokeWithMillerAboutPoison        = 8,
};

//size in bytes: 0x8
//pointer dimension: 1
struct wh::playermodule::S_PlayerId* {
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_StateProxy<class wh::conceptmodule::C_Effect> > {
};

//size in bytes: 0x1c0
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_PickUpAction : class wh::xgenaimodule::NPCState::C_Action, class wh::xgenaimodule::NPCState::C_CodeAction, class wh::xgenaimodule::NPCState::C_FastForwardHandlingAction, class wh::xgenaimodule::NPCState::C_AnimActionBase, class wh::xgenaimodule::NPCState::C_ItemHandlingAction {
    0x8   : Name                 : class CryStringT<char>;
    0x10  : Urgency              : enum wh::entitymodule::E_Urgency::Type;
    0x14  : Priority             : int;
    //Getter: WHGame.dll+0x32573cc
    get   : DisabledForUrgencies : class boost::optional<class CryStringT<char> >;
    0x20  : Conditions           : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Condition> > > >;
    0x38  : Effects              : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_Effect> > > >;
    0x50  : FilteringConditions  : class std::reference_wrapper<class std::vector<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition>,class std::allocator<class std::shared_ptr<class wh::xgenaimodule::NPCState::I_FilteringCondition> > > >;
    0x1a0 : Hand                 : enum wh::xgenaimodule::E_HandType::Type;
};

//size in bytes: 0x198
//pointer dimension: 0
class wh::entitymodule::C_ProfileStateTrigger : class wh::conceptmodule::C_SharedResource, class wh::conceptmodule::C_Node, class wh::conceptmodule::C_AutoTriggerable<class wh::conceptmodule::C_Node>, class wh::conceptmodule::C_Effect {
    0x10  : Name         : class CryStringT<char>;
    0x18  : RuntimeState : enum wh::conceptmodule::E_NodeRuntimeState;
    0x28  : Ports        : class std::reference_wrapper<class std::vector<class _smart_ptr<class wh::conceptmodule::I_Port>,class std::allocator<class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    //Getter: WHGame.dll+0x262b834
    get   : PortsView    : class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class _smart_ptr<class wh::conceptmodule::I_Port>,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class _smart_ptr<class wh::conceptmodule::I_Port> > > >;
    0x48  : IsActive     : class wh::conceptmodule::C_TypedPortRef<bool>*;
    0x90  : Profiles     : class wh::conceptmodule::C_TypedArrayPortRef<class std::vector<struct wh::entitymodule::S_LayerProfile,class std::allocator<struct wh::entitymodule::S_LayerProfile> > >*;
    0xd0  : OnLoaded     : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;
    0x110 : OnUnloaded   : class wh::conceptmodule::C_TypedPortRef<struct wh::conceptmodule::S_Trigger>*;

    //vtable offset: 0x18
    OnBeforeSerialization( );
    //vtable offset: 0x18
    OnAfterSerialization( );
    //vtable offset: 0x18
    OnBeforeDeserialization( );
    //vtable offset: 0x18
    OnAfterDeserialization( );
    //No-op method (instant return)
    EnableDebug( );
    //non-vtable method: WHGame.dll+0x262bde4
    Save( );
    //non-vtable method: WHGame.dll+0x262b980
    Load( classXmlNodeRef );
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum KubenkaHorseStreaming : int {
    None                              = 0,
    StreamedSedmStatecnych            = 1,
    UnstreamedPrepadeniVlasskehoDvora = 2,
    StreamedEndGame                   = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum GoToSeePapalLegate : int {
    None                   = 0,
    WaitTillMidnight       = 1,
    SpeakWithCert          = 2,
    FastTraveledToLorecInn = 3,
};

//size in bytes: 0x18
//pointer dimension: 0
class boost::container::flat_map<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationResultKey,struct wh::xgenaimodule::S_SmartObjectAnimation,struct std::less<struct wh::xgenaimodule::S_SmartObjectHelperSetAnimationResultKey>,void> {
};

//size in bytes: 0x28
//pointer dimension: 0
class wh::playermodule::C_AlchemyFeedback {
    0x8  : Id         : int;
    0xc  : Type       : enum wh::playermodule::E_AlchemyFeedbacks::Type;
    0x10 : MetaroleId : class CryStringT<char>;
    0x18 : ItemId     : struct CryGUID;
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::rpgmodule::C_AreaTrigger> {
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::guimodule::C_UIFlashListCombosGroup : class wh::guimodule::C_UIFlashObject {
    0x8  : Id       : class CryStringT<char>;
    0x10 : Name     : class CryStringT<char>;
    0x18 : IconId   : class CryStringT<char>;
    0x20 : Order    : int;
    0x24 : Total    : int;
    0x28 : children : class std::vector<class std::shared_ptr<class wh::guimodule::C_UIFlashListCombo>,class std::allocator<class std::shared_ptr<class wh::guimodule::C_UIFlashListCombo> > >;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::guimodule::C_FaderController* {
};

//size in bytes: 0x8
//pointer dimension: 0
double {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum Teleporting : int {
    None        = 0,
    Teleporting = 1,
    Teleported  = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::xgenaimodule::C_GameContextTrigger> {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::rpgmodule::storm::C_SetReputation : class wh::rpgmodule::storm::I_Operator {
    0x8 : reputation : float;

    //vtable offset: 0x20
    DebugDraw( classwh::C_DebugDraw & );
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::entitymodule::C_ShowPlayerChatActionHintEffect> {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_TypedPortRef<class wh::entitymodule::C_ItemSlot *>* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum SiegeUpdate : int {
    None   = 0,
    Update = 1,
    Done   = 2,
};

//size in bytes: 0x38
//pointer dimension: 0
struct wh::playermodule::C_RandomEventVariantBase::S_NpcGroup {
    0x0  : SoulPool                 : class CryStringT<char>;
    0x8  : SoulName                 : class CryStringT<char>;
    0x10 : TagPoints                : class CryStringT<char>;
    0x18 : NpcAssetName             : class CryStringT<char>;
    0x20 : SchedulerProxy           : class CryStringT<char>;
    0x28 : Count                    : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x2c : CountStandardDeviation   : class wh::framework::C_NumberWrapper<struct wh::framework::NumberWrapperPolicy::LowerBounded<0,float,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,1> > >;
    0x30 : CountDifficultyAddPerNPC : float;
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_BloodMaskOverride* {
};

//size in bytes: 0x10
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HorseUsageCondition : class wh::xgenaimodule::NPCState::I_Condition {
    0x8 : RequiresEmpty : bool;
};

//size in bytes: 0x40
//pointer dimension: 0
class wh::xgenaimodule::NPCState::C_HandContentConditionBase : class wh::xgenaimodule::NPCState::I_Condition {
    0x8  : DataSource                : enum wh::xgenaimodule::NPCState::E_DataSource;
    0xc  : RequiresEmpty             : bool;
    0xd  : InitializeItemFromRequest : bool;
    0x10 : SetAsideSlotSource        : struct wh::xgenaimodule::NPCState::S_EffectObjectSource;
    0x30 : SetAsideSlotDataSource    : enum wh::xgenaimodule::NPCState::E_DataSource;
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum PogromSkirmishHandler : int {
    None     = 0,
    GoTo     = 1,
    Skirmish = 2,
    Done     = 3,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum MusaMigration : int {
    ZikmunduvTabor    = 0,
    Suchdol           = 1,
    InCertovkaEndGame = 2,
};

//size in bytes: 0x8
//pointer dimension: 0
class _smart_ptr<class wh::conceptmodule::C_EventFunctionBase<class wh::conceptmodule::C_MemberFunction> > {
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::conceptmodule::C_SceneWrapper* {
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum FinaleSave : int {
    UnlockedForFirstNonBattleSave  = 0,
    LockedAfterFirstNonBattleSave  = 1,
    UnlockedForSecondNonBattleSave = 2,
    LockedAfterSecondNonBattleSave = 3,
    UnlockedForBuryingSamSave      = 4,
    LockedAfterBuryingSamSave      = 5,
};

//size in bytes: 0x4
//pointer dimension: 0
//enum vtable: 39a4e80
enum LipoldHungover : int {
    None           = 0,
    Hungover       = 1,
    TalkedToLipold = 2,
    PlayerCured    = 3,
    CuredByTime    = 4,
};

//size in bytes: 0x8
//pointer dimension: 1
class wh::rpgmodule::C_AreaTrigger* {
};

